<library>
    <name>System.Net.Sockets</name>
    <style>../../style/cmdoc.css</style>
    <namespaces>
        <namespace id="System.Net.Sockets">
            <name>System.Net.Sockets</name>
            <classes>
                <class id="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D">
                    <name>NetworkByteStream</name>
                    <groupName>NetworkByteStream</groupName>
                    <syntax> public class NetworkByteStream;</syntax>
                    <baseClass ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
                    <constructors>
                        <constructor id="constructor_NetworkByteStream_2E13D177DCE7D8E604AF0C8D3719BAB44964410B">
                            <name>NetworkByteStream(TcpSocket&amp;&amp; socket_)</name>
                            <syntax>public nothrow NetworkByteStream(TcpSocket&amp;&amp; socket_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>socket_</name>
                                    <type ref="type.11583885"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_ContainedSocket_NetworkByteStream_5877A5C36FA838A6D795E0621A0ED39CD4011345">
                            <name>ContainedSocket()</name>
                            <syntax>public TcpSocket&amp; ContainedSocket();</syntax>
                            <returnType ref="type.11583468"/>
                        </function>
                        <function id="member_function_Read_NetworkByteStream_7CC717A683FCA2CF92D52842966C478342D6429E">
                            <name>Read(byte* buf, long count)</name>
                            <syntax>public override long Read(byte* buf, long count);</syntax>
                            <parameters>
                                <parameter>
                                    <name>buf</name>
                                    <type ref="type.11565928"/>
                                </parameter>
                                <parameter>
                                    <name>count</name>
                                    <type ref="type.11565913"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.11565913"/>
                        </function>
                        <function id="member_function_ReadByte_NetworkByteStream_21122C7CF1FB603091462AA31771B04FFD0B82A4">
                            <name>ReadByte()</name>
                            <syntax>public override int ReadByte();</syntax>
                            <returnType ref="type.11565911"/>
                        </function>
                        <function id="function_group_Write_D92DC91823912B36C766F4E43DF7446D8B47D7F7">
                            <name>Write</name>
                            <overloads>
                                <overload id="member_function_Write_NetworkByteStream_317EB6B6F26CFDE3359732B5FB8227E41DE45730">
                                    <name>Write(byte x)</name>
                                    <syntax>public override void Write(byte x);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>x</name>
                                            <type ref="type.11565908"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Write_NetworkByteStream_7712BF37C41B5F0EEB5FD7F82F08573FC4842CEB">
                                    <name>Write(byte* buf, long count)</name>
                                    <syntax>public override void Write(byte* buf, long count);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>buf</name>
                                            <type ref="type.11565928"/>
                                        </parameter>
                                        <parameter>
                                            <name>count</name>
                                            <type ref="type.11565913"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                    </functions>
                </class>
                <class id="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB">
                    <name>SocketException</name>
                    <groupName>SocketException</groupName>
                    <syntax> public class SocketException;</syntax>
                    <baseClass ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
                    <constructors>
                        <constructor id="constructor_SocketException_A20CCB041CE705F46AB685C2FDBCFF1B63159B6D">
                            <name>SocketException(const String&lt;char>&amp; message_)</name>
                            <syntax>public nothrow SocketException(const String&lt;char>&amp; message_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>message_</name>
                                    <type ref="type.11567125"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                </class>
                <class id="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21">
                    <name>TcpClient</name>
                    <groupName>TcpClient</groupName>
                    <syntax> public class TcpClient;</syntax>
                    <constructors>
                        <constructor id="default_constructor_TcpClient_8C44A0279E08277AD05366824C3F4B0E901E372F">
                            <name>TcpClient()</name>
                            <syntax>public TcpClient();</syntax>
                        </constructor>
                        <constructor id="constructor_TcpClient_A745E50B35C28493221AF81EACFC790B1289D467">
                            <name>TcpClient(TcpSocket&amp;&amp; socket_)</name>
                            <syntax>public nothrow TcpClient(TcpSocket&amp;&amp; socket_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>socket_</name>
                                    <type ref="type.11583885"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpClient_CEDE44377139A1E0E9242C8C55079D69BE011D5B">
                            <name>TcpClient(const String&lt;char>&amp; node, const String&lt;char>&amp; service)</name>
                            <syntax>public TcpClient(const String&lt;char>&amp; node, const String&lt;char>&amp; service);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node</name>
                                    <type ref="type.11567125"/>
                                </parameter>
                                <parameter>
                                    <name>service</name>
                                    <type ref="type.11567125"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpClient_A8BE7F4CFE6BDF07E631FC2139ECF641AD0BE6EC">
                            <name>TcpClient(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options)</name>
                            <syntax>public TcpClient(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node</name>
                                    <type ref="type.11567125"/>
                                </parameter>
                                <parameter>
                                    <name>service</name>
                                    <type ref="type.11567125"/>
                                </parameter>
                                <parameter>
                                    <name>options</name>
                                    <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Close_TcpClient_A5241C8188EE9D31C6C889FC5FA04770D1DC7EBE">
                            <name>Close()</name>
                            <syntax>public void Close();</syntax>
                        </function>
                        <function id="function_group_Connect_57A24B4486AB83D538AEBA46F28767A53F52B749">
                            <name>Connect</name>
                            <overloads>
                                <overload id="member_function_Connect_TcpClient_0345B5EDB721F16CE4A7ABC5B84CFF40CE12E9FE">
                                    <name>Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service)</name>
                                    <syntax>public void Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>node</name>
                                            <type ref="type.11567125"/>
                                        </parameter>
                                        <parameter>
                                            <name>service</name>
                                            <type ref="type.11567125"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Connect_TcpClient_72B2452588C17D23E40409A9CF801BEE04D05E96">
                                    <name>Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options)</name>
                                    <syntax>public void Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>node</name>
                                            <type ref="type.11567125"/>
                                        </parameter>
                                        <parameter>
                                            <name>service</name>
                                            <type ref="type.11567125"/>
                                        </parameter>
                                        <parameter>
                                            <name>options</name>
                                            <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_ContainedSocket_TcpClient_B4451D8C6330B68DFD93B9AD53736838B80CF8F8">
                            <name>ContainedSocket()</name>
                            <syntax>public TcpSocket&amp; ContainedSocket();</syntax>
                            <returnType ref="type.11583468"/>
                        </function>
                        <function id="member_function_GetStream_TcpClient_5A362E2433095459F0AA981DB991674626704B54">
                            <name>GetStream()</name>
                            <syntax>public SharedPtr&lt;System.IO.ByteStream> GetStream();</syntax>
                            <returnType ref="type.11567082"/>
                        </function>
                    </functions>
                </class>
                <class id="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B">
                    <name>TcpListener</name>
                    <groupName>TcpListener</groupName>
                    <syntax> public class TcpListener;</syntax>
                    <constructors>
                        <constructor id="constructor_TcpListener_2441D30CCA331496F7C02618D052A4632F7D4EEC">
                            <name>TcpListener(int port_)</name>
                            <syntax>public TcpListener(int port_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>port_</name>
                                    <type ref="type.11565911"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_AcceptSocket_TcpListener_75DD432353A70AC1F00CD6CC2408479CF260107A">
                            <name>AcceptSocket()</name>
                            <syntax>public TcpSocket AcceptSocket();</syntax>
                            <returnType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                        </function>
                        <function id="member_function_ContainedSocket_TcpListener_734377D88421D21612E8F3272ACD0716D18F60FF">
                            <name>ContainedSocket()</name>
                            <syntax>public TcpSocket&amp; ContainedSocket();</syntax>
                            <returnType ref="type.11583468"/>
                        </function>
                        <function id="function_group_Start_61ED0A94DE977C24F5BE6BE2AABED3854506ACA6">
                            <name>Start</name>
                            <overloads>
                                <overload id="member_function_Start_TcpListener_A2710F7D5FA98DB2901A70E2DC25B36CB98C8B04">
                                    <name>Start()</name>
                                    <syntax>public void Start();</syntax>
                                </overload>
                                <overload id="member_function_Start_TcpListener_682B527365ED6BA1D82C9A9B18F9B1808E83062B">
                                    <name>Start(int backLog)</name>
                                    <syntax>public void Start(int backLog);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>backLog</name>
                                            <type ref="type.11565911"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_Stop_TcpListener_99BD7511123E42FF4DFE470336DAB03BB2686A21">
                            <name>Stop()</name>
                            <syntax>public void Stop();</syntax>
                        </function>
                    </functions>
                </class>
                <class id="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C">
                    <name>TcpSocket</name>
                    <groupName>TcpSocket</groupName>
                    <syntax> public class TcpSocket;</syntax>
                    <constructors>
                        <constructor id="default_constructor_TcpSocket_DF0BF2449F6877B95CE9E69809317066EB448DAA">
                            <name>TcpSocket()</name>
                            <syntax>public TcpSocket();</syntax>
                        </constructor>
                        <constructor id="move_constructor_TcpSocket_73CB2E14A5A9CF0FBECB692AB25B8AF11878E7B8">
                            <name>TcpSocket(TcpSocket&amp;&amp; that)</name>
                            <syntax>public nothrow TcpSocket(TcpSocket&amp;&amp; that);</syntax>
                            <parameters>
                                <parameter>
                                    <name>that</name>
                                    <type ref="type.11583885"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpSocket_7BBFC3A9B038C80807E11493B6F2A0A616197612">
                            <name>TcpSocket(const String&lt;char>&amp; node_, const String&lt;char>&amp; service_)</name>
                            <syntax>public TcpSocket(const String&lt;char>&amp; node_, const String&lt;char>&amp; service_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node_</name>
                                    <type ref="type.11567125"/>
                                </parameter>
                                <parameter>
                                    <name>service_</name>
                                    <type ref="type.11567125"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpSocket_784B753AF6C6B3A5E20534951CF76ABF0259E42F">
                            <name>TcpSocket(const String&lt;char>&amp; node_, const String&lt;char>&amp; service_, ConnectOptions options_)</name>
                            <syntax>public TcpSocket(const String&lt;char>&amp; node_, const String&lt;char>&amp; service_, ConnectOptions options_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node_</name>
                                    <type ref="type.11567125"/>
                                </parameter>
                                <parameter>
                                    <name>service_</name>
                                    <type ref="type.11567125"/>
                                </parameter>
                                <parameter>
                                    <name>options_</name>
                                    <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpSocket_8CB39B9347232ADA2199CC5ED512FE585829D910">
                            <name>TcpSocket(int handle_)</name>
                            <syntax>public nothrow TcpSocket(int handle_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>handle_</name>
                                    <type ref="type.11565911"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_TcpSocket_E44B032EBA8AB74EC03D6CC523F03D122E0FF56A">
                            <name>Accept()</name>
                            <syntax>public TcpSocket Accept();</syntax>
                            <returnType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                        </function>
                        <function id="member_function_Bind_TcpSocket_FBDC712A6CC5C445C552105D5E99732B48D73BAA">
                            <name>Bind(int port)</name>
                            <syntax>public void Bind(int port);</syntax>
                            <parameters>
                                <parameter>
                                    <name>port</name>
                                    <type ref="type.11565911"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Close_TcpSocket_69E540F836E0AAFD92BF79138546DFF1F0A7E53C">
                            <name>Close()</name>
                            <syntax>public void Close();</syntax>
                        </function>
                        <function id="function_group_Connect_9403149A4D7734CB4C5204282218EBEF34B2ABCB">
                            <name>Connect</name>
                            <overloads>
                                <overload id="member_function_Connect_TcpSocket_0345649B29FF0D9518358ECCC8B66371476D2F18">
                                    <name>Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service)</name>
                                    <syntax>public void Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>node</name>
                                            <type ref="type.11567125"/>
                                        </parameter>
                                        <parameter>
                                            <name>service</name>
                                            <type ref="type.11567125"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Connect_TcpSocket_6DE6A7362C6DCF68153D0BDA206B1B51C886B35D">
                                    <name>Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options)</name>
                                    <syntax>public void Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>node</name>
                                            <type ref="type.11567125"/>
                                        </parameter>
                                        <parameter>
                                            <name>service</name>
                                            <type ref="type.11567125"/>
                                        </parameter>
                                        <parameter>
                                            <name>options</name>
                                            <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_Listen_TcpSocket_F97D9BDA68320368D265C419C8667590AD5D8753">
                            <name>Listen(int backLog)</name>
                            <syntax>public void Listen(int backLog);</syntax>
                            <parameters>
                                <parameter>
                                    <name>backLog</name>
                                    <type ref="type.11565911"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Receive_TcpSocket_BF6688890E0F5D9770156E7AFD1E509E7A234B3E">
                            <name>Receive(byte* buffer, int count)</name>
                            <syntax>public int Receive(byte* buffer, int count);</syntax>
                            <parameters>
                                <parameter>
                                    <name>buffer</name>
                                    <type ref="type.11565928"/>
                                </parameter>
                                <parameter>
                                    <name>count</name>
                                    <type ref="type.11565911"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.11565911"/>
                        </function>
                        <function id="member_function_Send_TcpSocket_82B1153B1DEE898B2D2BD09C86750B1AC48EF7C5">
                            <name>Send(byte* buffer, int count)</name>
                            <syntax>public int Send(byte* buffer, int count);</syntax>
                            <parameters>
                                <parameter>
                                    <name>buffer</name>
                                    <type ref="type.11565928"/>
                                </parameter>
                                <parameter>
                                    <name>count</name>
                                    <type ref="type.11565911"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.11565911"/>
                        </function>
                        <function id="member_function_Shutdown_TcpSocket_FC6438556D00862C65FC8B4AAB63D968AF038E11">
                            <name>Shutdown(ShutdownMode mode)</name>
                            <syntax>public void Shutdown(ShutdownMode mode);</syntax>
                            <parameters>
                                <parameter>
                                    <name>mode</name>
                                    <type ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="move_assignment_op_assign_TcpSocket_D024850CAE212AEC23252608B5A3C6F6990775DD">
                            <name>operator=(TcpSocket&amp;&amp; that)</name>
                            <syntax>public nothrow void operator=(TcpSocket&amp;&amp; that);</syntax>
                            <parameters>
                                <parameter>
                                    <name>that</name>
                                    <type ref="type.11583885"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
            </classes>
            <functions>
                <function id="function_group_op_eq_9CE2B2304FAE2EF5B1ED179DC1C4B95113E4C483">
                    <name>operator==</name>
                    <overloads>
                        <overload id="function_op_eq_208CA0919E7D8CE2A8C451288F52CBF7EBB9E803">
                            <name>operator==(ConnectOptions left, ConnectOptions right)</name>
                            <syntax>public bool operator==(ConnectOptions left, ConnectOptions right);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left</name>
                                    <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                </parameter>
                                <parameter>
                                    <name>right</name>
                                    <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.11565906"/>
                        </overload>
                        <overload id="function_op_eq_D5C40EB1DD54445372C885F4ECAF489D1944D169">
                            <name>operator==(ShutdownMode left, ShutdownMode right)</name>
                            <syntax>public bool operator==(ShutdownMode left, ShutdownMode right);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left</name>
                                    <type ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                                </parameter>
                                <parameter>
                                    <name>right</name>
                                    <type ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.11565906"/>
                        </overload>
                    </overloads>
                </function>
            </functions>
            <enumerations>
                <enumeration id="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1">
                    <name>ConnectOptions</name>
                    <syntax>public enum ConnectOptions;</syntax>
                    <underlyingType ref="type.11565911"/>
                    <enumConstant>
                        <name>none</name>
                        <value>0</value>
                    </enumConstant>
                    <enumConstant>
                        <name>useTls</name>
                        <value>1</value>
                    </enumConstant>
                </enumeration>
                <enumeration id="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D">
                    <name>ShutdownMode</name>
                    <syntax>public enum ShutdownMode;</syntax>
                    <underlyingType ref="type.11565911"/>
                    <enumConstant>
                        <name>receive</name>
                        <value>0</value>
                    </enumConstant>
                    <enumConstant>
                        <name>send</name>
                        <value>1</value>
                    </enumConstant>
                    <enumConstant>
                        <name>both</name>
                        <value>2</value>
                    </enumConstant>
                </enumeration>
            </enumerations>
        </namespace>
    </namespaces>
    <types>
        <type id="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A" specialization="true">
            <name>BackInsertIterator&lt;C></name>
            <content>
                <primaryType ref="class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <argumentType ref="11566242"/>
            </content>
        </type>
        <type derived="true" id="type.1610">
            <name>BackInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1604">
            <name>BackInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD" specialization="true">
            <name>BackInsertProxy&lt;C></name>
            <content>
                <primaryType ref="class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <argumentType ref="11566240"/>
            </content>
        </type>
        <type derived="true" id="type.1596">
            <name>BackInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1600">
            <name>BackInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1607">
            <name>BackInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567958" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.1719">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.11567958"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9" specialization="true">
            <name>Bucket&lt;T></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="11566559"/>
            </content>
        </type>
        <type derived="true" id="type.1727">
            <name>Bucket&lt;T>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE" specialization="true">
            <name>Bucket&lt;ValueType></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="11566580"/>
            </content>
        </type>
        <type derived="true" id="type.1740">
            <name>Bucket&lt;ValueType>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2005">
            <name>CodeFormatter&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1">
            <name>ConnectOptions</name>
        </type>
        <type derived="true" id="type.11583901">
            <name>ConnectOptions&amp;</name>
            <content>
                <baseType ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583902">
            <name>ConnectOptions&amp;&amp;</name>
            <content>
                <baseType ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583900">
            <name>ConnectOptions*</name>
            <content>
                <baseType ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.11567094" specialization="true">
            <name>Counter&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30" specialization="true">
            <name>Counter&lt;T></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="11566739"/>
            </content>
        </type>
        <type derived="true" id="type.1861">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1868">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1827">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1846">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1839">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1830">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A" specialization="true">
            <name>Counter&lt;U></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="11566740"/>
            </content>
        </type>
        <type id="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051" specialization="true">
            <name>ForwardList&lt;T></name>
            <content>
                <primaryType ref="class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <argumentType ref="11566463"/>
            </content>
        </type>
        <type derived="true" id="type.1660">
            <name>ForwardList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA" specialization="true">
            <name>ForwardListNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="11566456"/>
                <argumentType ref="11566457"/>
                <argumentType ref="11566458"/>
            </content>
        </type>
        <type derived="true" id="type.1657">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1656">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84" specialization="true">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="11566464"/>
                <argumentType ref="type.11567453"/>
                <argumentType ref="type.11567455"/>
            </content>
        </type>
        <type derived="true" id="type.1664">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1659">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1662">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3" specialization="true">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="11566465"/>
                <argumentType ref="type.11567470"/>
                <argumentType ref="type.11567471"/>
            </content>
        </type>
        <type derived="true" id="type.1661">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1663">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1658">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8" specialization="true">
            <name>FrontInsertIterator&lt;C></name>
            <content>
                <primaryType ref="class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <argumentType ref="11566470"/>
            </content>
        </type>
        <type derived="true" id="type.1675">
            <name>FrontInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1681">
            <name>FrontInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467" specialization="true">
            <name>FrontInsertProxy&lt;C></name>
            <content>
                <primaryType ref="class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <argumentType ref="11566469"/>
            </content>
        </type>
        <type derived="true" id="type.1678">
            <name>FrontInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1667">
            <name>FrontInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1671">
            <name>FrontInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1988">
            <name>FunctionProfiler&amp;&amp;</name>
            <content>
                <baseType ref="class_FunctionProfiler_809E118D4757DEA417E0CB7F4E658DF7C4B79B00"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B" specialization="true">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="11566550"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <argumentType ref="11566552"/>
                <argumentType ref="11566553"/>
            </content>
        </type>
        <type derived="true" id="type.1715">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2" specialization="true">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="11566579"/>
                <argumentType ref="11566580"/>
                <argumentType ref="11566581"/>
                <argumentType ref="11566582"/>
                <argumentType ref="11566583"/>
            </content>
        </type>
        <type derived="true" id="type.1735">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C" specialization="true">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="11566559"/>
                <argumentType ref="11566559"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="11566560"/>
                <argumentType ref="11566561"/>
            </content>
        </type>
        <type derived="true" id="type.1723">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A" specialization="true">
            <name>InsertProxy&lt;C></name>
            <content>
                <primaryType ref="class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <argumentType ref="11566587"/>
            </content>
        </type>
        <type derived="true" id="type.1751">
            <name>InsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1744">
            <name>InsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1748">
            <name>InsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20" specialization="true">
            <name>LinkedList&lt;T></name>
            <content>
                <primaryType ref="class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <argumentType ref="11566602"/>
            </content>
        </type>
        <type derived="true" id="type.1754">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1755">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567977" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.11567959"/>
            </content>
        </type>
        <type derived="true" id="type.1718">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567977"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11568130" specialization="true">
            <name>List&lt;Bucket&lt;T>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.11568113"/>
            </content>
        </type>
        <type derived="true" id="type.1726">
            <name>List&lt;Bucket&lt;T>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568130"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11568315" specialization="true">
            <name>List&lt;Bucket&lt;ValueType>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.11568296"/>
            </content>
        </type>
        <type derived="true" id="type.1739">
            <name>List&lt;Bucket&lt;ValueType>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568315"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11569841" specialization="true">
            <name>List&lt;String&lt;CharT>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
            </content>
        </type>
        <type derived="true" id="type.1886">
            <name>List&lt;String&lt;CharT>>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569841"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="11566658"/>
            </content>
        </type>
        <type derived="true" id="type.1798">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1758">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1880">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1" specialization="true">
            <name>LockGuard&lt;Mtx></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="11566637"/>
            </content>
        </type>
        <type derived="true" id="type.1786">
            <name>LockGuard&lt;Mtx>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572183" specialization="true">
            <name>LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.1973">
            <name>LockGuard&lt;System.Threading.Mutex>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572183"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1783">
            <name>Mtx&amp;</name>
            <content>
                <baseType ref="11566637"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D">
            <name>NetworkByteStream</name>
        </type>
        <type derived="true" id="type.11583454">
            <name>NetworkByteStream&amp;</name>
            <content>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2017">
            <name>NetworkByteStream&amp;&amp;</name>
            <content>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583453">
            <name>NetworkByteStream*</name>
            <content>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9" specialization="true">
            <name>Pair&lt;T, U></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="11566648"/>
                <argumentType ref="11566649"/>
            </content>
        </type>
        <type id="type.11571024" specialization="true">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11566857"/>
                <argumentType ref="type.11570867"/>
                <argumentType ref="type.11571023"/>
            </content>
        </type>
        <type derived="true" id="type.1930">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571024"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572064" specialization="true">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11566928"/>
                <argumentType ref="type.11571907"/>
                <argumentType ref="type.11572063"/>
            </content>
        </type>
        <type derived="true" id="type.1955">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572064"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571648" specialization="true">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11566902"/>
                <argumentType ref="type.11571491"/>
                <argumentType ref="type.11571647"/>
            </content>
        </type>
        <type derived="true" id="type.1945">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571648"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571856" specialization="true">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11566915"/>
                <argumentType ref="type.11571699"/>
                <argumentType ref="type.11571855"/>
            </content>
        </type>
        <type derived="true" id="type.1950">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571856"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570387" specialization="true">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11566827"/>
                <argumentType ref="type.11570216"/>
                <argumentType ref="type.11570386"/>
            </content>
        </type>
        <type derived="true" id="type.1915">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570387"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570605" specialization="true">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11566837"/>
                <argumentType ref="type.11570448"/>
                <argumentType ref="type.11570604"/>
            </content>
        </type>
        <type derived="true" id="type.1920">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570605"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11568072" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11568038"/>
                <argumentType ref="type.11568070"/>
                <argumentType ref="type.11568071"/>
            </content>
        </type>
        <type id="type.11567994" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11567959"/>
                <argumentType ref="type.11567992"/>
                <argumentType ref="type.11567993"/>
            </content>
        </type>
        <type derived="true" id="type.1722">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568072"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1717">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567994"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11568063" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11568038"/>
                <argumentType ref="type.11568061"/>
                <argumentType ref="type.11568062"/>
            </content>
        </type>
        <type id="type.11567985" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11567959"/>
                <argumentType ref="type.11567983"/>
                <argumentType ref="type.11567984"/>
            </content>
        </type>
        <type derived="true" id="type.1716">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567985"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1721">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568063"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571001" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570967"/>
                <argumentType ref="type.11570999"/>
                <argumentType ref="type.11571000"/>
            </content>
        </type>
        <type derived="true" id="type.1929">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571001"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570992" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570967"/>
                <argumentType ref="type.11570990"/>
                <argumentType ref="type.11570991"/>
            </content>
        </type>
        <type derived="true" id="type.1928">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570992"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572041" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11572007"/>
                <argumentType ref="type.11572039"/>
                <argumentType ref="type.11572040"/>
            </content>
        </type>
        <type derived="true" id="type.1954">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572041"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572032" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11572007"/>
                <argumentType ref="type.11572030"/>
                <argumentType ref="type.11572031"/>
            </content>
        </type>
        <type derived="true" id="type.1953">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572032"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571625" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571591"/>
                <argumentType ref="type.11571623"/>
                <argumentType ref="type.11571624"/>
            </content>
        </type>
        <type derived="true" id="type.1944">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571625"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571616" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571591"/>
                <argumentType ref="type.11571614"/>
                <argumentType ref="type.11571615"/>
            </content>
        </type>
        <type derived="true" id="type.1943">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571616"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571833" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571799"/>
                <argumentType ref="type.11571831"/>
                <argumentType ref="type.11571832"/>
            </content>
        </type>
        <type derived="true" id="type.1949">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571833"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571824" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571799"/>
                <argumentType ref="type.11571822"/>
                <argumentType ref="type.11571823"/>
            </content>
        </type>
        <type derived="true" id="type.1948">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571824"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570371" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570337"/>
                <argumentType ref="type.11570369"/>
                <argumentType ref="type.11570370"/>
            </content>
        </type>
        <type derived="true" id="type.1914">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570371"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570362" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570337"/>
                <argumentType ref="type.11570360"/>
                <argumentType ref="type.11570361"/>
            </content>
        </type>
        <type derived="true" id="type.1913">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570362"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570582" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570548"/>
                <argumentType ref="type.11570580"/>
                <argumentType ref="type.11570581"/>
            </content>
        </type>
        <type derived="true" id="type.1919">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570582"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570573" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570548"/>
                <argumentType ref="type.11570571"/>
                <argumentType ref="type.11570572"/>
            </content>
        </type>
        <type derived="true" id="type.1918">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570573"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570793" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570759"/>
                <argumentType ref="type.11570791"/>
                <argumentType ref="type.11570792"/>
            </content>
        </type>
        <type derived="true" id="type.1924">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570793"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570784" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570759"/>
                <argumentType ref="type.11570782"/>
                <argumentType ref="type.11570783"/>
            </content>
        </type>
        <type derived="true" id="type.1923">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570784"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571417" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571383"/>
                <argumentType ref="type.11571415"/>
                <argumentType ref="type.11571416"/>
            </content>
        </type>
        <type derived="true" id="type.1939">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571417"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571408" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571383"/>
                <argumentType ref="type.11571406"/>
                <argumentType ref="type.11571407"/>
            </content>
        </type>
        <type derived="true" id="type.1938">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571408"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571209" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571175"/>
                <argumentType ref="type.11571207"/>
                <argumentType ref="type.11571208"/>
            </content>
        </type>
        <type derived="true" id="type.1934">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571209"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571200" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571175"/>
                <argumentType ref="type.11571198"/>
                <argumentType ref="type.11571199"/>
            </content>
        </type>
        <type derived="true" id="type.1933">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571200"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570925" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570891"/>
                <argumentType ref="type.11570923"/>
                <argumentType ref="type.11570924"/>
            </content>
        </type>
        <type derived="true" id="type.1927">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570925"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570916" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570891"/>
                <argumentType ref="type.11570914"/>
                <argumentType ref="type.11570915"/>
            </content>
        </type>
        <type derived="true" id="type.1926">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570916"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571965" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571931"/>
                <argumentType ref="type.11571963"/>
                <argumentType ref="type.11571964"/>
            </content>
        </type>
        <type derived="true" id="type.1952">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571965"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571956" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571931"/>
                <argumentType ref="type.11571954"/>
                <argumentType ref="type.11571955"/>
            </content>
        </type>
        <type derived="true" id="type.1951">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571956"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571549" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571515"/>
                <argumentType ref="type.11571547"/>
                <argumentType ref="type.11571548"/>
            </content>
        </type>
        <type derived="true" id="type.1942">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571549"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571540" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571515"/>
                <argumentType ref="type.11571538"/>
                <argumentType ref="type.11571539"/>
            </content>
        </type>
        <type derived="true" id="type.1941">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571540"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571757" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571723"/>
                <argumentType ref="type.11571755"/>
                <argumentType ref="type.11571756"/>
            </content>
        </type>
        <type derived="true" id="type.1947">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571757"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571748" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571723"/>
                <argumentType ref="type.11571746"/>
                <argumentType ref="type.11571747"/>
            </content>
        </type>
        <type derived="true" id="type.1946">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571748"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570274" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570240"/>
                <argumentType ref="type.11570272"/>
                <argumentType ref="type.11570273"/>
            </content>
        </type>
        <type derived="true" id="type.1912">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570274"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570265" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570240"/>
                <argumentType ref="type.11570263"/>
                <argumentType ref="type.11570264"/>
            </content>
        </type>
        <type derived="true" id="type.1911">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570265"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570506" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570472"/>
                <argumentType ref="type.11570504"/>
                <argumentType ref="type.11570505"/>
            </content>
        </type>
        <type derived="true" id="type.1917">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570506"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570497" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570472"/>
                <argumentType ref="type.11570495"/>
                <argumentType ref="type.11570496"/>
            </content>
        </type>
        <type derived="true" id="type.1916">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570497"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570717" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570683"/>
                <argumentType ref="type.11570715"/>
                <argumentType ref="type.11570716"/>
            </content>
        </type>
        <type derived="true" id="type.1922">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570717"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570708" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11570683"/>
                <argumentType ref="type.11570706"/>
                <argumentType ref="type.11570707"/>
            </content>
        </type>
        <type derived="true" id="type.1921">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570708"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571341" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571307"/>
                <argumentType ref="type.11571339"/>
                <argumentType ref="type.11571340"/>
            </content>
        </type>
        <type derived="true" id="type.1937">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571341"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571332" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571307"/>
                <argumentType ref="type.11571330"/>
                <argumentType ref="type.11571331"/>
            </content>
        </type>
        <type derived="true" id="type.1936">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571332"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571133" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571099"/>
                <argumentType ref="type.11571131"/>
                <argumentType ref="type.11571132"/>
            </content>
        </type>
        <type derived="true" id="type.1932">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571133"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571124" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11571099"/>
                <argumentType ref="type.11571122"/>
                <argumentType ref="type.11571123"/>
            </content>
        </type>
        <type derived="true" id="type.1931">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571124"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11568147" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11568113"/>
                <argumentType ref="type.11568145"/>
                <argumentType ref="type.11568146"/>
            </content>
        </type>
        <type id="type.11568221" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11568187"/>
                <argumentType ref="type.11568219"/>
                <argumentType ref="type.11568220"/>
            </content>
        </type>
        <type id="type.11568147" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11568113"/>
                <argumentType ref="type.11568145"/>
                <argumentType ref="type.11568146"/>
            </content>
        </type>
        <type derived="true" id="type.1729">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568221"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1725">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568147"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11568138" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11568113"/>
                <argumentType ref="type.11568136"/>
                <argumentType ref="type.11568137"/>
            </content>
        </type>
        <type id="type.11568212" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11568187"/>
                <argumentType ref="type.11568210"/>
                <argumentType ref="type.11568211"/>
            </content>
        </type>
        <type derived="true" id="type.1724">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568138"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1728">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568212"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11568332" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11568296"/>
                <argumentType ref="type.11568330"/>
                <argumentType ref="type.11568331"/>
            </content>
        </type>
        <type derived="true" id="type.1738">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568332"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11568323" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11568296"/>
                <argumentType ref="type.11568321"/>
                <argumentType ref="type.11568322"/>
            </content>
        </type>
        <type derived="true" id="type.1737">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568323"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF" specialization="true">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="11566771"/>
                <argumentType ref="type.11570113"/>
                <argumentType ref="type.11570114"/>
            </content>
        </type>
        <type derived="true" id="type.1888">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1908">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1900">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1904">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1896">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1882">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1892">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966" specialization="true">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="11566767"/>
                <argumentType ref="type.11569915"/>
                <argumentType ref="type.11569916"/>
            </content>
        </type>
        <type derived="true" id="type.1907">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1899">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1903">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1887">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1881">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1895">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1891">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570816" specialization="true">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11566847"/>
                <argumentType ref="type.11570659"/>
                <argumentType ref="type.11570815"/>
            </content>
        </type>
        <type derived="true" id="type.1925">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570816"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571433" specialization="true">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11566889"/>
                <argumentType ref="type.11571283"/>
                <argumentType ref="type.11571432"/>
            </content>
        </type>
        <type derived="true" id="type.1940">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571433"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567340" specialization="true">
            <name>RandomAccessIter&lt;Pair&lt;int, String&lt;char>>, Pair&lt;int, String&lt;char>>&amp;, Pair&lt;int, String&lt;char>>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11567320"/>
                <argumentType ref="type.11567322"/>
                <argumentType ref="type.11567321"/>
            </content>
        </type>
        <type derived="true" id="type.1651">
            <name>RandomAccessIter&lt;Pair&lt;int, String&lt;char>>, Pair&lt;int, String&lt;char>>&amp;, Pair&lt;int, String&lt;char>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567340"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11571232" specialization="true">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11566870"/>
                <argumentType ref="type.11571075"/>
                <argumentType ref="type.11571231"/>
            </content>
        </type>
        <type derived="true" id="type.1935">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**>&amp;&amp;</name>
            <content>
                <baseType ref="type.11571232"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11570042" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11570005"/>
                <argumentType ref="type.11570004"/>
            </content>
        </type>
        <type id="type.11569854" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11569817"/>
                <argumentType ref="type.11569816"/>
            </content>
        </type>
        <type id="type.11569901" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11569864"/>
                <argumentType ref="type.11569863"/>
            </content>
        </type>
        <type id="type.11569995" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11569958"/>
                <argumentType ref="type.11569957"/>
            </content>
        </type>
        <type id="type.11569948" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11569911"/>
                <argumentType ref="type.11569910"/>
            </content>
        </type>
        <type id="type.11570136" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11570099"/>
                <argumentType ref="type.11570098"/>
            </content>
        </type>
        <type id="type.11570089" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11570055"/>
                <argumentType ref="type.11570054"/>
            </content>
        </type>
        <type id="type.11570042" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11570005"/>
                <argumentType ref="type.11570004"/>
            </content>
        </type>
        <type derived="true" id="type.1890">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569901"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1906">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570089"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1898">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569995"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1902">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570042"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1894">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569948"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1910">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570136"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1885">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569854"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11569894" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11569867"/>
                <argumentType ref="type.11569866"/>
            </content>
        </type>
        <type id="type.11570035" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11570008"/>
                <argumentType ref="type.11570007"/>
            </content>
        </type>
        <type id="type.11569847" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11569820"/>
                <argumentType ref="type.11569819"/>
            </content>
        </type>
        <type id="type.11569988" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11569961"/>
                <argumentType ref="type.11569960"/>
            </content>
        </type>
        <type id="type.11570082" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11570058"/>
                <argumentType ref="type.11570057"/>
            </content>
        </type>
        <type id="type.11570129" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11570102"/>
                <argumentType ref="type.11570101"/>
            </content>
        </type>
        <type id="type.11569941" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.11569914"/>
                <argumentType ref="type.11569913"/>
            </content>
        </type>
        <type derived="true" id="type.1909">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570129"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1905">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570082"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1897">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569988"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1893">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569941"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1901">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11570035"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1889">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569894"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1884">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569847"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567155" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11567120"/>
                <argumentType ref="type.11567122"/>
                <argumentType ref="type.11567121"/>
            </content>
        </type>
        <type derived="true" id="type.1621">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567155"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567148" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11567120"/>
                <argumentType ref="type.11567125"/>
                <argumentType ref="type.11567124"/>
            </content>
        </type>
        <type derived="true" id="type.1620">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567148"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567245" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11567208"/>
                <argumentType ref="type.11567210"/>
                <argumentType ref="type.11567209"/>
            </content>
        </type>
        <type derived="true" id="type.1640">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567245"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567238" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11567208"/>
                <argumentType ref="type.11567213"/>
                <argumentType ref="type.11567212"/>
            </content>
        </type>
        <type derived="true" id="type.1639">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567238"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567200" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11567163"/>
                <argumentType ref="type.11567165"/>
                <argumentType ref="type.11567164"/>
            </content>
        </type>
        <type derived="true" id="type.1630">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567200"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567193" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11567163"/>
                <argumentType ref="type.11567168"/>
                <argumentType ref="type.11567167"/>
            </content>
        </type>
        <type derived="true" id="type.1629">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567193"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572094" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.11566941"/>
                <argumentType ref="type.11566940"/>
            </content>
        </type>
        <type derived="true" id="type.1957">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572094"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572087" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.11566944"/>
                <argumentType ref="type.11566943"/>
            </content>
        </type>
        <type derived="true" id="type.1956">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572087"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="11566660"/>
                <argumentType ref="11566661"/>
                <argumentType ref="11566662"/>
            </content>
        </type>
        <type derived="true" id="type.1800">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1805">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1804">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1799">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1803">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1802">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1801">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7" specialization="true">
            <name>RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="11566607"/>
                <argumentType ref="type.11568593"/>
                <argumentType ref="type.11568594"/>
            </content>
        </type>
        <type derived="true" id="type.1757">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1761">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1763">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1879">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1797">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892" specialization="true">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="11566742"/>
                <argumentType ref="type.11569787"/>
                <argumentType ref="type.11569796"/>
            </content>
        </type>
        <type derived="true" id="type.1796">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1878">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1762">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1760">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1756">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572123" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11572103"/>
                <argumentType ref="type.11572105"/>
                <argumentType ref="type.11572104"/>
            </content>
        </type>
        <type derived="true" id="type.1959">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572123"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572116" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11572103"/>
                <argumentType ref="type.11572108"/>
                <argumentType ref="type.11572107"/>
            </content>
        </type>
        <type derived="true" id="type.1958">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572116"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572219" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11572199"/>
                <argumentType ref="type.11572201"/>
                <argumentType ref="type.11572200"/>
            </content>
        </type>
        <type derived="true" id="type.1975">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572219"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572212" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11572199"/>
                <argumentType ref="type.11572204"/>
                <argumentType ref="type.11572203"/>
            </content>
        </type>
        <type derived="true" id="type.1974">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572212"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572151" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11572131"/>
                <argumentType ref="type.11572133"/>
                <argumentType ref="type.11572132"/>
            </content>
        </type>
        <type derived="true" id="type.1961">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572151"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572144" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11572131"/>
                <argumentType ref="type.11572136"/>
                <argumentType ref="type.11572135"/>
            </content>
        </type>
        <type derived="true" id="type.1960">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572144"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572254" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11572234"/>
                <argumentType ref="type.11572236"/>
                <argumentType ref="type.11572235"/>
            </content>
        </type>
        <type derived="true" id="type.1977">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572254"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572247" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11572234"/>
                <argumentType ref="type.11572239"/>
                <argumentType ref="type.11572238"/>
            </content>
        </type>
        <type derived="true" id="type.1976">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572247"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11583650" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565908"/>
                <argumentType ref="type.11565929"/>
                <argumentType ref="type.11565928"/>
            </content>
        </type>
        <type id="type.1775" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565908"/>
                <argumentType ref="type.11565929"/>
                <argumentType ref="type.11565928"/>
            </content>
        </type>
        <type id="type.11583650" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565908"/>
                <argumentType ref="type.11565929"/>
                <argumentType ref="type.11565928"/>
            </content>
        </type>
        <type id="type.11568842" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565908"/>
                <argumentType ref="type.11565929"/>
                <argumentType ref="type.11565928"/>
            </content>
        </type>
        <type derived="true" id="type.1777">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.1775"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583652">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.11583650"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1782">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568842"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1984">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11583650"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1781">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1775"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583651">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.11583650"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1776">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.1775"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583651">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.11583650"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.11583488" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565917"/>
                <argumentType ref="type.11565956"/>
                <argumentType ref="type.11565955"/>
            </content>
        </type>
        <type id="type.1613" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565917"/>
                <argumentType ref="type.11565956"/>
                <argumentType ref="type.11565955"/>
            </content>
        </type>
        <type derived="true" id="type.1615">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.1613"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583490">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.11583488"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1980">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11583488"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1619">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1613"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1614">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.1613"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583489">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.11583488"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.11583507" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565919"/>
                <argumentType ref="type.11565962"/>
                <argumentType ref="type.11565961"/>
            </content>
        </type>
        <type id="type.11567224" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565919"/>
                <argumentType ref="type.11565962"/>
                <argumentType ref="type.11565961"/>
            </content>
        </type>
        <type id="type.1632" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565919"/>
                <argumentType ref="type.11565962"/>
                <argumentType ref="type.11565961"/>
            </content>
        </type>
        <type id="type.11567224" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565919"/>
                <argumentType ref="type.11565962"/>
                <argumentType ref="type.11565961"/>
            </content>
        </type>
        <type derived="true" id="type.11583509">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.11583507"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1634">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.1632"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583509">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.11583507"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1641">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567224"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1982">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11583507"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1638">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1632"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583508">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.11583507"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1633">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.1632"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583508">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.11583507"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.11572168" specialization="true">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565912"/>
                <argumentType ref="type.11572165"/>
                <argumentType ref="type.11572166"/>
            </content>
        </type>
        <type derived="true" id="type.1962">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572168"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572175" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565912"/>
                <argumentType ref="type.11565941"/>
                <argumentType ref="type.11565940"/>
            </content>
        </type>
        <type id="type.11583839" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565912"/>
                <argumentType ref="type.11565941"/>
                <argumentType ref="type.11565940"/>
            </content>
        </type>
        <type id="type.11572175" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565912"/>
                <argumentType ref="type.11565941"/>
                <argumentType ref="type.11565940"/>
            </content>
        </type>
        <type id="type.1963" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565912"/>
                <argumentType ref="type.11565941"/>
                <argumentType ref="type.11565940"/>
            </content>
        </type>
        <type derived="true" id="type.11583841">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.11583839"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1965">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.1963"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583841">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.11583839"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1969">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1963"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1970">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572175"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1985">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11583839"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583840">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.11583839"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1964">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.1963"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.11567267" specialization="true">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565914"/>
                <argumentType ref="type.11567264"/>
                <argumentType ref="type.11567265"/>
            </content>
        </type>
        <type derived="true" id="type.1642">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567267"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11583518" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565914"/>
                <argumentType ref="type.11565947"/>
                <argumentType ref="type.11565946"/>
            </content>
        </type>
        <type id="type.1643" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565914"/>
                <argumentType ref="type.11565947"/>
                <argumentType ref="type.11565946"/>
            </content>
        </type>
        <type id="type.11583518" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565914"/>
                <argumentType ref="type.11565947"/>
                <argumentType ref="type.11565946"/>
            </content>
        </type>
        <type id="type.11567274" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565914"/>
                <argumentType ref="type.11565947"/>
                <argumentType ref="type.11565946"/>
            </content>
        </type>
        <type derived="true" id="type.11583520">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.11583518"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1645">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.1643"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583520">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.11583518"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1983">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11583518"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1650">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567274"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1649">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1643"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583519">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.11583518"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1644">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.1643"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.1622" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565918"/>
                <argumentType ref="type.11565959"/>
                <argumentType ref="type.11565958"/>
            </content>
        </type>
        <type id="type.11567179" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565918"/>
                <argumentType ref="type.11565959"/>
                <argumentType ref="type.11565958"/>
            </content>
        </type>
        <type id="type.11583497" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.11565918"/>
                <argumentType ref="type.11565959"/>
                <argumentType ref="type.11565958"/>
            </content>
        </type>
        <type derived="true" id="type.11583499">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.11583497"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1624">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.1622"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1981">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11583497"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1631">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567179"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1628">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1622"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1623">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.1622"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583498">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.11583497"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047" specialization="true">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="11566613"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <argumentType ref="11566615"/>
            </content>
        </type>
        <type derived="true" id="type.1768">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2" specialization="true">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="11566698"/>
                <argumentType ref="11566699"/>
                <argumentType ref="11566700"/>
                <argumentType ref="11566701"/>
            </content>
        </type>
        <type derived="true" id="type.1814">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3" specialization="true">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="11566704"/>
                <argumentType ref="11566704"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="11566705"/>
            </content>
        </type>
        <type derived="true" id="type.1819">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1593">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583416">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2004">
            <name>RedBlackTreeNodeBase&amp;&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583415">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1592">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583415">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.11568684" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.11568645"/>
                <argumentType ref="type.11568644"/>
            </content>
        </type>
        <type id="type.11568745" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.11568711"/>
                <argumentType ref="type.11568710"/>
            </content>
        </type>
        <type id="type.11568684" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.11568645"/>
                <argumentType ref="type.11568644"/>
            </content>
        </type>
        <type id="type.11568806" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.11568772"/>
                <argumentType ref="type.11568771"/>
            </content>
        </type>
        <type derived="true" id="type.1774">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568806"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1772">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568745"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1767">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568684"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11568666" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.11568655"/>
                <argumentType ref="type.11568664"/>
            </content>
        </type>
        <type id="type.11568793" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.11568782"/>
                <argumentType ref="type.11568791"/>
            </content>
        </type>
        <type id="type.11568732" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.11568721"/>
                <argumentType ref="type.11568730"/>
            </content>
        </type>
        <type derived="true" id="type.1773">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568793"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1771">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568732"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1766">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568666"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="11566694"/>
                <argumentType ref="11566695"/>
                <argumentType ref="11566696"/>
            </content>
        </type>
        <type derived="true" id="type.1811">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1810">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="11566708"/>
                <argumentType ref="type.11569232"/>
                <argumentType ref="type.11569234"/>
            </content>
        </type>
        <type derived="true" id="type.1818">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1824">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1822">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="11566706"/>
                <argumentType ref="type.11569152"/>
                <argumentType ref="type.11569161"/>
            </content>
        </type>
        <type derived="true" id="type.1817">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1823">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1821">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="11566699"/>
                <argumentType ref="type.11569059"/>
                <argumentType ref="type.11569061"/>
            </content>
        </type>
        <type derived="true" id="type.1813">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="11566699"/>
                <argumentType ref="type.11569044"/>
                <argumentType ref="type.11569045"/>
            </content>
        </type>
        <type derived="true" id="type.1812">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076" specialization="true">
            <name>SharedCount&lt;T></name>
            <content>
                <primaryType ref="class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <argumentType ref="11566729"/>
            </content>
        </type>
        <type derived="true" id="type.1841">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1869">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1863">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1847">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1831">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567082" specialization="true">
            <name>SharedPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F" specialization="true">
            <name>SharedPtr&lt;T></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="11566729"/>
            </content>
        </type>
        <type derived="true" id="type.1849">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1864">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1871">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D">
            <name>ShutdownMode</name>
        </type>
        <type derived="true" id="type.11583898">
            <name>ShutdownMode&amp;</name>
            <content>
                <baseType ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583899">
            <name>ShutdownMode&amp;&amp;</name>
            <content>
                <baseType ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583897">
            <name>ShutdownMode*</name>
            <content>
                <baseType ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB">
            <name>SocketException</name>
        </type>
        <type derived="true" id="type.11583465">
            <name>SocketException&amp;</name>
            <content>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583905">
            <name>SocketException&amp;&amp;</name>
            <content>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583464">
            <name>SocketException*</name>
            <content>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1991">
            <name>StaticInitCriticalSection&amp;&amp;</name>
            <content>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC" specialization="true">
            <name>String&lt;CharT></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="11566765"/>
            </content>
        </type>
        <type derived="true" id="type.1883">
            <name>String&lt;CharT>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1734">
            <name>T&amp;</name>
            <content>
                <baseType ref="11566570"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1807">
            <name>T&amp;</name>
            <content>
                <baseType ref="11566689"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1732">
            <name>T&amp;</name>
            <content>
                <baseType ref="11566568"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1720">
            <name>T&amp;</name>
            <content>
                <baseType ref="11566551"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1653">
            <name>T&amp;</name>
            <content>
                <baseType ref="11566454"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1655">
            <name>T&amp;</name>
            <content>
                <baseType ref="11566456"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1809">
            <name>T&amp;</name>
            <content>
                <baseType ref="11566691"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1753">
            <name>T&amp;</name>
            <content>
                <baseType ref="11566593"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1759">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="11566606"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1877">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="11566742"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1795">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="11566658"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21">
            <name>TcpClient</name>
        </type>
        <type derived="true" id="type.11583457">
            <name>TcpClient&amp;</name>
            <content>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2020">
            <name>TcpClient&amp;&amp;</name>
            <content>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583456">
            <name>TcpClient*</name>
            <content>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B">
            <name>TcpListener</name>
        </type>
        <type derived="true" id="type.11583460">
            <name>TcpListener&amp;</name>
            <content>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2023">
            <name>TcpListener&amp;&amp;</name>
            <content>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583459">
            <name>TcpListener*</name>
            <content>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C">
            <name>TcpSocket</name>
        </type>
        <type derived="true" id="type.11583468">
            <name>TcpSocket&amp;</name>
            <content>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583885">
            <name>TcpSocket&amp;&amp;</name>
            <content>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583467">
            <name>TcpSocket*</name>
            <content>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.11568695" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.11568672"/>
            </content>
        </type>
        <type derived="true" id="type.1769">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.11568695"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11569132" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
            </content>
        </type>
        <type derived="true" id="type.1820">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569132"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11569074" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_ValueType_38B50DA62919A6E728F70DA36817024C5A9A8855"/>
            </content>
        </type>
        <type derived="true" id="type.1816">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>>&amp;&amp;</name>
            <content>
                <baseType ref="type.11569074"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11572328" specialization="true">
            <name>UniquePtr&lt;System.Exception></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
            </content>
        </type>
        <type derived="true" id="type.1979">
            <name>UniquePtr&lt;System.Exception>&amp;&amp;</name>
            <content>
                <baseType ref="type.11572328"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009" specialization="true">
            <name>UniquePtr&lt;T></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="11566973"/>
            </content>
        </type>
        <type derived="true" id="type.1978">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1770">
            <name>Value&amp;</name>
            <content>
                <baseType ref="11566614"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F" specialization="true">
            <name>WeakCount&lt;T></name>
            <content>
                <primaryType ref="class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <argumentType ref="11566729"/>
            </content>
        </type>
        <type derived="true" id="type.1862">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1840">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1848">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1832">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1870">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.11567110" specialization="true">
            <name>WeakPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.1612">
            <name>WeakPtr&lt;System.IO.ByteStream>&amp;&amp;</name>
            <content>
                <baseType ref="type.11567110"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC" specialization="true">
            <name>WeakPtr&lt;T></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="11566735"/>
            </content>
        </type>
        <type derived="true" id="type.1872">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1854">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1865">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1856">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1850">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1875">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1852">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021" specialization="true">
            <name>WeakPtr&lt;U></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="11566732"/>
            </content>
        </type>
        <type derived="true" id="type.1858">
            <name>WeakPtr&lt;U>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.11565906">
            <name>bool</name>
        </type>
        <type basic="true" id="type.11565908">
            <name>byte</name>
        </type>
        <type derived="true" id="type.11565929">
            <name>byte&amp;</name>
            <content>
                <baseType ref="type.11565908"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11565928">
            <name>byte*</name>
            <content>
                <baseType ref="type.11565908"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.11565917">
            <name>char</name>
        </type>
        <type derived="true" id="type.11565956">
            <name>char&amp;</name>
            <content>
                <baseType ref="type.11565917"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11565955">
            <name>char*</name>
            <content>
                <baseType ref="type.11565917"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1602">
            <name>const BackInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
            </content>
        </type>
        <type derived="true" id="type.1608">
            <name>const BackInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
            </content>
        </type>
        <type derived="true" id="type.1603">
            <name>const BackInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1609">
            <name>const BackInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1594">
            <name>const BackInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
            </content>
        </type>
        <type derived="true" id="type.1605">
            <name>const BackInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
            </content>
        </type>
        <type derived="true" id="type.1598">
            <name>const BackInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
            </content>
        </type>
        <type derived="true" id="type.1595">
            <name>const BackInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1606">
            <name>const BackInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1599">
            <name>const BackInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1992">
            <name>const BinaryReader</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
            </content>
        </type>
        <type derived="true" id="type.1993">
            <name>const BinaryReader&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1994">
            <name>const BinaryWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
            </content>
        </type>
        <type derived="true" id="type.1995">
            <name>const BinaryWriter&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1996">
            <name>const BufferedByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BufferedByteStream_E74639F265FCFA3F7A3E61DE9D92C703A46FD573"/>
            </content>
        </type>
        <type derived="true" id="type.1997">
            <name>const ByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.2006">
            <name>const ConditionVariable</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConditionVariable_019A80625043CF98EC88D8F55238C84CFD4A9C26"/>
            </content>
        </type>
        <type derived="true" id="type.2011">
            <name>const ConversionException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
            </content>
        </type>
        <type derived="true" id="type.2012">
            <name>const ConversionException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1611">
            <name>const Counter&lt;System.IO.ByteStream></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11567094"/>
            </content>
        </type>
        <type derived="true" id="type.1853">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1874">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1855">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1859">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1866">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1873">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1825">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1828">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1833">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1834">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1835">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1837">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1842">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1843">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1844">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1851">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1867">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1829">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1838">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1826">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1860">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1845">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1857">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.1836">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.1876">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.1998">
            <name>const FileSystemException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
            </content>
        </type>
        <type derived="true" id="type.1999">
            <name>const FileSystemException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1679">
            <name>const FrontInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
            </content>
        </type>
        <type derived="true" id="type.1673">
            <name>const FrontInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
            </content>
        </type>
        <type derived="true" id="type.1674">
            <name>const FrontInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1680">
            <name>const FrontInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1676">
            <name>const FrontInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
            </content>
        </type>
        <type derived="true" id="type.1669">
            <name>const FrontInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
            </content>
        </type>
        <type derived="true" id="type.1665">
            <name>const FrontInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
            </content>
        </type>
        <type derived="true" id="type.1677">
            <name>const FrontInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1670">
            <name>const FrontInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1666">
            <name>const FrontInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1986">
            <name>const FunctionProfiler</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FunctionProfiler_809E118D4757DEA417E0CB7F4E658DF7C4B79B00"/>
            </content>
        </type>
        <type derived="true" id="type.1987">
            <name>const FunctionProfiler&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FunctionProfiler_809E118D4757DEA417E0CB7F4E658DF7C4B79B00"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1746">
            <name>const InsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
            </content>
        </type>
        <type derived="true" id="type.1742">
            <name>const InsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
            </content>
        </type>
        <type derived="true" id="type.1749">
            <name>const InsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
            </content>
        </type>
        <type derived="true" id="type.1747">
            <name>const InsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1750">
            <name>const InsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1743">
            <name>const InsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2000">
            <name>const InvalidPathException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
            </content>
        </type>
        <type derived="true" id="type.2001">
            <name>const InvalidPathException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1713">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566550"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1764">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566613"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1736">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566579"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1815">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566698"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1784">
            <name>const LockGuard&lt;Mtx></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
            </content>
        </type>
        <type derived="true" id="type.1785">
            <name>const LockGuard&lt;Mtx>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1971">
            <name>const LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11572183"/>
            </content>
        </type>
        <type derived="true" id="type.1972">
            <name>const LockGuard&lt;System.Threading.Mutex>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11572183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2007">
            <name>const Mutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.2015">
            <name>const NetworkByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
            </content>
        </type>
        <type derived="true" id="type.2016">
            <name>const NetworkByteStream&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2002">
            <name>const OutputStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OutputStream_D306768ED83C9FB00EA54CD61D604CE2BF727452"/>
            </content>
        </type>
        <type derived="true" id="type.1794">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1791">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583653">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583650"/>
            </content>
        </type>
        <type derived="true" id="type.1778">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1775"/>
            </content>
        </type>
        <type derived="true" id="type.11583655">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583650"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1780">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1775"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583654">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583650"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1779">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1775"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1616">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1613"/>
            </content>
        </type>
        <type derived="true" id="type.11583491">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583488"/>
            </content>
        </type>
        <type derived="true" id="type.1618">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1613"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583493">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583488"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583492">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583488"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1617">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1613"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583492">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583488"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583510">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583507"/>
            </content>
        </type>
        <type derived="true" id="type.1635">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1632"/>
            </content>
        </type>
        <type derived="true" id="type.11583512">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583507"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1637">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1632"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583512">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583507"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583511">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583507"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1636">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1632"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1966">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1963"/>
            </content>
        </type>
        <type derived="true" id="type.11583842">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583839"/>
            </content>
        </type>
        <type derived="true" id="type.11583844">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583839"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1968">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1963"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583844">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583839"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583843">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583839"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1967">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1963"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583843">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583839"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1646">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1643"/>
            </content>
        </type>
        <type derived="true" id="type.11583521">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583518"/>
            </content>
        </type>
        <type derived="true" id="type.11583523">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583518"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1648">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1643"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583523">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583518"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583522">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583518"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1647">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1643"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583500">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583497"/>
            </content>
        </type>
        <type derived="true" id="type.1625">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1622"/>
            </content>
        </type>
        <type derived="true" id="type.11583500">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583497"/>
            </content>
        </type>
        <type derived="true" id="type.11583502">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583497"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1627">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1622"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583502">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583497"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583501">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583497"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1626">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1622"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11583501">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11583497"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2008">
            <name>const RecursiveMutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RecursiveMutex_B9ED5479754BBDDED6A4491348BBD2F20F701D82"/>
            </content>
        </type>
        <type derived="true" id="type.2024">
            <name>const SocketException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
            </content>
        </type>
        <type derived="true" id="type.2025">
            <name>const SocketException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1989">
            <name>const StaticInitCriticalSection</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
            </content>
        </type>
        <type derived="true" id="type.1990">
            <name>const StaticInitCriticalSection&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2003">
            <name>const StreamWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
            </content>
        </type>
        <type derived="true" id="type.11567125">
            <name>const String&lt;char>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.11567120"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1705">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566529"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1704">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566527"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1733">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566570"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1701">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566522"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1731">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566568"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1699">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566519"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1698">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566517"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1730">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566566"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1696">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566514"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1714">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566551"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1712">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566548"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1711">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566546"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1702">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566524"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1693">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566509"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1692">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566507"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1710">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566544"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1709">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566542"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1690">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566504"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1689">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566502"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1688">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566500"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1708">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566540"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1687">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566491"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1707">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566538"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1686">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566489"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1685">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566486"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1684">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566484"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1683">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566482"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1682">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566479"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1652">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566454"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1654">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566456"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1695">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566512"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1808">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566691"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1806">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566689"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1792">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566651"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1789">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566648"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1752">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566593"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1787">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566639"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2018">
            <name>const TcpClient</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
            </content>
        </type>
        <type derived="true" id="type.2019">
            <name>const TcpClient&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2021">
            <name>const TcpListener</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
            </content>
        </type>
        <type derived="true" id="type.2022">
            <name>const TcpListener&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2026">
            <name>const TcpSocket</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
            </content>
        </type>
        <type derived="true" id="type.11583890">
            <name>const TcpSocket&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2009">
            <name>const ThreadingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
            </content>
        </type>
        <type derived="true" id="type.2010">
            <name>const ThreadingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1700">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566520"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1697">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566515"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1703">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566525"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1790">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566649"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1694">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566510"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1691">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566505"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1788">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566640"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1706">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566530"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1793">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566652"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2013">
            <name>const UnicodeException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
            </content>
        </type>
        <type derived="true" id="type.2014">
            <name>const UnicodeException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1765">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11566614"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1597">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11567043"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1601">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11567056"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1741">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11568345"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1668">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11567499"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1745">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11568359"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1672">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="11567512"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.11565911">
            <name>int</name>
        </type>
        <type basic="true" id="type.11565913">
            <name>long</name>
        </type>
        <type basic="true" id="type.11565919">
            <name>uchar</name>
        </type>
        <type derived="true" id="type.11565962">
            <name>uchar&amp;</name>
            <content>
                <baseType ref="type.11565919"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11565961">
            <name>uchar*</name>
            <content>
                <baseType ref="type.11565919"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.11565912">
            <name>uint</name>
        </type>
        <type derived="true" id="type.11565941">
            <name>uint&amp;</name>
            <content>
                <baseType ref="type.11565912"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11565940">
            <name>uint*</name>
            <content>
                <baseType ref="type.11565912"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.11565914">
            <name>ulong</name>
        </type>
        <type derived="true" id="type.11565947">
            <name>ulong&amp;</name>
            <content>
                <baseType ref="type.11565914"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11565946">
            <name>ulong*</name>
            <content>
                <baseType ref="type.11565914"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.11565918">
            <name>wchar</name>
        </type>
        <type derived="true" id="type.11565959">
            <name>wchar&amp;</name>
            <content>
                <baseType ref="type.11565918"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11565958">
            <name>wchar*</name>
            <content>
                <baseType ref="type.11565918"/>
                <qualifier>*</qualifier>
            </content>
        </type>
    </types>
</library>
