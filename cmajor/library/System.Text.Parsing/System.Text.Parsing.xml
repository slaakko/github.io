<library>
    <name>System.Text.Parsing</name>
    <style>../../style/cmdoc.css</style>
    <namespaces>
        <namespace id="System.Text.Parsing">
            <name>System.Text.Parsing</name>
            <classes>
                <class id="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A">
                    <name>ActionParser</name>
                    <groupName>ActionParser</groupName>
                    <syntax> public class ActionParser;</syntax>
                    <baseClass ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                    <constructors>
                        <constructor id="constructor_ActionParser_A3D419CE062EB871214024A812E9F0F6D307670B">
                            <name>ActionParser(const String&lt;uchar>&amp; name_, Parser* child_)</name>
                            <syntax>public ActionParser(const String&lt;uchar>&amp; name_, Parser* child_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>child_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ActionParser_04FF93BB91F45761B6C02A4AE95D118F65E7FB80">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Action_ActionParser_7E1D5A7A3214868A5B73DF0D102F8BFE8CA157A8">
                            <name>Action() const</name>
                            <syntax>public ParsingAction Action() const;</syntax>
                            <returnType ref="37dc5721-3977-479f-ac14-288ec050ec54"/>
                        </function>
                        <function id="member_function_Failure_ActionParser_4641A209F3C4D38AC6D7AE85DA55792D60D7FF45">
                            <name>Failure() const</name>
                            <syntax>public FailureAction Failure() const;</syntax>
                            <returnType ref="e912d177-ad2c-4bb8-a5fe-8065e2ca8f72"/>
                        </function>
                        <function id="member_function_FailureCode_ActionParser_A4BBFB7865FC97611CB362B5BB8791B43E851118">
                            <name>FailureCode() const</name>
                            <syntax>public CompoundStatement* FailureCode() const;</syntax>
                            <returnType ref="type.36ef9524-152b-4d56-a223-9deda1c9d47a"/>
                        </function>
                        <function id="member_function_MethodName_ActionParser_24AC3A9ED74A19C2B2761E90C778EF46BF702F94">
                            <name>MethodName()</name>
                            <syntax>public String&lt;uchar> MethodName();</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Parse_ActionParser_AFAE656F66341525B29E731D8BD5DF6E3DA4AD83">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                        <function id="member_function_SetAction_ActionParser_7F42755E09F6B27F76E6B6A10049B8A3331B5C63">
                            <name>SetAction(ParsingAction action_)</name>
                            <syntax>public void SetAction(ParsingAction action_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>action_</name>
                                    <type ref="37dc5721-3977-479f-ac14-288ec050ec54"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetFailure_ActionParser_2BC92166D762C99E9F1D568256A0177D4434D554">
                            <name>SetFailure(FailureAction failureAction_)</name>
                            <syntax>public void SetFailure(FailureAction failureAction_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>failureAction_</name>
                                    <type ref="e912d177-ad2c-4bb8-a5fe-8065e2ca8f72"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetFailureCode_ActionParser_6B3A324DC05DC6769797C1CC7E65EB9CFDE00590">
                            <name>SetFailureCode(CompoundStatement* failureCode_)</name>
                            <syntax>public void SetFailureCode(CompoundStatement* failureCode_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>failureCode_</name>
                                    <type ref="type.36ef9524-152b-4d56-a223-9deda1c9d47a"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetSuccessCode_ActionParser_D21842078345AB507BB7DE3EF57E0F216E738B11">
                            <name>SetSuccessCode(CompoundStatement* successCode_)</name>
                            <syntax>public void SetSuccessCode(CompoundStatement* successCode_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>successCode_</name>
                                    <type ref="type.36ef9524-152b-4d56-a223-9deda1c9d47a"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SuccessCode_ActionParser_B69745834019AF1EBBF911DAAD30342B58348F40">
                            <name>SuccessCode() const</name>
                            <syntax>public CompoundStatement* SuccessCode() const;</syntax>
                            <returnType ref="type.36ef9524-152b-4d56-a223-9deda1c9d47a"/>
                        </function>
                        <function id="member_function_VariableName_ActionParser_794D146116C34EF15F073FC6A56D058AD4C0FD15">
                            <name>VariableName()</name>
                            <syntax>public String&lt;uchar> VariableName();</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                    </functions>
                </class>
                <class id="class_AlphabeticParser_45DD8543651C76160EC9B3B2107BA2BF503D7E2F">
                    <name>AlphabeticParser</name>
                    <groupName>AlphabeticParser</groupName>
                    <syntax> public class AlphabeticParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_AlphabeticParser_E1AFD8DEA5209DF9CF410E4E992CBDD35E0781EA">
                            <name>AlphabeticParser()</name>
                            <syntax>public nothrow AlphabeticParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_AlphabeticParser_4CDD6804153C9DBC9112A458E2A3115B3BA7F17C">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_AlphabeticParser_A9520121328DE85258CB97CC3FD23DD136BADDFC">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_AlternativeParser_8DD9857AEB00E695967B3B1B3B8C707141C6AD93">
                    <name>AlternativeParser</name>
                    <groupName>AlternativeParser</groupName>
                    <syntax> public class AlternativeParser;</syntax>
                    <baseClass ref="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA"/>
                    <constructors>
                        <constructor id="constructor_AlternativeParser_650A613B29EDC1FEA31B170247C9AAA68965A3A2">
                            <name>AlternativeParser(Parser* left_, Parser* right_)</name>
                            <syntax>public AlternativeParser(Parser* left_, Parser* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_AlternativeParser_73B2C3277D9842D2A60E5D3BB1DA512A86778646">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_AlternativeParser_EB2CE400062FD63D2634CE919B41AC2445D8FCAA">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_AnyCharParser_D8CBAF47F831F823FE8E427A422286DAB5951B4B">
                    <name>AnyCharParser</name>
                    <groupName>AnyCharParser</groupName>
                    <syntax> public class AnyCharParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_AnyCharParser_423FBF11D0ED1DD1C7817F6B464B1DA7098029BE">
                            <name>AnyCharParser()</name>
                            <syntax>public nothrow AnyCharParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_AnyCharParser_4CF4F4A2A1691B1847B89B4E657F1E4BF51E4718">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_AnyCharParser_BDFFEEE8E7D3DCA634CB3645D1C6A1593FFF5730">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ArgumentCollector_8DB5AA794D02FF745237C5821824D8F36A738051">
                    <name>ArgumentCollector</name>
                    <groupName>ArgumentCollector</groupName>
                    <syntax> public class ArgumentCollector;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <functions>
                        <function id="member_function_Accept_ArgumentCollector_6CE88579B79051DA62C9365EFB51F1706567E0D0">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddArgument_ArgumentCollector_DA723F3653FCCAB3FBE2C4F6D099F74C2F8C2574">
                            <name>AddArgument(DomObject* argument)</name>
                            <syntax>public override void AddArgument(DomObject* argument);</syntax>
                            <parameters>
                                <parameter>
                                    <name>argument</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Arguments_ArgumentCollector_A4E03F4E5CC686FACE13FDF870BAB50C763C04F2">
                            <name>Arguments()</name>
                            <syntax>public List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>> Arguments();</syntax>
                            <returnType ref="type.7424ce3b-e581-429a-93ed-24be04c68e1a"/>
                        </function>
                    </functions>
                </class>
                <class id="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353">
                    <name>AttrOrVar</name>
                    <groupName>AttrOrVar</groupName>
                    <syntax> public class AttrOrVar;</syntax>
                    <constructors>
                        <constructor id="constructor_AttrOrVar_80B5D160D6CE01E05B7744A06F85AA397DDCC8CD">
                            <name>AttrOrVar(const String&lt;uchar>&amp; type_, const String&lt;uchar>&amp; name_)</name>
                            <syntax>public nothrow AttrOrVar(const String&lt;uchar>&amp; type_, const String&lt;uchar>&amp; name_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>type_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Name_AttrOrVar_68CAAABAC933DA72DDE108233A340AFE126A08FB">
                            <name>Name() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Name() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_Type_AttrOrVar_835AD9BC08FFB51781AA902D54A2CB8F612B2F72">
                            <name>Type() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Type() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                    </functions>
                </class>
                <class id="class_BaseCharParser_F1DEF3A63C197D74465AC1D960F197C940D83E2E">
                    <name>BaseCharParser</name>
                    <groupName>BaseCharParser</groupName>
                    <syntax> public class BaseCharParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_BaseCharParser_61C40EE157357D4CD42354FE0A603DF22C514284">
                            <name>BaseCharParser()</name>
                            <syntax>public nothrow BaseCharParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_BaseCharParser_3F97EB60D09015C9603275F45F4B6A2B16CAF720">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_BaseCharParser_D25DF03A2204691F1D0D80755153F5C12641B7AE">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA">
                    <name>BinaryParser</name>
                    <groupName>BinaryParser</groupName>
                    <syntax>abstract public class BinaryParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="constructor_BinaryParser_459621CD50EBCEAA998C0787559E55F43E70DCBA">
                            <name>BinaryParser(const String&lt;uchar>&amp; name_, Parser* left_, Parser* right_, const String&lt;uchar>&amp; info_)</name>
                            <syntax>public BinaryParser(const String&lt;uchar>&amp; name_, Parser* left_, Parser* right_, const String&lt;uchar>&amp; info_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                                <parameter>
                                    <name>info_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Left_BinaryParser_FE60510BDB71632960F1C5C87217FCA01A6CE5B4">
                            <name>Left() const</name>
                            <syntax>public nothrow inline Parser* Left() const;</syntax>
                            <returnType ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                        </function>
                        <function id="member_function_Right_BinaryParser_688BA3D7785A21D4CB397B020BDE88DC99B0DBCC">
                            <name>Right() const</name>
                            <syntax>public nothrow inline Parser* Right() const;</syntax>
                            <returnType ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                        </function>
                    </functions>
                </class>
                <class id="class_CasedLetterParser_6C4CB1503DDB17FE7152408AFFEB79501A61B243">
                    <name>CasedLetterParser</name>
                    <groupName>CasedLetterParser</groupName>
                    <syntax> public class CasedLetterParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_CasedLetterParser_28B622146ED51553B8D522BAEE03B0847EE86873">
                            <name>CasedLetterParser()</name>
                            <syntax>public nothrow CasedLetterParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_CasedLetterParser_BAE41405A5FC021E7DEB6CC98BCA2158C45AC73D">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_CasedLetterParser_9E5916771023D33975683C32636D039DF99E7A6C">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA">
                    <name>CharParser</name>
                    <groupName>CharParser</groupName>
                    <syntax> public class CharParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="constructor_CharParser_000296F9812F7C875F6A1FE7FC056A7830CE3E37">
                            <name>CharParser(uchar c_)</name>
                            <syntax>public nothrow CharParser(uchar c_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>c_</name>
                                    <type ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_CharParser_90CF6875A059FBBB248D30E53AB4F2D70757C5B8">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Char_CharParser_4CFF7053501275E5D0CCD374597985642BAFF47A">
                            <name>Char() const</name>
                            <syntax>public nothrow inline uchar Char() const;</syntax>
                            <returnType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                        </function>
                        <function id="member_function_Parse_CharParser_D06F0C614F5B2B7582D46AC3F63E78813009AF52">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC">
                    <name>CharRange</name>
                    <groupName>CharRange</groupName>
                    <syntax> public class CharRange;</syntax>
                    <constructors>
                        <constructor id="constructor_CharRange_DB5B00B663211F735D792685DB05ED438824124A">
                            <name>CharRange(uchar begin_)</name>
                            <syntax>public nothrow CharRange(uchar begin_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>begin_</name>
                                    <type ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_CharRange_F3430FDA456C2DB45859C0C5655C5E2089B4901C">
                            <name>CharRange(uchar begin_, uchar end_)</name>
                            <syntax>public nothrow CharRange(uchar begin_, uchar end_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>begin_</name>
                                    <type ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                                </parameter>
                                <parameter>
                                    <name>end_</name>
                                    <type ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Begin_CharRange_FE0640795188697A3CC4441D26898B4D21BBA37B">
                            <name>Begin() const</name>
                            <syntax>public nothrow inline uchar Begin() const;</syntax>
                            <returnType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                        </function>
                        <function id="member_function_End_CharRange_183243ED483F58471997D6233F4505C48FF7C4EB">
                            <name>End() const</name>
                            <syntax>public nothrow inline uchar End() const;</syntax>
                            <returnType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                        </function>
                        <function id="member_function_Includes_CharRange_7A008F40E93ABF3ED78FD55C06FDDE73E694A7EA">
                            <name>Includes(uchar c) const</name>
                            <syntax>public nothrow inline bool Includes(uchar c) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>c</name>
                                    <type ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_SetBegin_CharRange_DE74DA82236B69A580D4477C5410D3357EC250D2">
                            <name>SetBegin(uchar begin_)</name>
                            <syntax>public nothrow inline void SetBegin(uchar begin_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>begin_</name>
                                    <type ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetEnd_CharRange_33714E97E052CDDF2A86EF9E3E899106AF0B63E7">
                            <name>SetEnd(uchar end_)</name>
                            <syntax>public nothrow inline void SetEnd(uchar end_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>end_</name>
                                    <type ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_CharSetParser_1549A5D12A015735356B2B65DB64C4AF85157B9A">
                    <name>CharSetParser</name>
                    <groupName>CharSetParser</groupName>
                    <syntax> public class CharSetParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="constructor_CharSetParser_D6E385FFA6E70831056E09A35F5F65D04FC23269">
                            <name>CharSetParser(const String&lt;uchar>&amp; s_)</name>
                            <syntax>public CharSetParser(const String&lt;uchar>&amp; s_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>s_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_CharSetParser_3AF8EC830BC4FD63B9BBFDD87DB7FA1C48ABEE53">
                            <name>CharSetParser(const String&lt;uchar>&amp; s_, bool inverse_)</name>
                            <syntax>public CharSetParser(const String&lt;uchar>&amp; s_, bool inverse_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>s_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>inverse_</name>
                                    <type ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_CharSetParser_EDDAD23ED5AC7D3468A1D0E3894D6F53F8E61B78">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Inverse_CharSetParser_4D82550F8A3C3CA3B335FAF07DF0BA583D026B2B">
                            <name>Inverse() const</name>
                            <syntax>public nothrow inline bool Inverse() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_Parse_CharSetParser_B3544751C1D537FCA7A2C9A6C44FFB499E685228">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                        <function id="member_function_Set_CharSetParser_6FBBF4222832B5A701AD96AC8FB7E356EF0F6369">
                            <name>Set() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Set() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ClosePunctuationParser_EEBF21313A80F897CA549B02A6216FE79BF4E902">
                    <name>ClosePunctuationParser</name>
                    <groupName>ClosePunctuationParser</groupName>
                    <syntax> public class ClosePunctuationParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_ClosePunctuationParser_E661657AE0484285A77585942009EBFE7AF31C66">
                            <name>ClosePunctuationParser()</name>
                            <syntax>public nothrow ClosePunctuationParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ClosePunctuationParser_73F3674403894B77837B7348DC34098E41292864">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_ClosePunctuationParser_594C96D6FE843B1CBF4E802CD00B4FFA8AC5D5FC">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53">
                    <name>CodeExpandingVisitor</name>
                    <groupName>CodeExpandingVisitor</groupName>
                    <syntax> public class CodeExpandingVisitor;</syntax>
                    <baseClass ref="class_Visitor_20FFECD046DAE045FE9E47404AA9013F309AFDED"/>
                    <constructors>
                        <constructor id="constructor_CodeExpandingVisitor_7B02632B58D72537AF4A2D4773AEB64A9A6FEDB7">
                            <name>CodeExpandingVisitor(HashMap&lt;String&lt;uchar>, String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp; expandMap_)</name>
                            <syntax>public CodeExpandingVisitor(HashMap&lt;String&lt;uchar>, String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp; expandMap_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>expandMap_</name>
                                    <type ref="type.969cf6a1-6916-49f1-87e3-1021198441c2"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Visit_CodeExpandingVisitor_31CA125F875C6C0AE44C5C36D4B4DBF4DD4C7D73">
                            <name>Visit(Identifier&amp; id)</name>
                            <syntax>public override void Visit(Identifier&amp; id);</syntax>
                            <parameters>
                                <parameter>
                                    <name>id</name>
                                    <type ref="type.5b209244-c04e-492e-a649-42b1ab07eca0"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ConnectorPunctuationParser_2C109CCB1929B5A7DF6B45B53976529B0BBE333B">
                    <name>ConnectorPunctuationParser</name>
                    <groupName>ConnectorPunctuationParser</groupName>
                    <syntax> public class ConnectorPunctuationParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_ConnectorPunctuationParser_92CDCCF879661E7C9AC8CA00552E0B68D4DDB568">
                            <name>ConnectorPunctuationParser()</name>
                            <syntax>public nothrow ConnectorPunctuationParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ConnectorPunctuationParser_9E7D4B727E6C7BA02AF9306902A112B6F82737AE">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_ConnectorPunctuationParser_A87100F43D4666FF6FE9C9D55A014594166AB5E1">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_Context_040573959767ECDC8F1941BD825CEA007DDD9496">
                    <name>Context</name>
                    <groupName>Context</groupName>
                    <syntax>abstract public class Context;</syntax>
                </class>
                <class id="class_ContextStack_36326089C891D467AE5BC740DBC4C07098B375EE">
                    <name>ContextStack</name>
                    <groupName>ContextStack</groupName>
                    <syntax> public class ContextStack;</syntax>
                    <functions>
                        <function id="member_function_Pop_ContextStack_A8592E931AD3166BD2711561F973F7E01A188109">
                            <name>Pop()</name>
                            <syntax>public Context* Pop();</syntax>
                            <returnType ref="type.a78d3871-b46f-407d-9182-7d4830e33913"/>
                        </function>
                        <function id="member_function_Push_ContextStack_09E06BBF728B27C25CCF361F6B31CA493884735C">
                            <name>Push(Context* context)</name>
                            <syntax>public void Push(Context* context);</syntax>
                            <parameters>
                                <parameter>
                                    <name>context</name>
                                    <type ref="type.a78d3871-b46f-407d-9182-7d4830e33913"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ControlParser_1334D26AE4230C2F284FC6316329790AE23C7A28">
                    <name>ControlParser</name>
                    <groupName>ControlParser</groupName>
                    <syntax> public class ControlParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_ControlParser_CD9725EA4C41ED71637CA0543D8E6DA1C952081D">
                            <name>ControlParser()</name>
                            <syntax>public nothrow ControlParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ControlParser_BD9D9BC86430B52700541858EE5E89E00C8B9306">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_ControlParser_ACAB8F35CC42F4A2527995787DED64BEBAE6693A">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_CurrencySymbolParser_20757D3E45D7CCAABB4B408EB8F3EF95925411CC">
                    <name>CurrencySymbolParser</name>
                    <groupName>CurrencySymbolParser</groupName>
                    <syntax> public class CurrencySymbolParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_CurrencySymbolParser_E61BC5F966A0F530641F9289280486ADA40C74E7">
                            <name>CurrencySymbolParser()</name>
                            <syntax>public nothrow CurrencySymbolParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_CurrencySymbolParser_B056F13F8342ED7D9C5DA3B1FAF1DEFAE5EF721F">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_CurrencySymbolParser_42B7793F379962F658E21C7DDFD9F5E0C91D0E58">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_DashPunctuationParser_5AD7DDB1B6093A2764FFBEFB693A74F5328ADCC0">
                    <name>DashPunctuationParser</name>
                    <groupName>DashPunctuationParser</groupName>
                    <syntax> public class DashPunctuationParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_DashPunctuationParser_AAA3E5A0133DED33BDCDA763679A1E945534F17B">
                            <name>DashPunctuationParser()</name>
                            <syntax>public nothrow DashPunctuationParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_DashPunctuationParser_C645EE90BFF207F81E5CD26A5D64B62671430BA8">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_DashPunctuationParser_B104B67BF66EC41456F7A601213AE8F222BFF2F9">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_DecimalNumberParser_730379C9B4D622C667F5095CC66454F3215D4EFF">
                    <name>DecimalNumberParser</name>
                    <groupName>DecimalNumberParser</groupName>
                    <syntax> public class DecimalNumberParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_DecimalNumberParser_C72BED6E8A50963FDBA1A2E0A2A13CCC4917B699">
                            <name>DecimalNumberParser()</name>
                            <syntax>public nothrow DecimalNumberParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_DecimalNumberParser_92FDEB1DDDB71F7187E783AA7BFA9C636B35ABF2">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_DecimalNumberParser_51308EA651AC09F759D8451EE0D6FE9445834783">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_DifferenceParser_6B333D97634B9028F109391E5F702C41F874DE5F">
                    <name>DifferenceParser</name>
                    <groupName>DifferenceParser</groupName>
                    <syntax> public class DifferenceParser;</syntax>
                    <baseClass ref="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA"/>
                    <constructors>
                        <constructor id="constructor_DifferenceParser_1DFD3E09257C9DDBD667CB12360C242C456326E2">
                            <name>DifferenceParser(Parser* left_, Parser* right_)</name>
                            <syntax>public DifferenceParser(Parser* left_, Parser* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_DifferenceParser_F10236987FAD121B0690E625C6DF780FF6CFE713">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_DifferenceParser_C32CB8765D488370B312B0EC926629B566280568">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_DigitParser_A021D42468DFF59A104E5196A3F76F3F12DB9E70">
                    <name>DigitParser</name>
                    <groupName>DigitParser</groupName>
                    <syntax> public class DigitParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_DigitParser_EA503B52E1EDA25F6EF264067CC021B351AE3E3C">
                            <name>DigitParser()</name>
                            <syntax>public nothrow DigitParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_DigitParser_214CB8F0169AA9354DA2DBA92399317B464D10E9">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_DigitParser_7ABCADF29E6B5DB51367986360E7716033F85E78">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_EmptyParser_E7A601A33228A4EE630BE03260AC60547351C266">
                    <name>EmptyParser</name>
                    <groupName>EmptyParser</groupName>
                    <syntax> public class EmptyParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_EmptyParser_81F988A3E2E936BA13D40BD6D7C43E380788CFA5">
                            <name>EmptyParser()</name>
                            <syntax>public nothrow EmptyParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_EmptyParser_12A28CE7475C3BEDF2A41E2FDC5E99611E683C61">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_EmptyParser_31B4FF19965E3EAABCEDB1BE65F923DF7634E426">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_EnclosingMarkParser_F2F5F8431121DAD3720B7EC0D8B35ECDC47FA49F">
                    <name>EnclosingMarkParser</name>
                    <groupName>EnclosingMarkParser</groupName>
                    <syntax> public class EnclosingMarkParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_EnclosingMarkParser_9A9266D6D1C30AFA747A5023C526EF70F8186DDB">
                            <name>EnclosingMarkParser()</name>
                            <syntax>public nothrow EnclosingMarkParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_EnclosingMarkParser_E2642645008E791A75B10EA311078199C80A49F7">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_EnclosingMarkParser_D98C50BAEF1C47F59B42EC3C8D8A4611BF6369B3">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ExclusiveOrParser_024EB6E22761BAB373A51265E66943EC916618FE">
                    <name>ExclusiveOrParser</name>
                    <groupName>ExclusiveOrParser</groupName>
                    <syntax> public class ExclusiveOrParser;</syntax>
                    <baseClass ref="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA"/>
                    <constructors>
                        <constructor id="constructor_ExclusiveOrParser_6166BE80DC6617A2469D1BE65632A509C87AC287">
                            <name>ExclusiveOrParser(Parser* left_, Parser* right_)</name>
                            <syntax>public ExclusiveOrParser(Parser* left_, Parser* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ExclusiveOrParser_1AF6C49074F04E613D8217A49EE4D67593507B9E">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_ExclusiveOrParser_A29F715F9E5CA8942A102DCC7BA18AF821C5742F">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ExpandCodeVisitor_91A3450CB18AC371BEB4812F6196A4A42AC02D77">
                    <name>ExpandCodeVisitor</name>
                    <groupName>ExpandCodeVisitor</groupName>
                    <syntax> public class ExpandCodeVisitor;</syntax>
                    <baseClass ref="class_Visitor_019F0A77C04DF2CCE6FDB74DE512001C068902CF"/>
                    <functions>
                        <function id="member_function_BeginVisit_ExpandCodeVisitor_B2936B7CCC0F6A5943DCEF3EA51FEC9248E2176B">
                            <name>BeginVisit(Grammar&amp; grammar)</name>
                            <syntax>public override void BeginVisit(Grammar&amp; grammar);</syntax>
                            <parameters>
                                <parameter>
                                    <name>grammar</name>
                                    <type ref="type.76b75553-a0fe-4105-8764-20ef4571a182"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C">
                    <name>ExpectationFailure</name>
                    <groupName>ExpectationFailure</groupName>
                    <syntax> public class ExpectationFailure;</syntax>
                    <baseClass ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
                    <constructors>
                        <constructor id="constructor_ExpectationFailure_9633CC6FEA0F34048F1FE3E7CEE0A22A2316F226">
                            <name>ExpectationFailure(const String&lt;uchar>&amp; info_, const String&lt;char>&amp; fileName_, const Span&amp; span_, const uchar* start_, const uchar* end_)</name>
                            <syntax>public ExpectationFailure(const String&lt;uchar>&amp; info_, const String&lt;char>&amp; fileName_, const Span&amp; span_, const uchar* start_, const uchar* end_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>info_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>fileName_</name>
                                    <type ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                                </parameter>
                                <parameter>
                                    <name>span_</name>
                                    <type ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                                </parameter>
                                <parameter>
                                    <name>start_</name>
                                    <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                                </parameter>
                                <parameter>
                                    <name>end_</name>
                                    <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_End_ExpectationFailure_ECCA98A4EACB968A8161C6AC20648D8437084327">
                            <name>End() const</name>
                            <syntax>public nothrow inline const uchar* End() const;</syntax>
                            <returnType ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </function>
                        <function id="member_function_FileName_ExpectationFailure_F50129B2BF802BE86665921B1EEA5A856AD47EF1">
                            <name>FileName() const</name>
                            <syntax>public nothrow inline const String&lt;char>&amp; FileName() const;</syntax>
                            <returnType ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                        </function>
                        <function id="member_function_GetSpan_ExpectationFailure_E795D9FBB597C28838CE5C7E889411A216B87460">
                            <name>GetSpan() const</name>
                            <syntax>public nothrow inline const Span&amp; GetSpan() const;</syntax>
                            <returnType ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                        </function>
                        <function id="member_function_Info_ExpectationFailure_4D009D41D5B3C959082179B0DF23A10810A6F495">
                            <name>Info() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Info() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_Start_ExpectationFailure_311AAA5072CE4BF3155F12D2A2BA133F570AA837">
                            <name>Start() const</name>
                            <syntax>public nothrow inline const uchar* Start() const;</syntax>
                            <returnType ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB">
                    <name>ExpectationParser</name>
                    <groupName>ExpectationParser</groupName>
                    <syntax> public class ExpectationParser;</syntax>
                    <baseClass ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                    <constructors>
                        <constructor id="constructor_ExpectationParser_D0EBD32232E9A51AC6C5AE54C1FD9AC8BB1F678A">
                            <name>ExpectationParser(Parser* child_)</name>
                            <syntax>public ExpectationParser(Parser* child_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>child_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ExpectationParser_206592DDC6A581E412D5288AFFF9B1DB46F74FE0">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_ExpectationParser_19D29558EFE0DFC2BF4C3093A4C6A10048C35975">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_FileInfo_482D1595D6ADD6B76DCA9EE9DD41AFCD55B8A5BA">
                    <name>FileInfo</name>
                    <groupName>FileInfo</groupName>
                    <syntax> public class FileInfo;</syntax>
                    <functions>
                        <function id="member_function_Files_FileInfo_2F8120F1EAD26EAAD9A2493B0E719E9757B0EB30">
                            <name>Files()</name>
                            <syntax>public nothrow inline const List&lt;String&lt;char>>&amp; Files();</syntax>
                            <returnType ref="type.466b2e21-da6b-43fa-9fe7-f6cbe76414c4"/>
                        </function>
                        <function id="member_function_GetFilePath_FileInfo_24B329D8FC76FA046CD8E68E9AE44BA1FBF1F2F0">
                            <name>GetFilePath(int index)</name>
                            <syntax>public nothrow String&lt;char> GetFilePath(int index);</syntax>
                            <parameters>
                                <parameter>
                                    <name>index</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.a08e7b96-65b1-4902-bc7e-40a22e01d134"/>
                        </function>
                        <function id="member_function_SetFiles_FileInfo_09D3C606893B23A71E41D1442301C3FCAFE2AEF9">
                            <name>SetFiles(const List&lt;String&lt;char>>&amp; files_)</name>
                            <syntax>public void SetFiles(const List&lt;String&lt;char>>&amp; files_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>files_</name>
                                    <type ref="type.466b2e21-da6b-43fa-9fe7-f6cbe76414c4"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                    <staticMemberFunctions>
                        <function id="member_function_Instance_FileInfo_572ED04C6FA68B9AC205E07BCDE5C8D918692291">
                            <name>Instance()</name>
                            <syntax>public static nothrow FileInfo&amp; Instance();</syntax>
                            <returnType ref="type.1b3bd59e-77f0-4d22-acba-2a016378f1b6"/>
                        </function>
                    </staticMemberFunctions>
                </class>
                <class id="class_FinalPunctuationParser_7C92D80BD253997107DD6B218F341C05EA286E5B">
                    <name>FinalPunctuationParser</name>
                    <groupName>FinalPunctuationParser</groupName>
                    <syntax> public class FinalPunctuationParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_FinalPunctuationParser_483F3BE37A88788A26B6C81EC0D5B0A2600C221A">
                            <name>FinalPunctuationParser()</name>
                            <syntax>public nothrow FinalPunctuationParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_FinalPunctuationParser_C543D15AD45E7180E6CD96BB4501DD2223D7F379">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_FinalPunctuationParser_D198E2B40AF487032A6DB61E123F66B215E89593">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_FormatParser_3606CA5D49BB1FBCB55AC9A61CA2764AEDFD83DF">
                    <name>FormatParser</name>
                    <groupName>FormatParser</groupName>
                    <syntax> public class FormatParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_FormatParser_1252C1DBA36C03CA2F60DF3AF1A7DDF484C1A8EA">
                            <name>FormatParser()</name>
                            <syntax>public nothrow FormatParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_FormatParser_EDF2E600C8891193D7A33C267BD2963DF4D538F8">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_FormatParser_5954AE9FF053D4283501A476569AAB03AE60AB59">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6">
                    <name>Grammar</name>
                    <groupName>Grammar</groupName>
                    <syntax> public class Grammar;</syntax>
                    <baseClass ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                    <constructors>
                        <constructor id="constructor_Grammar_8EBA43E8427201FDC85973DDA7BDAD8C2A8EA1EA">
                            <name>Grammar(const String&lt;uchar>&amp; name_, Scope* enclosingScope_)</name>
                            <syntax>public Grammar(const String&lt;uchar>&amp; name_, Scope* enclosingScope_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>enclosingScope_</name>
                                    <type ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_Grammar_4C55F08DFDCFA535E0D2EA44B83AF275156DA205">
                            <name>Grammar(const String&lt;uchar>&amp; name_, Scope* enclosingScope_, ParsingDomain* parsingDomain_)</name>
                            <syntax>public Grammar(const String&lt;uchar>&amp; name_, Scope* enclosingScope_, ParsingDomain* parsingDomain_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>enclosingScope_</name>
                                    <type ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                                </parameter>
                                <parameter>
                                    <name>parsingDomain_</name>
                                    <type ref="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Grammar_68B2CD75DDE71F783D54E16CDA1CF570BE68F27F">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddGrammarReference_Grammar_9DFFC285B6144167120A0D10DE89D7B2EDE039FE">
                            <name>AddGrammarReference(Grammar* grammarReference)</name>
                            <syntax>public void AddGrammarReference(Grammar* grammarReference);</syntax>
                            <parameters>
                                <parameter>
                                    <name>grammarReference</name>
                                    <type ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddRule_Grammar_A800846BADD8ED1E43F7B3F91007DB2439B73A60">
                            <name>AddRule(RuleParser* rule)</name>
                            <syntax>public void AddRule(RuleParser* rule);</syntax>
                            <parameters>
                                <parameter>
                                    <name>rule</name>
                                    <type ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddRuleLink_Grammar_6BF1336CE96C2C51FF183176856CEFA1057BEDD0">
                            <name>AddRuleLink(RuleLink* ruleLink)</name>
                            <syntax>public void AddRuleLink(RuleLink* ruleLink);</syntax>
                            <parameters>
                                <parameter>
                                    <name>ruleLink</name>
                                    <type ref="type.085c7307-564a-4004-9bb6-d3d462467d33"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_CreateRules_Grammar_8748755E0A5CA882B2EA1CF80B3147AF963378D4">
                            <name>CreateRules()</name>
                            <syntax>public virtual void CreateRules();</syntax>
                        </function>
                        <function id="member_function_Domain_Grammar_123618B811872C22955EA7B9FA50C5A79FF5382C">
                            <name>Domain() const</name>
                            <syntax>public nothrow inline ParsingDomain* Domain() const;</syntax>
                            <returnType ref="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e"/>
                        </function>
                        <function id="member_function_GetReferencedGrammars_Grammar_77AD4BF1441AA5BECA2AAFAC1137D0F70AB5B40D">
                            <name>GetReferencedGrammars()</name>
                            <syntax>public virtual void GetReferencedGrammars();</syntax>
                        </function>
                        <function id="member_function_GetRule_Grammar_9D013C89DD382D8F8C3D097AD5C925BCB4E80400">
                            <name>GetRule(const String&lt;uchar>&amp; ruleName) const</name>
                            <syntax>public RuleParser* GetRule(const String&lt;uchar>&amp; ruleName) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>ruleName</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                        </function>
                        <function id="member_function_Link_Grammar_5B33F358BC1834D793AF608D5B26DC352C277840">
                            <name>Link()</name>
                            <syntax>public void Link();</syntax>
                        </function>
                        <function id="member_function_Log_Grammar_9A4DE350A2A32EF13FD76450BDFD0F197560DDB4">
                            <name>Log() const</name>
                            <syntax>public nothrow inline StreamWriter* Log() const;</syntax>
                            <returnType ref="type.85ebcac6-844b-43c9-894b-e3f4bb81c756"/>
                        </function>
                        <function id="member_function_MaxLogLineLength_Grammar_DD5B0EEAB2B54A6D9E9A8514EBC5225632C970BE">
                            <name>MaxLogLineLength() const</name>
                            <syntax>public nothrow inline int MaxLogLineLength() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                        <function id="member_function_Ns_Grammar_FE054E55983200E730FBCEBBB919344C7ACB111B">
                            <name>Ns() const</name>
                            <syntax>public nothrow inline Namespace* Ns() const;</syntax>
                            <returnType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                        </function>
                        <function id="function_group_Parse_85EA3107130DF7FB6B328E90526ECD6ABEA6783D">
                            <name>Parse</name>
                            <overloads>
                                <overload id="member_function_Parse_Grammar_8350DA589903FB259AE570C9EB511850C920A199">
                                    <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack)</name>
                                    <syntax>public Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>scanner</name>
                                            <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                        </parameter>
                                        <parameter>
                                            <name>stack</name>
                                            <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                                </overload>
                                <overload id="member_function_Parse_Grammar_FA99D92E851100881B108C60B1CC4AC54F5ECD90">
                                    <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                                    <syntax>public Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>scanner</name>
                                            <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                        </parameter>
                                        <parameter>
                                            <name>stack</name>
                                            <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                        </parameter>
                                        <parameter>
                                            <name>parsingData</name>
                                            <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                                </overload>
                                <overload id="member_function_Parse_Grammar_3E71DABF390E49B6864B0F47E2825912C603771E">
                                    <name>Parse(const uchar* start, const uchar* end, int fileIndex, const String&lt;char>&amp; fileName)</name>
                                    <syntax>public void Parse(const uchar* start, const uchar* end, int fileIndex, const String&lt;char>&amp; fileName);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>start</name>
                                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                                        </parameter>
                                        <parameter>
                                            <name>end</name>
                                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                                        </parameter>
                                        <parameter>
                                            <name>fileIndex</name>
                                            <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                        </parameter>
                                        <parameter>
                                            <name>fileName</name>
                                            <type ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Parse_Grammar_278B0D27EC352BC7494C921FF783ED35EFFA629A">
                                    <name>Parse(const uchar* start, const uchar* end, int fileIndex, const String&lt;char>&amp; fileName, ParsingData* parsingData)</name>
                                    <syntax>public void Parse(const uchar* start, const uchar* end, int fileIndex, const String&lt;char>&amp; fileName, ParsingData* parsingData);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>start</name>
                                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                                        </parameter>
                                        <parameter>
                                            <name>end</name>
                                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                                        </parameter>
                                        <parameter>
                                            <name>fileIndex</name>
                                            <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                        </parameter>
                                        <parameter>
                                            <name>fileName</name>
                                            <type ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                                        </parameter>
                                        <parameter>
                                            <name>parsingData</name>
                                            <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_ReferencedGrammars_Grammar_8A2112C51F5D3604A3F7943F7DB7F27811EE1385">
                            <name>ReferencedGrammars() const</name>
                            <syntax>public nothrow inline const HashSet&lt;Grammar*, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>&amp; ReferencedGrammars() const;</syntax>
                            <returnType ref="type.411a4da5-94e6-4c23-9e40-800d21e16d15"/>
                        </function>
                        <function id="member_function_ResolveSkipRule_Grammar_64D85319893F1557EAB3DB7550B8F01F5151C5D5">
                            <name>ResolveSkipRule()</name>
                            <syntax>public void ResolveSkipRule();</syntax>
                        </function>
                        <function id="member_function_ResolveStartRule_Grammar_9F33F60BCC2A2D98602146285F1C8BCB4FC7A425">
                            <name>ResolveStartRule()</name>
                            <syntax>public void ResolveStartRule();</syntax>
                        </function>
                        <function id="member_function_RuleLinks_Grammar_D37DED3AE3E08C709307FC1AF89EEE0FA66A3046">
                            <name>RuleLinks() const</name>
                            <syntax>public nothrow inline const List&lt;RuleLink*>&amp; RuleLinks() const;</syntax>
                            <returnType ref="type.e5a17825-fd6b-4c7f-9cd0-c47c9438b5c4"/>
                        </function>
                        <function id="member_function_Rules_Grammar_F3211C7531D1327C0C36F3C9F0CD09D15FBFE657">
                            <name>Rules() const</name>
                            <syntax>public nothrow inline const List&lt;RuleParser*>&amp; Rules() const;</syntax>
                            <returnType ref="type.47411ca4-2242-4039-948b-fc227bb28232"/>
                        </function>
                        <function id="member_function_SetLog_Grammar_A4680F05E314BAC8760F23D8B03EC745F1300387">
                            <name>SetLog(StreamWriter* log_)</name>
                            <syntax>public nothrow void SetLog(StreamWriter* log_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>log_</name>
                                    <type ref="type.85ebcac6-844b-43c9-894b-e3f4bb81c756"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetMaxLogLineLength_Grammar_9546EFC7559743459AFE65D3ABA68A7032478963">
                            <name>SetMaxLogLineLength(int maxLogLineLength_)</name>
                            <syntax>public nothrow void SetMaxLogLineLength(int maxLogLineLength_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>maxLogLineLength_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetNs_Grammar_C6660E8C889BBB256C175AB4157CA6CD9D07DB15">
                            <name>SetNs(Namespace* ns_)</name>
                            <syntax>public nothrow void SetNs(Namespace* ns_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>ns_</name>
                                    <type ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetSkipRule_Grammar_8BFEDFD7FB29486DDE5DFA6E79098B3600863253">
                            <name>SetSkipRule(RuleParser* skipRule_)</name>
                            <syntax>public nothrow void SetSkipRule(RuleParser* skipRule_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>skipRule_</name>
                                    <type ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetSkipRuleName_Grammar_0C073B232967B2C34A36DEA42C079D8E4C521060">
                            <name>SetSkipRuleName(const String&lt;uchar>&amp; skipRuleName_)</name>
                            <syntax>public nothrow void SetSkipRuleName(const String&lt;uchar>&amp; skipRuleName_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>skipRuleName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetStartRule_Grammar_4F401B9F35C931E159E19C95110A1A6C15929E5E">
                            <name>SetStartRule(RuleParser* startRule_)</name>
                            <syntax>public nothrow void SetStartRule(RuleParser* startRule_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>startRule_</name>
                                    <type ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetStartRuleName_Grammar_049B390570F219BFCEFEBCF875E97F7B33234B9D">
                            <name>SetStartRuleName(const String&lt;uchar>&amp; startRuleName_)</name>
                            <syntax>public nothrow void SetStartRuleName(const String&lt;uchar>&amp; startRuleName_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>startRuleName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SkipRule_Grammar_42CCA06DE0FB094313C023D1F3B83B7400E7AB93">
                            <name>SkipRule() const</name>
                            <syntax>public nothrow inline RuleParser* SkipRule() const;</syntax>
                            <returnType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                        </function>
                        <function id="member_function_SkipRuleName_Grammar_53931099C6827C376FC2BA998C04E0E4DE9FDE68">
                            <name>SkipRuleName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; SkipRuleName() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_StartRule_Grammar_1BBB29B06A432B886D6C2533D84FB7ADE3566A5B">
                            <name>StartRule() const</name>
                            <syntax>public nothrow inline RuleParser* StartRule() const;</syntax>
                            <returnType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                        </function>
                        <function id="member_function_StartRuleName_Grammar_7A79CFCC56C4CA325EE3128950D0E4598197EAFB">
                            <name>StartRuleName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; StartRuleName() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                    </functions>
                </class>
                <class id="class_GraphicParser_CCC378BAB252129868AEF9610BA84DB9CB865D56">
                    <name>GraphicParser</name>
                    <groupName>GraphicParser</groupName>
                    <syntax> public class GraphicParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_GraphicParser_DD3549A19B2A4956551F0D33C59341CE37806088">
                            <name>GraphicParser()</name>
                            <syntax>public nothrow GraphicParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_GraphicParser_284519B3A75213689F23D4CA03D8EF09CC472FC0">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_GraphicParser_7C3AC3C85240B69140BDDAF4DCF6A32099F0E094">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_HexDigitParser_C159CE4D9314E481C4C80F2734D59ED21BCDDFC3">
                    <name>HexDigitParser</name>
                    <groupName>HexDigitParser</groupName>
                    <syntax> public class HexDigitParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_HexDigitParser_AD50E4A8222E78CAE707A9992A1959562B5FFDD9">
                            <name>HexDigitParser()</name>
                            <syntax>public nothrow HexDigitParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_HexDigitParser_9524BF9E23B9DA4C54108377CE5EEBA0F0A3C88B">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_HexDigitParser_7AD10647A8B1508160CB94B88EEAD73C446241A1">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_IdContParser_2E96D9CCED8FB679DACCC042D65F1FF8319AF14A">
                    <name>IdContParser</name>
                    <groupName>IdContParser</groupName>
                    <syntax> public class IdContParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_IdContParser_5D03E3972FE0AFA959C5F2674DAC80B1B5C90D3F">
                            <name>IdContParser()</name>
                            <syntax>public nothrow IdContParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_IdContParser_CB9726A3254FCC7EA657E5D848E21ACEE20621B0">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_IdContParser_120DDA54BCF20EBFA74E85F60BADC3D38558F8AC">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_IdStartParser_7E19B4157FAD686B9AAA24B3303CBA84D5E3B55A">
                    <name>IdStartParser</name>
                    <groupName>IdStartParser</groupName>
                    <syntax> public class IdStartParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_IdStartParser_315A2E9A731D2A2F16A1A76487A0A4258A7A788E">
                            <name>IdStartParser()</name>
                            <syntax>public nothrow IdStartParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_IdStartParser_181CFE32D9657C6F32997A0105796AE171A1883A">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_IdStartParser_E662989B9A9D9406BDCE7C66019CC7C522993636">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_IdentifierCharsRule_F8759732990B698642B4479584B5D4D6D9C390CB">
                    <name>IdentifierCharsRule</name>
                    <groupName>IdentifierCharsRule</groupName>
                    <syntax> public class IdentifierCharsRule;</syntax>
                    <functions>
                        <function id="member_function_GetRule_IdentifierCharsRule_7FFAEC86DE40CAA6887B62B7160E9D687E1E0FE8">
                            <name>GetRule() const</name>
                            <syntax>public nothrow inline RuleParser* GetRule() const;</syntax>
                            <returnType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                        </function>
                    </functions>
                    <staticMemberFunctions>
                        <function id="member_function_Instance_IdentifierCharsRule_C7CD65FE928F59493883F9A58CE78B6CEBDA25A6">
                            <name>Instance()</name>
                            <syntax>public static IdentifierCharsRule&amp; Instance();</syntax>
                            <returnType ref="type.1edcc9b5-1242-4f0e-bf13-66eacfa0b2e8"/>
                        </function>
                    </staticMemberFunctions>
                </class>
                <class id="class_InitialPunctuationParser_FF9A6C6B18A9668464DA0A7894EDEE822BA05F4C">
                    <name>InitialPunctuationParser</name>
                    <groupName>InitialPunctuationParser</groupName>
                    <syntax> public class InitialPunctuationParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_InitialPunctuationParser_2BBAA6A3EF72B55B662A85E91CDB7D2A5CCEDAA7">
                            <name>InitialPunctuationParser()</name>
                            <syntax>public nothrow InitialPunctuationParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_InitialPunctuationParser_2DEE33067B95B6503261CFBB2DD42734B5E518A0">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_InitialPunctuationParser_098709F3FDC7135D5420CF452169E02849805750">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_IntersectionParser_C3227AB2B63C00FCB285B109438BD7DE0BBB4E94">
                    <name>IntersectionParser</name>
                    <groupName>IntersectionParser</groupName>
                    <syntax> public class IntersectionParser;</syntax>
                    <baseClass ref="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA"/>
                    <constructors>
                        <constructor id="constructor_IntersectionParser_662841B9481FBC7B512B1D6BFA6EA6A27990DFB7">
                            <name>IntersectionParser(Parser* left_, Parser* right_)</name>
                            <syntax>public IntersectionParser(Parser* left_, Parser* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_IntersectionParser_D08AECDC93D05596ADCEF4DAE477ED1BCB9E9C1C">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_IntersectionParser_3F232BF9FA9086CCE67E9BC8049BD746384DF2AB">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_KeywordListParser_02161DAF5C377B76A9433EE79663623F8710F2EB">
                    <name>KeywordListParser</name>
                    <groupName>KeywordListParser</groupName>
                    <syntax> public class KeywordListParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="constructor_KeywordListParser_7BF362D7EB128BAB1124E2CC11789C56D1ED82B1">
                            <name>KeywordListParser(const String&lt;uchar>&amp; selectorRuleName_, const List&lt;String&lt;uchar>>&amp; keywords_)</name>
                            <syntax>public KeywordListParser(const String&lt;uchar>&amp; selectorRuleName_, const List&lt;String&lt;uchar>>&amp; keywords_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>selectorRuleName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>keywords_</name>
                                    <type ref="type.e1e3ae2e-fcc8-455f-ad43-10294f91aeeb"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_KeywordListParser_855AF007A66F3250D11B2E5DF54D8E6CC4ABE4D3">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_KeywordListName_KeywordListParser_3C895BAADA3D0BE4E06483F9F5AEDCAAC30F72B9">
                            <name>KeywordListName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; KeywordListName() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_Keywords_KeywordListParser_26F2DFCFDF1478F3F2DB43F3A969CFEDBCA57321">
                            <name>Keywords() const</name>
                            <syntax>public nothrow inline const HashSet&lt;String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp; Keywords() const;</syntax>
                            <returnType ref="type.0efca49c-3832-48f6-ad9b-5b0179210046"/>
                        </function>
                        <function id="member_function_Parse_KeywordListParser_6D30E42BC7DA78305B72FBFDE10BB259274025B6">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                        <function id="member_function_SelectorRule_KeywordListParser_3CB42975E3C04C2F0FAADD17A1D9E11DE352744C">
                            <name>SelectorRule() const</name>
                            <syntax>public nothrow inline RuleParser* SelectorRule() const;</syntax>
                            <returnType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                        </function>
                        <function id="member_function_SelectorRuleName_KeywordListParser_8C03C750503D3FB99F2FD82EC0C95D5FB9621FD5">
                            <name>SelectorRuleName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; SelectorRuleName() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_SetKeywordListName_KeywordListParser_6169355903830BA3D289797CC76E4A554BAEB7E0">
                            <name>SetKeywordListName(const String&lt;uchar>&amp; keywordListName_)</name>
                            <syntax>public nothrow void SetKeywordListName(const String&lt;uchar>&amp; keywordListName_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>keywordListName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetSelectorRule_KeywordListParser_D1177D8394BD27DFF4710B22C7F7C8DF8B47A9A6">
                            <name>SetSelectorRule(RuleParser* selectorRule_)</name>
                            <syntax>public nothrow void SetSelectorRule(RuleParser* selectorRule_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>selectorRule_</name>
                                    <type ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_KeywordParser_A653B0BB080315E503BF719C91EC3C4DAD3F604F">
                    <name>KeywordParser</name>
                    <groupName>KeywordParser</groupName>
                    <syntax> public class KeywordParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="constructor_KeywordParser_B583A4D996C963CB4CB57C9471C60D9BE4D0EF24">
                            <name>KeywordParser(const String&lt;uchar>&amp; keyword_)</name>
                            <syntax>public KeywordParser(const String&lt;uchar>&amp; keyword_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>keyword_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_KeywordParser_B719EEA3321BEF251F4D225D5D5A1CC54708348E">
                            <name>KeywordParser(const String&lt;uchar>&amp; keyword_, const String&lt;uchar>&amp; continuationRuleName_)</name>
                            <syntax>public KeywordParser(const String&lt;uchar>&amp; keyword_, const String&lt;uchar>&amp; continuationRuleName_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>keyword_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>continuationRuleName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_KeywordParser_B52DAEA8664099213409D2DEF7A75156C20C9FA1">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_ContinuationRule_KeywordParser_B3E226C414F66B6DE8D1A375C3C2CE0FDE872A71">
                            <name>ContinuationRule() const</name>
                            <syntax>public nothrow inline RuleParser* ContinuationRule() const;</syntax>
                            <returnType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                        </function>
                        <function id="member_function_ContinuationRuleName_KeywordParser_D214B31537182B8AFA816D4FF5B0EEE3EB1090F2">
                            <name>ContinuationRuleName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; ContinuationRuleName() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_Keyword_KeywordParser_0EB1AFC07CC7EA87A67C7805600EC2F11EED374B">
                            <name>Keyword() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Keyword() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_Parse_KeywordParser_E8D0078419A4CA18F43BFB941E41FB89AD986FA1">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                        <function id="member_function_SetContinuationRule_KeywordParser_28D92F9BA1611C985CD91DBD469E210B2C3CE91A">
                            <name>SetContinuationRule(RuleParser* continuationRule_)</name>
                            <syntax>public void SetContinuationRule(RuleParser* continuationRule_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>continuationRule_</name>
                                    <type ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetContinuationRuleName_KeywordParser_ED2B74C8A0ABEFA776E9D3E92636CC6A03008466">
                            <name>SetContinuationRuleName(const String&lt;uchar>&amp; continuationRuleName_)</name>
                            <syntax>public nothrow void SetContinuationRuleName(const String&lt;uchar>&amp; continuationRuleName_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>continuationRuleName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D">
                    <name>KleeneStarParser</name>
                    <groupName>KleeneStarParser</groupName>
                    <syntax> public class KleeneStarParser;</syntax>
                    <baseClass ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                    <constructors>
                        <constructor id="constructor_KleeneStarParser_CCBAE5A378E11334794328DA846828D424530F0B">
                            <name>KleeneStarParser(Parser* child_)</name>
                            <syntax>public KleeneStarParser(Parser* child_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>child_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_KleeneStarParser_E8C005AB6FF6A0201D407A68AD818476B1F62CC7">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_KleeneStarParser_8191C0243C12AE762479A9F2C97049D4BDA6F420">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_LetterNumberParser_A2E1DA9BF27BD67D2A8F0CA4BFD23F5013D49F07">
                    <name>LetterNumberParser</name>
                    <groupName>LetterNumberParser</groupName>
                    <syntax> public class LetterNumberParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_LetterNumberParser_6369702CB9F67FC181AAF541FFD998A66B514398">
                            <name>LetterNumberParser()</name>
                            <syntax>public nothrow LetterNumberParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_LetterNumberParser_8AF41FED6A6F59460EA65531E265B824C3C05FB1">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_LetterNumberParser_95EF88148536FE36B6ABB21F148E08E629A56D7F">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_LetterParser_AA49F4AA1BFE22DA5E008596CBB5F724C716D263">
                    <name>LetterParser</name>
                    <groupName>LetterParser</groupName>
                    <syntax> public class LetterParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_LetterParser_A5BB9E3C0E44973F817534E3636B0110AF99665B">
                            <name>LetterParser()</name>
                            <syntax>public nothrow LetterParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_LetterParser_DC0204178E095592C5CBBAC4F6245C9EFAC04735">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_LetterParser_625CD55B009D94E406E8FA28F39835666F781BA7">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_LineSeparatorParser_17BDA29613745BBAD949CECBD8755C565F8E1385">
                    <name>LineSeparatorParser</name>
                    <groupName>LineSeparatorParser</groupName>
                    <syntax> public class LineSeparatorParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_LineSeparatorParser_C617309D2AECFB87EBE809C4846944E8DBF78AFC">
                            <name>LineSeparatorParser()</name>
                            <syntax>public nothrow LineSeparatorParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_LineSeparatorParser_97B89EDDBE8C94EED0F16948039D3EAB8B810D0D">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_LineSeparatorParser_5A660C9A479AA8AECA6F622DE874CD82AE4DEC28">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_LinkerVisitor_92E7CB11B5BEAD45509A4A34DFC118DFED4DBD9B">
                    <name>LinkerVisitor</name>
                    <groupName>LinkerVisitor</groupName>
                    <syntax> public class LinkerVisitor;</syntax>
                    <baseClass ref="class_Visitor_019F0A77C04DF2CCE6FDB74DE512001C068902CF"/>
                    <constructors>
                        <constructor id="default_constructor_LinkerVisitor_CC57F310B9CD30C9C521A6976C58F17B39E0DE13">
                            <name>LinkerVisitor()</name>
                            <syntax>public LinkerVisitor();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="function_group_BeginVisit_8D20401578E4234962231F9E3C318771FFF95039">
                            <name>BeginVisit</name>
                            <overloads>
                                <overload id="member_function_BeginVisit_LinkerVisitor_9D22F25D35513BFE87A80F81AC8CCEFD972C7349">
                                    <name>BeginVisit(ActionParser&amp; parser)</name>
                                    <syntax>public override void BeginVisit(ActionParser&amp; parser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>parser</name>
                                            <type ref="type.4d8ee09e-63b4-4583-ae4f-7f0a7de2b770"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_LinkerVisitor_85D7E589B981E9F4365707D8A0FED8CEECD758F7">
                                    <name>BeginVisit(Grammar&amp; grammar)</name>
                                    <syntax>public override void BeginVisit(Grammar&amp; grammar);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>grammar</name>
                                            <type ref="type.76b75553-a0fe-4105-8764-20ef4571a182"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_LinkerVisitor_39AE5AEB5A6CF484C9AED73FF3154F557BFF87D4">
                                    <name>BeginVisit(RuleParser&amp; rule)</name>
                                    <syntax>public override void BeginVisit(RuleParser&amp; rule);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>rule</name>
                                            <type ref="type.9d88513b-9425-401d-9e70-2d75019148b8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="function_group_EndVisit_AFF6FCBD585400C20C90CF27E0918C9F8BA84D2B">
                            <name>EndVisit</name>
                            <overloads>
                                <overload id="member_function_EndVisit_LinkerVisitor_195D48A139F971E8BA2DE65E571E84D57A5EE5BD">
                                    <name>EndVisit(Grammar&amp; grammar)</name>
                                    <syntax>public override void EndVisit(Grammar&amp; grammar);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>grammar</name>
                                            <type ref="type.76b75553-a0fe-4105-8764-20ef4571a182"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_LinkerVisitor_4C1A653F476301C1A913F94ACAE0165BA2B5C538">
                                    <name>EndVisit(RuleParser&amp; rule)</name>
                                    <syntax>public override void EndVisit(RuleParser&amp; rule);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>rule</name>
                                            <type ref="type.9d88513b-9425-401d-9e70-2d75019148b8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="function_group_Visit_5AF64560BB0E0AF021D1602400286D92E02ADC6C">
                            <name>Visit</name>
                            <overloads>
                                <overload id="member_function_Visit_LinkerVisitor_9B7B413031E6EC795630927A672D73BE664432A2">
                                    <name>Visit(KeywordListParser&amp; parser)</name>
                                    <syntax>public override void Visit(KeywordListParser&amp; parser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>parser</name>
                                            <type ref="type.8e4d56c2-fc9b-4678-a014-b8693d9392f5"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_LinkerVisitor_7ECB0A4C8F469839E2B5188F2EFF2369E9600549">
                                    <name>Visit(KeywordParser&amp; parser)</name>
                                    <syntax>public override void Visit(KeywordParser&amp; parser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>parser</name>
                                            <type ref="type.a04fe64c-9b43-4ede-a906-3e1590d1a701"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_LinkerVisitor_62B42E9F4FE401160BC9BDC7C25C2C6F0EB91095">
                                    <name>Visit(NonterminalParser&amp; parser)</name>
                                    <syntax>public override void Visit(NonterminalParser&amp; parser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>parser</name>
                                            <type ref="type.51055218-9737-4d84-8d1c-2de41ce4d6e1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_LinkerVisitor_CA606D4F4863097B434BCEF8DE81684BD124DD32">
                                    <name>Visit(RuleLink&amp; ruleLink)</name>
                                    <syntax>public override void Visit(RuleLink&amp; ruleLink);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>ruleLink</name>
                                            <type ref="type.3a217868-bdcb-4f9a-85a1-bfcf3a81fbe3"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                    </functions>
                </class>
                <class id="class_ListParser_6C5E029D107D595D5B50385D50A9B16ABEBE48E6">
                    <name>ListParser</name>
                    <groupName>ListParser</groupName>
                    <syntax> public class ListParser;</syntax>
                    <baseClass ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                    <constructors>
                        <constructor id="constructor_ListParser_98E8C3FAD1F01EE9D45690DDE269983F89B2CA56">
                            <name>ListParser(Parser* left_, Parser* right_)</name>
                            <syntax>public ListParser(Parser* left_, Parser* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ListParser_BB6240DBAFB7BD57353C445304B97EDE9BDAD4A6">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_ListParser_9442A1808BC6F48EB8EA68B78CB5A2A4424F74BF">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_LowerLetterParser_E9090D72F69FFF9253FCC31853EDA189052E5F70">
                    <name>LowerLetterParser</name>
                    <groupName>LowerLetterParser</groupName>
                    <syntax> public class LowerLetterParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_LowerLetterParser_FF75D7D20474F6926533A7E052882DBBE5B1CA97">
                            <name>LowerLetterParser()</name>
                            <syntax>public nothrow LowerLetterParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_LowerLetterParser_87213E25F16E292A312C09E4B183D56A009EA8BF">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_LowerLetterParser_486DA59CB7B8D11ED5486F557F63687A574CBC34">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_MarkParser_B14EEC34C28AB3CECAE517086AD43EDFFAF8E52A">
                    <name>MarkParser</name>
                    <groupName>MarkParser</groupName>
                    <syntax> public class MarkParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_MarkParser_6B5DA6CB7E8EEF06F6AA4C9F4FE689A862EF1065">
                            <name>MarkParser()</name>
                            <syntax>public nothrow MarkParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_MarkParser_F69D69ADCE1F39BAC0C570107BF83972CD4BD874">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_MarkParser_9E3355774E503FD9EB05333BB1BE20BA8167DB76">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E">
                    <name>Match</name>
                    <groupName>Match</groupName>
                    <syntax> public class Match;</syntax>
                    <constructors>
                        <constructor id="constructor_Match_AF294DBAD66D10150407293526B18ACA0E636547">
                            <name>Match(bool hit_, int length_)</name>
                            <syntax>public nothrow Match(bool hit_, int length_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>hit_</name>
                                    <type ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                                </parameter>
                                <parameter>
                                    <name>length_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Concatenate_Match_A833E85113443BEE117626E3863F40CFDE10C78E">
                            <name>Concatenate(const Match&amp; that)</name>
                            <syntax>public nothrow inline void Concatenate(const Match&amp; that);</syntax>
                            <parameters>
                                <parameter>
                                    <name>that</name>
                                    <type ref="type.a97ff3de-211a-4259-9d16-1fe0aad05c77"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Hit_Match_D33B7A33A2B08B928C33AF6C60D33CC585331E28">
                            <name>Hit() const</name>
                            <syntax>public nothrow inline bool Hit() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_Length_Match_300A87CFBFD9135EEDAAD57101443112AA7BADB7">
                            <name>Length() const</name>
                            <syntax>public nothrow inline int Length() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                    </functions>
                    <staticMemberFunctions>
                        <function id="member_function_Empty_Match_0F9E9E64E92603387A7BCB0A884290A2131EBEB5">
                            <name>Empty()</name>
                            <syntax>public static nothrow inline Match Empty();</syntax>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                        <function id="member_function_Nothing_Match_761CC719DADC48D20EC8CF22357604401A683BA7">
                            <name>Nothing()</name>
                            <syntax>public static nothrow inline Match Nothing();</syntax>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                        <function id="member_function_One_Match_83E630F337ABFD86B4FCEECAE000E577C8066077">
                            <name>One()</name>
                            <syntax>public static nothrow inline Match One();</syntax>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </staticMemberFunctions>
                </class>
                <class id="class_MathSymbolParser_0960D3ACEF2D8F2A35CDE8C263D1C178E92D0AB6">
                    <name>MathSymbolParser</name>
                    <groupName>MathSymbolParser</groupName>
                    <syntax> public class MathSymbolParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_MathSymbolParser_1049B26D051849D8B8E02E429291CA8828E7B326">
                            <name>MathSymbolParser()</name>
                            <syntax>public nothrow MathSymbolParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_MathSymbolParser_3A680FAC6ED6AD267FD2BD7D6BCACAF21B7A1464">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_MathSymbolParser_44FF195B285F03A0622820174F78895EFC3A2074">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ModifierLetterParser_F521D6EB139B02380EEF8F896E33A367C02CBABD">
                    <name>ModifierLetterParser</name>
                    <groupName>ModifierLetterParser</groupName>
                    <syntax> public class ModifierLetterParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_ModifierLetterParser_7DB0DEA1380671AE35DC365EC73A6604F28330A2">
                            <name>ModifierLetterParser()</name>
                            <syntax>public nothrow ModifierLetterParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ModifierLetterParser_1B197972037711CFE130BEEDF5951A46FB6235A0">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_ModifierLetterParser_3BA9F7B0B3C7451817F969593D412BD1D674D779">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ModifierSymbolParser_33606880C86B88E8F1CDAB2FACCC0A695B112F3A">
                    <name>ModifierSymbolParser</name>
                    <groupName>ModifierSymbolParser</groupName>
                    <syntax> public class ModifierSymbolParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_ModifierSymbolParser_E2054FA33EEBFB91BC5E16935CA1B41BDB4DD2ED">
                            <name>ModifierSymbolParser()</name>
                            <syntax>public nothrow ModifierSymbolParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ModifierSymbolParser_92366190E57B0C7B279F6D494C94B2782E850768">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_ModifierSymbolParser_6F8770BBE92B53F66A71559D98725947FA83CB04">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4">
                    <name>Namespace</name>
                    <groupName>Namespace</groupName>
                    <syntax> public class Namespace;</syntax>
                    <baseClass ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                    <constructors>
                        <constructor id="constructor_Namespace_00F98FDD47D0A6A4E59E0724036573A565B965CE">
                            <name>Namespace(const String&lt;uchar>&amp; qualifiedName_, Scope* enclosingScope_)</name>
                            <syntax>public Namespace(const String&lt;uchar>&amp; qualifiedName_, Scope* enclosingScope_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>qualifiedName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>enclosingScope_</name>
                                    <type ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Namespace_D7954D7AD9730B8538925E64877EAAF9DA890DD1">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Import_Namespace_F99A4D28BE36EC7A6FED9905EEF94FC3899AEED6">
                            <name>Import(Namespace* that, ParsingDomain* targetDomain, bool importExternals)</name>
                            <syntax>public void Import(Namespace* that, ParsingDomain* targetDomain, bool importExternals);</syntax>
                            <parameters>
                                <parameter>
                                    <name>that</name>
                                    <type ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                                </parameter>
                                <parameter>
                                    <name>targetDomain</name>
                                    <type ref="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e"/>
                                </parameter>
                                <parameter>
                                    <name>importExternals</name>
                                    <type ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_NonspacingMarkParser_77C0D960D80024D464FB412D04C55ACE03242DEE">
                    <name>NonspacingMarkParser</name>
                    <groupName>NonspacingMarkParser</groupName>
                    <syntax> public class NonspacingMarkParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_NonspacingMarkParser_6CF11454A27170298D16705666D7F0EC487820E6">
                            <name>NonspacingMarkParser()</name>
                            <syntax>public nothrow NonspacingMarkParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_NonspacingMarkParser_12CE08391BFA431505D005E9B0336286145215D6">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_NonspacingMarkParser_62E593AC99FF16EF06B03630AC133CD4D5A00F30">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348">
                    <name>NonterminalParser</name>
                    <groupName>NonterminalParser</groupName>
                    <syntax> public class NonterminalParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_NonterminalParser_59BFC36E9DB2E4F6F9B99FA7C21310691263B007">
                            <name>NonterminalParser()</name>
                            <syntax>public NonterminalParser();</syntax>
                        </constructor>
                        <constructor id="constructor_NonterminalParser_C4FE28D663AC01C4C6C000E403E22C0D0CABB594">
                            <name>NonterminalParser(const String&lt;uchar>&amp; name_, const String&lt;uchar>&amp; ruleName_)</name>
                            <syntax>public NonterminalParser(const String&lt;uchar>&amp; name_, const String&lt;uchar>&amp; ruleName_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>ruleName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_NonterminalParser_743C3E2E8E5063B5A452FB0C469CB8FE8116F6B5">
                            <name>NonterminalParser(const String&lt;uchar>&amp; name_, const String&lt;uchar>&amp; ruleName_, int numberOfArguments_)</name>
                            <syntax>public NonterminalParser(const String&lt;uchar>&amp; name_, const String&lt;uchar>&amp; ruleName_, int numberOfArguments_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>ruleName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>numberOfArguments_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_NonterminalParser_44C499742F2BCD1A3402E28E4A35ACF20910720E">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddArgument_NonterminalParser_68CC060F8E2E5C0A161012968E6E3DA56726FAE9">
                            <name>AddArgument(DomObject* argument)</name>
                            <syntax>public void AddArgument(DomObject* argument);</syntax>
                            <parameters>
                                <parameter>
                                    <name>argument</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Arguments_NonterminalParser_6F3C7923EF272041C41083E448CBC2B2D580C910">
                            <name>Arguments() const</name>
                            <syntax>public nothrow inline const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>>&amp; Arguments() const;</syntax>
                            <returnType ref="type.c6a86e55-af2e-4bb5-8b4b-aca3fd3c9b87"/>
                        </function>
                        <function id="member_function_IsSpecialized_NonterminalParser_20D0F15545FAEB4F5E13ED452B797C688568816E">
                            <name>IsSpecialized() const</name>
                            <syntax>public nothrow bool IsSpecialized() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_NumberOfArguments_NonterminalParser_0C5D6D1068AFA2A8A34B156EA8FA7AC16CB1F2DA">
                            <name>NumberOfArguments() const</name>
                            <syntax>public nothrow inline int NumberOfArguments() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                        <function id="member_function_Parse_NonterminalParser_87E0FE76333665758B1C348A2B1C79F1894BF8A1">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                        <function id="member_function_Post_NonterminalParser_4C173C5FBFF26237949DA2FC574788965CA8EA40">
                            <name>Post() const</name>
                            <syntax>public nothrow inline PostCall Post() const;</syntax>
                            <returnType ref="8a8c3416-9875-44c1-989c-a914b658e94b"/>
                        </function>
                        <function id="member_function_PostCallMethodName_NonterminalParser_821FD0238C8E63D2B0C99B3D99C365359560CAAA">
                            <name>PostCallMethodName() const</name>
                            <syntax>public nothrow String&lt;uchar> PostCallMethodName() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Pre_NonterminalParser_44F809B4E1896000764D80741EB2B6AC33868040">
                            <name>Pre() const</name>
                            <syntax>public nothrow inline PreCall Pre() const;</syntax>
                            <returnType ref="df57030a-b7b4-454f-a0e5-0b81e12f2266"/>
                        </function>
                        <function id="member_function_PreCallMethodName_NonterminalParser_9DCCCE0A78B1928358D3BB77E2586D06112CEBEB">
                            <name>PreCallMethodName() const</name>
                            <syntax>public nothrow String&lt;uchar> PreCallMethodName() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Rule_NonterminalParser_3B204B5D92A0553D24A14B9D9401DCB71813C4F5">
                            <name>Rule() const</name>
                            <syntax>public nothrow inline RuleParser* Rule() const;</syntax>
                            <returnType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                        </function>
                        <function id="member_function_RuleName_NonterminalParser_5662B8147E239A6C87F0A1C127043F30ABBCF977">
                            <name>RuleName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; RuleName() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_SetArguments_NonterminalParser_7DC9381F4107E52D07736C85E3D1E45B90E38535">
                            <name>SetArguments(List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>>&amp;&amp; arguments_)</name>
                            <syntax>public void SetArguments(List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>>&amp;&amp; arguments_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>arguments_</name>
                                    <type ref="type.c1afc5c2-32d5-4d30-8e3c-c2117d8d8f8b"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetPost_NonterminalParser_6EECD856E2A4CBACE8EA8F94C147FF277EBEEAAF">
                            <name>SetPost(PostCall postCall_)</name>
                            <syntax>public nothrow void SetPost(PostCall postCall_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>postCall_</name>
                                    <type ref="8a8c3416-9875-44c1-989c-a914b658e94b"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetPre_NonterminalParser_40D47A9B3A7629E548EDDDA74D5E6B1953F596A7">
                            <name>SetPre(PreCall preCall_)</name>
                            <syntax>public nothrow void SetPre(PreCall preCall_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>preCall_</name>
                                    <type ref="df57030a-b7b4-454f-a0e5-0b81e12f2266"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetRule_NonterminalParser_19EBE7A2B01C5FB103A87121BAD6ED11E4D5100E">
                            <name>SetRule(RuleParser* rule_)</name>
                            <syntax>public nothrow void SetRule(RuleParser* rule_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>rule_</name>
                                    <type ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetRuleName_NonterminalParser_147707328AE428814DA8F015A2A84DA8893852F2">
                            <name>SetRuleName(const String&lt;uchar>&amp; ruleName_)</name>
                            <syntax>public nothrow void SetRuleName(const String&lt;uchar>&amp; ruleName_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>ruleName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_ValueFieldName_NonterminalParser_B5CD16345C7AE0C4174FE734DA1F74D94F46ECF2">
                            <name>ValueFieldName() const</name>
                            <syntax>public nothrow String&lt;uchar> ValueFieldName() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_VariableName_NonterminalParser_9FAA72A8D732B4334D8FF575A4595AD32A0CD32A">
                            <name>VariableName() const</name>
                            <syntax>public String&lt;uchar> VariableName() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                    </functions>
                </class>
                <class id="class_NumberParser_C6AC535F4CF08D081B4EF82D22F3328637E3FC7A">
                    <name>NumberParser</name>
                    <groupName>NumberParser</groupName>
                    <syntax> public class NumberParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_NumberParser_5BF96AFC11F1D9F1028B0C16DFFB07D5FA83B796">
                            <name>NumberParser()</name>
                            <syntax>public nothrow NumberParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_NumberParser_1D6B460AF810AA23862A303DCB1A8DDE79BAEA21">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_NumberParser_EB277875F8F54852EEF102F43211111E65C06581">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66">
                    <name>Object</name>
                    <groupName>Object</groupName>
                    <syntax>abstract public class Object;</syntax>
                </class>
                <class id="class_OpenPunctuationParser_D86559E7718C6E51274F05C4E573EDA35EF670B3">
                    <name>OpenPunctuationParser</name>
                    <groupName>OpenPunctuationParser</groupName>
                    <syntax> public class OpenPunctuationParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_OpenPunctuationParser_89AEB30F90E4D05EB5524785D3958FD3D7B1C750">
                            <name>OpenPunctuationParser()</name>
                            <syntax>public nothrow OpenPunctuationParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_OpenPunctuationParser_D1E0529BBAD6C2AE00219D6215A58E05C3A1AB81">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_OpenPunctuationParser_3CE894D2B796B214DBA48FC31E8D5ADBB558FB5B">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A">
                    <name>OptionalParser</name>
                    <groupName>OptionalParser</groupName>
                    <syntax> public class OptionalParser;</syntax>
                    <baseClass ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                    <constructors>
                        <constructor id="constructor_OptionalParser_3FDE69F3032C6B6D481ED66EFCC7A6D94F3C931F">
                            <name>OptionalParser(Parser* child_)</name>
                            <syntax>public OptionalParser(Parser* child_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>child_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_OptionalParser_5E699D4349BE6E9AADFAB9740B04427E4CDF9A45">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_OptionalParser_7D27B1A67E3D3E7270BF4608DDDAB3A4A33E8E79">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_OtherLetterParser_819A69E6334348DB437B88300F19EFE0E795AFA9">
                    <name>OtherLetterParser</name>
                    <groupName>OtherLetterParser</groupName>
                    <syntax> public class OtherLetterParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_OtherLetterParser_D59745591C4A964E6D9BBE882C7F6BF60FFDF02C">
                            <name>OtherLetterParser()</name>
                            <syntax>public nothrow OtherLetterParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_OtherLetterParser_AD7FB7944ED823DCAEB4F4BD01999914253CA0D3">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_OtherLetterParser_3664A45409857248191CDEFEF6A205EF0DF4141D">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_OtherNumberParser_5E44F04780E5AF76882D4398BCF95F19900B6F58">
                    <name>OtherNumberParser</name>
                    <groupName>OtherNumberParser</groupName>
                    <syntax> public class OtherNumberParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_OtherNumberParser_977B23C3E69858D9F9A7A2F4D10982B711F08EC9">
                            <name>OtherNumberParser()</name>
                            <syntax>public nothrow OtherNumberParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_OtherNumberParser_2242159698A1659FD7D1E12170EE8F3D134D29CD">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_OtherNumberParser_EB53D323609A7D3F65EF4BB301123F105ABDC2FA">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_OtherParser_24F37841D60C93B62B7FDD5DFEFF977254540B60">
                    <name>OtherParser</name>
                    <groupName>OtherParser</groupName>
                    <syntax> public class OtherParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_OtherParser_D05213DFE7D339E08D8F86ECD839B7DC849FBD6A">
                            <name>OtherParser()</name>
                            <syntax>public nothrow OtherParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_OtherParser_CF8BD0B97869A2699752386CC3E344964A0A82B0">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_OtherParser_1E2105BDC5A74FF8FCEE078E6324B71E205F0BA0">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_OtherPunctuationParser_642E6FBEFE02269CFF5F054BE3C0A5F152B99813">
                    <name>OtherPunctuationParser</name>
                    <groupName>OtherPunctuationParser</groupName>
                    <syntax> public class OtherPunctuationParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_OtherPunctuationParser_E65D47BA300D9398A8A80F7E70EE0D7B3B29C26B">
                            <name>OtherPunctuationParser()</name>
                            <syntax>public nothrow OtherPunctuationParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_OtherPunctuationParser_9C816AB2CA4BB3E41BFABF797006A16D8E45CBCE">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_OtherPunctuationParser_8F87285F38C44DB52F0029DB17BF5A0D9CE73FFD">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_OtherSymbolParser_A5097353A1C3851E3352A7223FF3BF4131CC203D">
                    <name>OtherSymbolParser</name>
                    <groupName>OtherSymbolParser</groupName>
                    <syntax> public class OtherSymbolParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_OtherSymbolParser_887A85E44C5DFB2758BED8D556B7F529C88B5607">
                            <name>OtherSymbolParser()</name>
                            <syntax>public nothrow OtherSymbolParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_OtherSymbolParser_72504F4420F19A54E72E28E4558C28AFD01660AB">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_OtherSymbolParser_FF8D7672E55142B892997218EAE70F652D8085FE">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ParagraphSeparatorParser_9F58A4F5735238FB34B93B7A180B0EC20131F987">
                    <name>ParagraphSeparatorParser</name>
                    <groupName>ParagraphSeparatorParser</groupName>
                    <syntax> public class ParagraphSeparatorParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_ParagraphSeparatorParser_DF53B3EC887327FC09CC4214D0182F1C94C71F96">
                            <name>ParagraphSeparatorParser()</name>
                            <syntax>public nothrow ParagraphSeparatorParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ParagraphSeparatorParser_9BC49050D5A723BD44338051911DD34D5BEC630D">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_ParagraphSeparatorParser_FF6BDC13FE43C067FB89A3A0B758C98C6E8E5E05">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D">
                    <name>Parser</name>
                    <groupName>Parser</groupName>
                    <syntax>abstract public class Parser;</syntax>
                    <baseClass ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                    <constructors>
                        <constructor id="constructor_Parser_4B5325C3294C2B31043924597A8A97E5C3BDDFF0">
                            <name>Parser(const String&lt;uchar>&amp; name_, const String&lt;uchar>&amp; info_)</name>
                            <syntax>public nothrow Parser(const String&lt;uchar>&amp; name_, const String&lt;uchar>&amp; info_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>info_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Info_Parser_E9A4C395CAD1B8C1D62896AF16D31F82CBAA75FB">
                            <name>Info() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Info() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_Parse_Parser_6CAC0A35D7ECE86AF37742BBFF8A982CE23573CD">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public abstract Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B">
                    <name>ParsingData</name>
                    <groupName>ParsingData</groupName>
                    <syntax> public class ParsingData;</syntax>
                    <constructors>
                        <constructor id="constructor_ParsingData_FE08F8E727AAD859A3169B461074210F706718B8">
                            <name>ParsingData(int numRules)</name>
                            <syntax>public ParsingData(int numRules);</syntax>
                            <parameters>
                                <parameter>
                                    <name>numRules</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_GetContext_ParsingData_48360F99710A60D22416A140CFF3AAB7613541EC">
                            <name>GetContext(int ruleId) const</name>
                            <syntax>public Context* GetContext(int ruleId) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>ruleId</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.a78d3871-b46f-407d-9182-7d4830e33913"/>
                        </function>
                        <function id="member_function_PopContext_ParsingData_4EC2B13C8D35CF301984634A63E094B7AC235CBC">
                            <name>PopContext(int ruleId)</name>
                            <syntax>public void PopContext(int ruleId);</syntax>
                            <parameters>
                                <parameter>
                                    <name>ruleId</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_PushContext_ParsingData_A5163B15372DCB1A1B9939800B3016DE75CA348A">
                            <name>PushContext(int ruleId, Context* context)</name>
                            <syntax>public void PushContext(int ruleId, Context* context);</syntax>
                            <parameters>
                                <parameter>
                                    <name>ruleId</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                                <parameter>
                                    <name>context</name>
                                    <type ref="type.a78d3871-b46f-407d-9182-7d4830e33913"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87">
                    <name>ParsingDomain</name>
                    <groupName>ParsingDomain</groupName>
                    <syntax> public class ParsingDomain;</syntax>
                    <baseClass ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                    <constructors>
                        <constructor id="default_constructor_ParsingDomain_9DC3276072DCBFF815002D180BF039BB3FC17458">
                            <name>ParsingDomain()</name>
                            <syntax>public ParsingDomain();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ParsingDomain_0B533BBC0270A2EC91190FD568D377A9604239D7">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddGrammar_ParsingDomain_051F221D99B7A015FD180E16338C6C8D7795479D">
                            <name>AddGrammar(Grammar* grammar)</name>
                            <syntax>public void AddGrammar(Grammar* grammar);</syntax>
                            <parameters>
                                <parameter>
                                    <name>grammar</name>
                                    <type ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_BeginNamespace_ParsingDomain_777BF39E6C7A8653DFB24AA46787096C1C2EDA6E">
                            <name>BeginNamespace(const String&lt;uchar>&amp; ns)</name>
                            <syntax>public void BeginNamespace(const String&lt;uchar>&amp; ns);</syntax>
                            <parameters>
                                <parameter>
                                    <name>ns</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_CurrentNamespace_ParsingDomain_D96F7D6F60F8A60B275A08848F38301AC54BE9D8">
                            <name>CurrentNamespace() const</name>
                            <syntax>public nothrow inline Namespace* CurrentNamespace() const;</syntax>
                            <returnType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                        </function>
                        <function id="member_function_CurrentScope_ParsingDomain_7993EE98BD416DA37B483FF9A169BC43F34424DF">
                            <name>CurrentScope() const</name>
                            <syntax>public nothrow inline Scope* CurrentScope() const;</syntax>
                            <returnType ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                        </function>
                        <function id="member_function_EndNamespace_ParsingDomain_9714A9BDFABB00290870679E0AED785DFEB8DF67">
                            <name>EndNamespace()</name>
                            <syntax>public void EndNamespace();</syntax>
                        </function>
                        <function id="member_function_GetGrammar_ParsingDomain_E192636BB57C68601C38DD8F5C9680F25F469BAE">
                            <name>GetGrammar(const String&lt;uchar>&amp; grammarName) const</name>
                            <syntax>public Grammar* GetGrammar(const String&lt;uchar>&amp; grammarName) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>grammarName</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                        </function>
                        <function id="member_function_GetNamespaceScope_ParsingDomain_8E5E80330FE4A298A7A98332ECEFDF50DC6E4C72">
                            <name>GetNamespaceScope(const String&lt;uchar>&amp; fullNamespaceName) const</name>
                            <syntax>public Scope* GetNamespaceScope(const String&lt;uchar>&amp; fullNamespaceName) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>fullNamespaceName</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                        </function>
                        <function id="member_function_GetNextRuleId_ParsingDomain_C447AACB8B63F5199E90D11C7638E776FA741EA5">
                            <name>GetNextRuleId()</name>
                            <syntax>public nothrow inline int GetNextRuleId();</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                        <function id="member_function_GlobalNamespace_ParsingDomain_5955290F44B7D3C39B6070AF62D9BF3DAC5F246B">
                            <name>GlobalNamespace() const</name>
                            <syntax>public nothrow inline Namespace* GlobalNamespace() const;</syntax>
                            <returnType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                        </function>
                        <function id="member_function_Import_ParsingDomain_F26F85A509BE920891B50080D4986B2745106F31">
                            <name>Import(ParsingDomain* pd, bool importExternals)</name>
                            <syntax>public void Import(ParsingDomain* pd, bool importExternals);</syntax>
                            <parameters>
                                <parameter>
                                    <name>pd</name>
                                    <type ref="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e"/>
                                </parameter>
                                <parameter>
                                    <name>importExternals</name>
                                    <type ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_NumRules_ParsingDomain_D8EEFC3004F2CA61E7D30598D9EB46EFCA3A3CF3">
                            <name>NumRules() const</name>
                            <syntax>public nothrow inline int NumRules() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ParsingDomainRepository_6B37F4A004B12A4113D51526D06BF8A1881556E4">
                    <name>ParsingDomainRepository</name>
                    <groupName>ParsingDomainRepository</groupName>
                    <syntax> public class ParsingDomainRepository;</syntax>
                    <functions>
                        <function id="member_function_Register_ParsingDomainRepository_0F44F5F7DB114641F7521666038EF1AAE272D4EB">
                            <name>Register(ParsingDomain* parsingDomain)</name>
                            <syntax>public void Register(ParsingDomain* parsingDomain);</syntax>
                            <parameters>
                                <parameter>
                                    <name>parsingDomain</name>
                                    <type ref="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                    <staticMemberFunctions>
                        <function id="member_function_Instance_ParsingDomainRepository_C6577EA80312A9F4E2CE0EBB929AA197E89941ED">
                            <name>Instance()</name>
                            <syntax>public static ParsingDomainRepository&amp; Instance();</syntax>
                            <returnType ref="type.6028226b-46f2-44ec-b2cc-87fad745e0fc"/>
                        </function>
                    </staticMemberFunctions>
                </class>
                <class id="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396">
                    <name>ParsingException</name>
                    <groupName>ParsingException</groupName>
                    <syntax> public class ParsingException;</syntax>
                    <baseClass ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
                    <constructors>
                        <constructor id="constructor_ParsingException_B2735378A6F1A15B4B62D52A85E6DA5AC93503C2">
                            <name>ParsingException(const String&lt;char>&amp; message_, const String&lt;char>&amp; fileName_, const Span&amp; span_, const uchar* start_, const uchar* end_)</name>
                            <syntax>public ParsingException(const String&lt;char>&amp; message_, const String&lt;char>&amp; fileName_, const Span&amp; span_, const uchar* start_, const uchar* end_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>message_</name>
                                    <type ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                                </parameter>
                                <parameter>
                                    <name>fileName_</name>
                                    <type ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                                </parameter>
                                <parameter>
                                    <name>span_</name>
                                    <type ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                                </parameter>
                                <parameter>
                                    <name>start_</name>
                                    <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                                </parameter>
                                <parameter>
                                    <name>end_</name>
                                    <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_End_ParsingException_F66A67C7C5109C56F43E0A3895B9F147F2B02C13">
                            <name>End() const</name>
                            <syntax>public nothrow inline const uchar* End() const;</syntax>
                            <returnType ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </function>
                        <function id="member_function_FileName_ParsingException_89482DF32FDBE1B891F9206F027468454FD105B8">
                            <name>FileName() const</name>
                            <syntax>public nothrow inline const String&lt;char>&amp; FileName() const;</syntax>
                            <returnType ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                        </function>
                        <function id="member_function_Message_ParsingException_3435DE6C00C641C72F74C51C9CBB6A9E89E7CD4D">
                            <name>Message() const</name>
                            <syntax>public nothrow inline const String&lt;char>&amp; Message() const;</syntax>
                            <returnType ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                        </function>
                        <function id="member_function_SpanValue_ParsingException_C8044AA13A60E07C2AA8D4D977E2B9FA935B0B47">
                            <name>SpanValue() const</name>
                            <syntax>public nothrow inline const Span&amp; SpanValue() const;</syntax>
                            <returnType ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                        </function>
                        <function id="member_function_Start_ParsingException_B8366297CE7935E6083596A0BF94E055BE26AD91">
                            <name>Start() const</name>
                            <syntax>public nothrow inline const uchar* Start() const;</syntax>
                            <returnType ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34">
                    <name>ParsingObject</name>
                    <groupName>ParsingObject</groupName>
                    <syntax>abstract public class ParsingObject;</syntax>
                    <constructors>
                        <constructor id="constructor_ParsingObject_9269C859611302DF828DCA08C3057DF286EF2C2C">
                            <name>ParsingObject(const String&lt;uchar>&amp; name_)</name>
                            <syntax>public nothrow ParsingObject(const String&lt;uchar>&amp; name_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_ParsingObject_C41C5D0BE3B068D838C9F227D0230245F421AAE5">
                            <name>ParsingObject(const String&lt;uchar>&amp; name_, Scope* enclosingScope_)</name>
                            <syntax>public nothrow ParsingObject(const String&lt;uchar>&amp; name_, Scope* enclosingScope_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>enclosingScope_</name>
                                    <type ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ParsingObject_7B9275C0656BAFDDAEA8914241907708E46EB027">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public abstract void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddToScope_ParsingObject_E5730DD32B10DFA288C085D9B541EAB8D3219AA1">
                            <name>AddToScope()</name>
                            <syntax>public virtual void AddToScope();</syntax>
                        </function>
                        <function id="member_function_ContainerScope_ParsingObject_37296722C598F7692BCE0F9D41E63B46561595A4">
                            <name>ContainerScope() const</name>
                            <syntax>public nothrow inline Scope* ContainerScope() const;</syntax>
                            <returnType ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                        </function>
                        <function id="member_function_Dump_ParsingObject_ABCF0D26939C2A15FB3DF46DC07BEC7E97EE080C">
                            <name>Dump(CodeFormatter&amp; formatter)</name>
                            <syntax>public void Dump(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_EnclosingScope_ParsingObject_3D89B1342B57E484AFA883A20B6DAED6C19C38F7">
                            <name>EnclosingScope() const</name>
                            <syntax>public nothrow inline Scope* EnclosingScope() const;</syntax>
                            <returnType ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                        </function>
                        <function id="member_function_FullName_ParsingObject_DF98E1491247B72DDDF8C86FC689317626403733">
                            <name>FullName() const</name>
                            <syntax>public nothrow String&lt;uchar> FullName() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_GetScope_ParsingObject_77988AC06BC333944EADCFBC7B98DCF4969CA067">
                            <name>GetScope() const</name>
                            <syntax>public nothrow inline Scope* GetScope() const;</syntax>
                            <returnType ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                        </function>
                        <function id="member_function_GetSpan_ParsingObject_8A84F62A9840387CBDB4DF2F215EE5E8F9AB875B">
                            <name>GetSpan() const</name>
                            <syntax>public nothrow inline const Span&amp; GetSpan() const;</syntax>
                            <returnType ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                        </function>
                        <function id="member_function_IsExternal_ParsingObject_C4C5BCDA2544495C63E375A3C08EA0F7602CD15B">
                            <name>IsExternal() const</name>
                            <syntax>public nothrow inline bool IsExternal() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_IsOwned_ParsingObject_854FE5D7C3E95FE55C00069178CC03FBAF42D022">
                            <name>IsOwned() const</name>
                            <syntax>public nothrow inline bool IsOwned() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_Name_ParsingObject_4B0E58B9F75AF26D67DB0DDEB97451F9FD0E80F6">
                            <name>Name() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Name() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_Own_ParsingObject_BD6A4894FA12FAA84D203B85091147133B876314">
                            <name>Own(ParsingObject* object)</name>
                            <syntax>public void Own(ParsingObject* object);</syntax>
                            <parameters>
                                <parameter>
                                    <name>object</name>
                                    <type ref="type.cd2b767d-81fd-400f-a8de-ad916f3e3357"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Owner_ParsingObject_856F5FDDE08B947B5BBA3CBD7A485BC052A1F676">
                            <name>Owner() const</name>
                            <syntax>public nothrow inline int Owner() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                        <function id="member_function_SetContainerScope_ParsingObject_2EA76B2436D460A13B2E160EAB7C98E8BFAF03D5">
                            <name>SetContainerScope(Scope* scope_)</name>
                            <syntax>public nothrow void SetContainerScope(Scope* scope_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scope_</name>
                                    <type ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetEnclosingScope_ParsingObject_B5EE8709E516CFD5CFA7DD3C3CD45CA28110A592">
                            <name>SetEnclosingScope(Scope* enclosingScope_)</name>
                            <syntax>public nothrow void SetEnclosingScope(Scope* enclosingScope_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>enclosingScope_</name>
                                    <type ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetName_ParsingObject_705BDDAC469CBA1882696A5043B4CC94DDBAD160">
                            <name>SetName(const String&lt;uchar>&amp; name_)</name>
                            <syntax>public nothrow void SetName(const String&lt;uchar>&amp; name_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetOwned_ParsingObject_972016608B089C948A2ABA5CA61E3D4CB47A5D8B">
                            <name>SetOwned()</name>
                            <syntax>public nothrow inline void SetOwned();</syntax>
                        </function>
                        <function id="member_function_SetOwner_ParsingObject_AE2E61409097F1C4EBD4D88526CEC47CEB4580B3">
                            <name>SetOwner(int owner_)</name>
                            <syntax>public nothrow inline void SetOwner(int owner_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>owner_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetSpan_ParsingObject_9A2CE9CAE7169992DBE1277460D8CBEC9DF487CD">
                            <name>SetSpan(const Span&amp; span_)</name>
                            <syntax>public nothrow void SetSpan(const Span&amp; span_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>span_</name>
                                    <type ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502">
                    <name>PositiveParser</name>
                    <groupName>PositiveParser</groupName>
                    <syntax> public class PositiveParser;</syntax>
                    <baseClass ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                    <constructors>
                        <constructor id="constructor_PositiveParser_93FDAB33706C036D57ED63DA396D013CF7828E58">
                            <name>PositiveParser(Parser* child_)</name>
                            <syntax>public PositiveParser(Parser* child_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>child_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_PositiveParser_53BF463F27037F649FA01D6F520535D632E64202">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_PositiveParser_99A200B82ACA90C8D020DEE9E47A0EF033745225">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_PrivateUseParser_C4511180B4C5389C10E1979630653AC168E71F95">
                    <name>PrivateUseParser</name>
                    <groupName>PrivateUseParser</groupName>
                    <syntax> public class PrivateUseParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_PrivateUseParser_5A315C017DD1940F98903E6AC54681AAB7983BA5">
                            <name>PrivateUseParser()</name>
                            <syntax>public nothrow PrivateUseParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_PrivateUseParser_404E119B40E81DD457FCE7B0A6397F64B0BD3519">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_PrivateUseParser_836A516651A8CFCDECE09624AA9B16D9DCC038D4">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_PunctuationParser_CFAC6556C1168A91712DB882C5D1B9DB5F5237BE">
                    <name>PunctuationParser</name>
                    <groupName>PunctuationParser</groupName>
                    <syntax> public class PunctuationParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_PunctuationParser_5730F1DA3D8BAF577614F520059DFAC485F08171">
                            <name>PunctuationParser()</name>
                            <syntax>public nothrow PunctuationParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_PunctuationParser_18BF0C90AE13F853974665F8E87C65F5E680E2D0">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_PunctuationParser_A71E7CF32CBB0CF04726C65376EA0D8394177FB9">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_RangeParser_A1D22AC11434C18DF491491487AA4116C3494013">
                    <name>RangeParser</name>
                    <groupName>RangeParser</groupName>
                    <syntax> public class RangeParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="constructor_RangeParser_5DAAC6FB5AE7643363FC875F313A52CF982CE7F3">
                            <name>RangeParser(uint rangeStart_, uint rangeEnd_)</name>
                            <syntax>public nothrow RangeParser(uint rangeStart_, uint rangeEnd_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>rangeStart_</name>
                                    <type ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                                </parameter>
                                <parameter>
                                    <name>rangeEnd_</name>
                                    <type ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_RangeParser_FACAF808193BCEF5309896989E7C8D733FC4DDF9">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_End_RangeParser_3DC51510126DBF9C5A2C00FAB151AF817575673F">
                            <name>End() const</name>
                            <syntax>public nothrow inline uint End() const;</syntax>
                            <returnType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                        </function>
                        <function id="member_function_Parse_RangeParser_4282635DD4C4FA45BC814DE9921123B2AA5F70E5">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                        <function id="member_function_Start_RangeParser_DA0795523A6AB5500F6096BE12B5FA57CA6A1A9E">
                            <name>Start() const</name>
                            <syntax>public nothrow inline uint Start() const;</syntax>
                            <returnType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                        </function>
                    </functions>
                </class>
                <class id="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A">
                    <name>RuleData</name>
                    <groupName>RuleData</groupName>
                    <syntax> public class RuleData;</syntax>
                    <memberVariables>
                        <memberVariable id="variable_context_F0B0957D6C70EA7FF6FBAEFC9EDF5DF0D543B0EE">
                            <name>context</name>
                            <syntax>public UniquePtr&lt;System.Text.Parsing.Context> context;</syntax>
                            <type ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                        </memberVariable>
                        <memberVariable id="variable_contextStack_76F167D329710BE1B6DB4A7E01F891D4314EB529">
                            <name>contextStack</name>
                            <syntax>public ContextStack contextStack;</syntax>
                            <type ref="class_ContextStack_36326089C891D467AE5BC740DBC4C07098B375EE"/>
                        </memberVariable>
                    </memberVariables>
                </class>
                <class id="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702">
                    <name>RuleLink</name>
                    <groupName>RuleLink</groupName>
                    <syntax> public class RuleLink;</syntax>
                    <baseClass ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                    <constructors>
                        <constructor id="constructor_RuleLink_3D00037980A1A0498510E7FB3E5C45F4912CEF99">
                            <name>RuleLink(Grammar* grammar_, const String&lt;uchar>&amp; linkedRuleName_)</name>
                            <syntax>public RuleLink(Grammar* grammar_, const String&lt;uchar>&amp; linkedRuleName_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>grammar_</name>
                                    <type ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                                </parameter>
                                <parameter>
                                    <name>linkedRuleName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_RuleLink_5DE8CBA7BB401839C9B8CC48842E4CE631EC42A0">
                            <name>RuleLink(const String&lt;uchar>&amp; name_, Grammar* grammar_, const String&lt;uchar>&amp; linkedRuleName_)</name>
                            <syntax>public RuleLink(const String&lt;uchar>&amp; name_, Grammar* grammar_, const String&lt;uchar>&amp; linkedRuleName_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>grammar_</name>
                                    <type ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                                </parameter>
                                <parameter>
                                    <name>linkedRuleName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_RuleLink_0B51A696219F621133C69AA6026EC29039405424">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddToScope_RuleLink_ED9AD2F388AC57F2981DDB10227B5CBEAEBF813B">
                            <name>AddToScope()</name>
                            <syntax>public override void AddToScope();</syntax>
                        </function>
                        <function id="member_function_IsAddedToGrammar_RuleLink_029CCB3D2287C43A7966E626E01C8AC38BC412A9">
                            <name>IsAddedToGrammar() const</name>
                            <syntax>public nothrow inline bool IsAddedToGrammar() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_LinkedRuleName_RuleLink_436EC4EDA3961051C69CCC2E8F690A3D31B08039">
                            <name>LinkedRuleName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; LinkedRuleName() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_Rule_RuleLink_23AB9DFD45C62459C6D5436420EAFE84AF248B8B">
                            <name>Rule() const</name>
                            <syntax>public nothrow inline RuleParser* Rule() const;</syntax>
                            <returnType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                        </function>
                        <function id="member_function_SetAddedToGrammar_RuleLink_78C7E122605857D521851F409B2612A66436E3B1">
                            <name>SetAddedToGrammar()</name>
                            <syntax>public nothrow void SetAddedToGrammar();</syntax>
                        </function>
                        <function id="member_function_SetRule_RuleLink_381C1DAF52230A2DF723A53FA027AD7268039D34">
                            <name>SetRule(RuleParser* rule_)</name>
                            <syntax>public nothrow void SetRule(RuleParser* rule_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>rule_</name>
                                    <type ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969">
                    <name>RuleParser</name>
                    <groupName>RuleParser</groupName>
                    <syntax> public class RuleParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="constructor_RuleParser_B48601DCD26E96C83DF4BEF8471ADB3A84EC6152">
                            <name>RuleParser(const String&lt;uchar>&amp; name_, Scope* enclosingScope_)</name>
                            <syntax>public RuleParser(const String&lt;uchar>&amp; name_, Scope* enclosingScope_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>enclosingScope_</name>
                                    <type ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_RuleParser_48078905A48EB2B47A048B067193B5F8CB58863F">
                            <name>RuleParser(const String&lt;uchar>&amp; name_, Scope* enclosingScope_, int id_, Parser* definition_)</name>
                            <syntax>public RuleParser(const String&lt;uchar>&amp; name_, Scope* enclosingScope_, int id_, Parser* definition_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>enclosingScope_</name>
                                    <type ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                                </parameter>
                                <parameter>
                                    <name>id_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                                <parameter>
                                    <name>definition_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_RuleParser_C82B66C5947114D6A51ACA87B243D6FF039DA781">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Actions_RuleParser_9A6B1FCB0FBFB2A1BEB13A3CB7561AE1DE77D875">
                            <name>Actions() const</name>
                            <syntax>public nothrow inline const List&lt;ActionParser*>&amp; Actions() const;</syntax>
                            <returnType ref="type.95a3544b-ac76-4adc-9a06-6a09b148c401"/>
                        </function>
                        <function id="member_function_AddAction_RuleParser_385DEF43917E98C3A4CE09F37E42195D13709F74">
                            <name>AddAction(ActionParser* action)</name>
                            <syntax>public void AddAction(ActionParser* action);</syntax>
                            <parameters>
                                <parameter>
                                    <name>action</name>
                                    <type ref="type.3bcd23cc-75a6-42a6-9c58-eca7f3c363c8"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddInheritedAttribute_RuleParser_0948C580294009CCC6D2CB999EAC5B91C4F60823">
                            <name>AddInheritedAttribute(const AttrOrVar&amp; attr)</name>
                            <syntax>public void AddInheritedAttribute(const AttrOrVar&amp; attr);</syntax>
                            <parameters>
                                <parameter>
                                    <name>attr</name>
                                    <type ref="type.ce9091e2-9fc0-40c7-8aa9-a25a6c92dfbb"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddLocalVariable_RuleParser_4407A8905B04D46FA20BA52A5ADFEBFF1A39EEFC">
                            <name>AddLocalVariable(const AttrOrVar&amp; var)</name>
                            <syntax>public void AddLocalVariable(const AttrOrVar&amp; var);</syntax>
                            <parameters>
                                <parameter>
                                    <name>var</name>
                                    <type ref="type.ce9091e2-9fc0-40c7-8aa9-a25a6c92dfbb"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddNonterminal_RuleParser_D08E9E52DA970C9A88D38304DAA66C8B40515FCB">
                            <name>AddNonterminal(NonterminalParser* nonterminal)</name>
                            <syntax>public void AddNonterminal(NonterminalParser* nonterminal);</syntax>
                            <parameters>
                                <parameter>
                                    <name>nonterminal</name>
                                    <type ref="type.91cbca83-f260-4058-9c54-09059137b5e4"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Definition_RuleParser_24E707D52A110940A129DD12AF5F4623DD250320">
                            <name>Definition() const</name>
                            <syntax>public nothrow inline Parser* Definition() const;</syntax>
                            <returnType ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                        </function>
                        <function id="member_function_Enter_RuleParser_03B20179EA4192A430113D81D8801B2D50E58BB4">
                            <name>Enter(Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public virtual void Enter(Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_ExpandCode_RuleParser_AF8C052B065B859237990DEAF95D3414E8F7C71F">
                            <name>ExpandCode()</name>
                            <syntax>public void ExpandCode();</syntax>
                        </function>
                        <function id="member_function_GetAction_RuleParser_3751C385036F31196943E185CC6C809D7D5673B1">
                            <name>GetAction(const String&lt;uchar>&amp; actionName) const</name>
                            <syntax>public ActionParser* GetAction(const String&lt;uchar>&amp; actionName) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>actionName</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.3bcd23cc-75a6-42a6-9c58-eca7f3c363c8"/>
                        </function>
                        <function id="member_function_GetGrammar_RuleParser_4F3A7E5C457F826FCF34C918C8C192C8AD5D6B7A">
                            <name>GetGrammar() const</name>
                            <syntax>public nothrow inline Grammar* GetGrammar() const;</syntax>
                            <returnType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                        </function>
                        <function id="member_function_GetNonterminal_RuleParser_9FA99C5393688BDCAAE7EEAE9FBD939B86D50F34">
                            <name>GetNonterminal(const String&lt;uchar>&amp; nonterminalName) const</name>
                            <syntax>public NonterminalParser* GetNonterminal(const String&lt;uchar>&amp; nonterminalName) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>nonterminalName</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.91cbca83-f260-4058-9c54-09059137b5e4"/>
                        </function>
                        <function id="member_function_Id_RuleParser_6BAD1512899810067D4F1183EDA0B72F7DD69B90">
                            <name>Id() const</name>
                            <syntax>public nothrow inline int Id() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                        <function id="member_function_InheritedAttributes_RuleParser_27440305BDD1DEC10F79E0FAC200174624E7B1B6">
                            <name>InheritedAttributes() const</name>
                            <syntax>public nothrow inline List&lt;System.Text.Parsing.AttrOrVar>&amp; InheritedAttributes() const;</syntax>
                            <returnType ref="type.7ae4ea3b-31ac-48c9-bc11-9fc17cd25c14"/>
                        </function>
                        <function id="member_function_IsSpecialized_RuleParser_CD4F7EADDC6580B9784F41CCCB394BCC35FD57E5">
                            <name>IsSpecialized() const</name>
                            <syntax>public nothrow inline bool IsSpecialized() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_Leave_RuleParser_9EFBB115C72511440D815637D5A7553F74763126">
                            <name>Leave(Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData, bool matched)</name>
                            <syntax>public virtual void Leave(Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData, bool matched);</syntax>
                            <parameters>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                                <parameter>
                                    <name>matched</name>
                                    <type ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Link_RuleParser_56D329D60DEDE1C16F8C8E5757B288915FDD84BB">
                            <name>Link()</name>
                            <syntax>public virtual void Link();</syntax>
                        </function>
                        <function id="member_function_LocalVariables_RuleParser_C6A0DD980C15E05B59F0993F3A117F544ACCCA7E">
                            <name>LocalVariables() const</name>
                            <syntax>public nothrow inline List&lt;System.Text.Parsing.AttrOrVar>&amp; LocalVariables() const;</syntax>
                            <returnType ref="type.7ae4ea3b-31ac-48c9-bc11-9fc17cd25c14"/>
                        </function>
                        <function id="member_function_Nonterminals_RuleParser_D90015F32F5E3AC9F045440F851E4BE70FC01AE5">
                            <name>Nonterminals() const</name>
                            <syntax>public nothrow inline const List&lt;NonterminalParser*>&amp; Nonterminals() const;</syntax>
                            <returnType ref="type.35bbcc9a-7b7a-4c0c-9b9f-2681e9d402f1"/>
                        </function>
                        <function id="member_function_NumberOfParameters_RuleParser_0787E378B27DB958A3C2076B90C85C19853BDFC5">
                            <name>NumberOfParameters() const</name>
                            <syntax>public nothrow inline int NumberOfParameters() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                        <function id="member_function_Parse_RuleParser_DAE927437B9B17E2EE355286BBBA8A9DD8C33863">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                        <function id="member_function_SetDefinition_RuleParser_673AB9D2092F6CD0C3D989D85CE70802937FDCB7">
                            <name>SetDefinition(Parser* definition_)</name>
                            <syntax>public void SetDefinition(Parser* definition_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>definition_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetGrammar_RuleParser_79013863C93421CF4F6DE122DFC19AF3C80B3EA7">
                            <name>SetGrammar(Grammar* grammar_)</name>
                            <syntax>public nothrow void SetGrammar(Grammar* grammar_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>grammar_</name>
                                    <type ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetValueTypeName_RuleParser_D8D1D7576ED0ED6506E09DDEB3478A172DC4E567">
                            <name>SetValueTypeName(const String&lt;uchar>&amp; valueTypeName_)</name>
                            <syntax>public nothrow void SetValueTypeName(const String&lt;uchar>&amp; valueTypeName_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>valueTypeName_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SpecializedTypeName_RuleParser_8415BED13B7B77BD9EB46A13B097F44D43E738CA">
                            <name>SpecializedTypeName() const</name>
                            <syntax>public nothrow String&lt;uchar> SpecializedTypeName() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_TakesOrReturnsValuesOrHasLocals_RuleParser_BD456C14E897C9065955C5822F39259A5430B7D1">
                            <name>TakesOrReturnsValuesOrHasLocals() const</name>
                            <syntax>public nothrow inline bool TakesOrReturnsValuesOrHasLocals() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_ValueTypeName_RuleParser_621AD5107A6E711F3DAE4669AE1FD0F4EE90589F">
                            <name>ValueTypeName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; ValueTypeName() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                    </functions>
                </class>
                <class id="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A">
                    <name>Scanner</name>
                    <groupName>Scanner</groupName>
                    <syntax> public class Scanner;</syntax>
                    <constructors>
                        <constructor id="constructor_Scanner_1E6EA6D99D4F5E3629AC426CAB7ADE3C0F6D38B9">
                            <name>Scanner(const uchar* start_, const uchar* end_, const String&lt;char>&amp; fileName_, int fileIndex_, Parser* skipper_)</name>
                            <syntax>public nothrow Scanner(const uchar* start_, const uchar* end_, const String&lt;char>&amp; fileName_, int fileIndex_, Parser* skipper_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>start_</name>
                                    <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                                </parameter>
                                <parameter>
                                    <name>end_</name>
                                    <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                                </parameter>
                                <parameter>
                                    <name>fileName_</name>
                                    <type ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                                </parameter>
                                <parameter>
                                    <name>fileIndex_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                                <parameter>
                                    <name>skipper_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_AtBeginningOfLine_Scanner_6A3CF86EF052FA27D1726E01D593001DA62E48E7">
                            <name>AtBeginningOfLine() const</name>
                            <syntax>public nothrow inline bool AtBeginningOfLine() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_AtEnd_Scanner_19758054878924B58626389C6987587F3ED267B2">
                            <name>AtEnd() const</name>
                            <syntax>public nothrow inline bool AtEnd() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_BeginToken_Scanner_F7ECBA8B4C284F812359DE00EA3F67A3FD1CE9C5">
                            <name>BeginToken()</name>
                            <syntax>public nothrow inline void BeginToken();</syntax>
                        </function>
                        <function id="member_function_Char_Scanner_11EA257CF9BD69444642B6501233E27BE345C45A">
                            <name>Char() const</name>
                            <syntax>public nothrow inline uchar Char() const;</syntax>
                            <returnType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                        </function>
                        <function id="member_function_End_Scanner_72CEAFEEFA84A01874FC357C13C18B3E84DEB8FD">
                            <name>End() const</name>
                            <syntax>public nothrow inline const uchar* End() const;</syntax>
                            <returnType ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </function>
                        <function id="member_function_EndToken_Scanner_FBD502A8F4D5F112CD3459B546CF764B765EFF25">
                            <name>EndToken()</name>
                            <syntax>public nothrow inline void EndToken();</syntax>
                        </function>
                        <function id="member_function_FileName_Scanner_10D621103CB0516A153D3E1BB4950D4A8C7EC5F2">
                            <name>FileName() const</name>
                            <syntax>public nothrow inline const String&lt;char>&amp; FileName() const;</syntax>
                            <returnType ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                        </function>
                        <function id="member_function_GetSpan_Scanner_332FA032003C962833B3B7B7F319A6625F56190C">
                            <name>GetSpan() const</name>
                            <syntax>public nothrow inline const Span&amp; GetSpan() const;</syntax>
                            <returnType ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                        </function>
                        <function id="member_function_LineEndIndex_Scanner_BBA2001A2A82E81EA3C1B7F9131816A3FCF2184F">
                            <name>LineEndIndex(int maxLineLength) const</name>
                            <syntax>public nothrow int LineEndIndex(int maxLineLength) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>maxLineLength</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                        <function id="member_function_Log_Scanner_59E6F6E38DD64683CDCDD497A50EBA6FD1B8BE95">
                            <name>Log() const</name>
                            <syntax>public nothrow inline XmlLog* Log() const;</syntax>
                            <returnType ref="type.97b0f822-76bd-4556-aee0-cd38824c9d34"/>
                        </function>
                        <function id="member_function_RestOfLine_Scanner_96B4AC96712C77D2A2E47578401050BF468D1585">
                            <name>RestOfLine(int maxLineLength)</name>
                            <syntax>public nothrow String&lt;uchar> RestOfLine(int maxLineLength);</syntax>
                            <parameters>
                                <parameter>
                                    <name>maxLineLength</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_SetLog_Scanner_574B5813BAD6E16D273E0CF4BDDD638433DD62D4">
                            <name>SetLog(XmlLog* log_)</name>
                            <syntax>public nothrow void SetLog(XmlLog* log_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>log_</name>
                                    <type ref="type.97b0f822-76bd-4556-aee0-cd38824c9d34"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetParsingData_Scanner_F253DB458FF3EFAAD6D908ADFF774F1609D18FCF">
                            <name>SetParsingData(ParsingData* parsingData_)</name>
                            <syntax>public nothrow inline void SetParsingData(ParsingData* parsingData_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>parsingData_</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetSpan_Scanner_DF79384A9E295510B3298D8E67495486FB38C0A5">
                            <name>SetSpan(const Span&amp; span_)</name>
                            <syntax>public nothrow inline void SetSpan(const Span&amp; span_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>span_</name>
                                    <type ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Skip_Scanner_B0B1E3207D3B96E6DBC243C40145694B5CAEB4FF">
                            <name>Skip()</name>
                            <syntax>public void Skip();</syntax>
                        </function>
                        <function id="member_function_Skipper_Scanner_9FF06FB7E11A2E9E7E7096E6671E5048E3518F53">
                            <name>Skipper() const</name>
                            <syntax>public nothrow inline Parser* Skipper() const;</syntax>
                            <returnType ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                        </function>
                        <function id="member_function_Skipping_Scanner_A670A02FE16297D859E2AFF9DA35E2E073828D12">
                            <name>Skipping() const</name>
                            <syntax>public nothrow inline bool Skipping() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_Start_Scanner_37AF4F9E036BDC2C21E5FF12AEE23B5D7A59E211">
                            <name>Start() const</name>
                            <syntax>public nothrow inline const uchar* Start() const;</syntax>
                            <returnType ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </function>
                        <function id="member_function_TokenCounter_Scanner_CCDD514D987B56CDE93153883048A0E905D0CB19">
                            <name>TokenCounter() const</name>
                            <syntax>public nothrow inline int TokenCounter() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                        <function id="member_function_op_plusplus_Scanner_D8E02EA4C8A2563BC0696E6D7B5B0F9CA418AB40">
                            <name>operator++()</name>
                            <syntax>public nothrow void operator++();</syntax>
                        </function>
                    </functions>
                </class>
                <class id="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021">
                    <name>Scope</name>
                    <groupName>Scope</groupName>
                    <syntax> public class Scope;</syntax>
                    <baseClass ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                    <constructors>
                        <constructor id="constructor_Scope_40E77DA3E3F3E4B344771966B5D3B578ED5FC8A1">
                            <name>Scope(const String&lt;uchar>&amp; name_, Scope* enclosingScope_)</name>
                            <syntax>public nothrow Scope(const String&lt;uchar>&amp; name_, Scope* enclosingScope_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>enclosingScope_</name>
                                    <type ref="type.9129464f-62bd-40b8-8b5d-6af615844497"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Scope_5E61122388431383C3371D2E28E23B7AF2143838">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Add_Scope_70334DF653E888138481EDB4AD58506C758F6160">
                            <name>Add(ParsingObject* o)</name>
                            <syntax>public void Add(ParsingObject* o);</syntax>
                            <parameters>
                                <parameter>
                                    <name>o</name>
                                    <type ref="type.cd2b767d-81fd-400f-a8de-ad916f3e3357"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddNamespace_Scope_3716BE9F26809EA5DD04D78886DFD428D6F0C40F">
                            <name>AddNamespace(Namespace* nsToAdd)</name>
                            <syntax>public void AddNamespace(Namespace* nsToAdd);</syntax>
                            <parameters>
                                <parameter>
                                    <name>nsToAdd</name>
                                    <type ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Dump_Scope_3225544E2EDB183E9CCE3ABCD5D7E13DCF5B2EBC">
                            <name>Dump(CodeFormatter&amp; formatter)</name>
                            <syntax>public void Dump(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_FullNameMap_Scope_D6472CF3C8E16FA0B26B9EEA96BBEA201D77D996">
                            <name>FullNameMap()</name>
                            <syntax>public HashMap&lt;String&lt;uchar>, ParsingObject*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp; FullNameMap();</syntax>
                            <returnType ref="type.f49cc3ba-1002-4fdc-8dad-b01bf1812ff1"/>
                        </function>
                        <function id="member_function_Get_Scope_1E0692FC8825D6D6C0F10253CFC348BD5357A889">
                            <name>Get(const String&lt;uchar>&amp; objectName) const</name>
                            <syntax>public ParsingObject* Get(const String&lt;uchar>&amp; objectName) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>objectName</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.cd2b767d-81fd-400f-a8de-ad916f3e3357"/>
                        </function>
                        <function id="member_function_GetNamespace_Scope_F2830C62EA3F04D826879D3BF6F459901C675E89">
                            <name>GetNamespace(const String&lt;uchar>&amp; fullNamespaceName) const</name>
                            <syntax>public Namespace* GetNamespace(const String&lt;uchar>&amp; fullNamespaceName) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>fullNamespaceName</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                        </function>
                        <function id="member_function_Ns_Scope_A097BD0F95E5DCC79353AEA4401F6BAD662BB53B">
                            <name>Ns() const</name>
                            <syntax>public nothrow inline Namespace* Ns() const;</syntax>
                            <returnType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                        </function>
                        <function id="member_function_SetNs_Scope_2E9FD7989F3138A75085CD0169F6B6FD7325032F">
                            <name>SetNs(Namespace* ns_)</name>
                            <syntax>public nothrow inline void SetNs(Namespace* ns_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>ns_</name>
                                    <type ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_SeparatorParser_94FDB93F8087C6949DA2645502E77D1B5F3ADE81">
                    <name>SeparatorParser</name>
                    <groupName>SeparatorParser</groupName>
                    <syntax> public class SeparatorParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_SeparatorParser_5B6B6420E342464E7D97DBDAD0A722B289615F7D">
                            <name>SeparatorParser()</name>
                            <syntax>public nothrow SeparatorParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_SeparatorParser_2958D34A0608EC55DE0B3D32FB328CA4C4D8110A">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_SeparatorParser_6470F5DB71F1655C9544B00F730AC165B96D83BC">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_SequenceParser_AEF4FE3271FA60C88397ECB05526C1D6A4FA3E01">
                    <name>SequenceParser</name>
                    <groupName>SequenceParser</groupName>
                    <syntax> public class SequenceParser;</syntax>
                    <baseClass ref="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA"/>
                    <constructors>
                        <constructor id="constructor_SequenceParser_9FF67FDCE50EB24E383CEAC3E6CA57311576D13B">
                            <name>SequenceParser(Parser* left_, Parser* right_)</name>
                            <syntax>public SequenceParser(Parser* left_, Parser* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_SequenceParser_226819AA9B100F2912AD19B992BAEC17C5EA0710">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_SequenceParser_5C793D5396CF26B8675F619B445FDD53A819CA49">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_SpaceParser_6418127CA0B0CB09FC5DF96A2B28D5B6741FDF5A">
                    <name>SpaceParser</name>
                    <groupName>SpaceParser</groupName>
                    <syntax> public class SpaceParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_SpaceParser_BBDB77A2D56C12DB0517D24887AFCB28064D3899">
                            <name>SpaceParser()</name>
                            <syntax>public nothrow SpaceParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_SpaceParser_B116B999BBB92781E1D6F3A447EBA8730576726B">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_SpaceParser_4BD3B95DBE5E1A9C2922F5619786BE9522EA889B">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_SpaceSeparatorParser_2A483B13630174EAB1AEE4FA77E62872AF94C471">
                    <name>SpaceSeparatorParser</name>
                    <groupName>SpaceSeparatorParser</groupName>
                    <syntax> public class SpaceSeparatorParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_SpaceSeparatorParser_C50A212F1795DC9E403E08AA75796C68016D50A7">
                            <name>SpaceSeparatorParser()</name>
                            <syntax>public nothrow SpaceSeparatorParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_SpaceSeparatorParser_E58C385314F858271FF48CD3232C592250F7D205">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_SpaceSeparatorParser_7F1DFF6F25968CFA2C76891B44B493017ADF2D5C">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_SpacingMarkParser_3AD4A1C6C577E4206A0EBC5373871C84DFE9E122">
                    <name>SpacingMarkParser</name>
                    <groupName>SpacingMarkParser</groupName>
                    <syntax> public class SpacingMarkParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_SpacingMarkParser_2AD198FF5466ED2668FBFE2BCF8DE2DB3400DC07">
                            <name>SpacingMarkParser()</name>
                            <syntax>public nothrow SpacingMarkParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_SpacingMarkParser_D44061A016A8276C77B0623475D14FE704F8A157">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_SpacingMarkParser_0BF0DD1C86BDBB81A9EB168FD0573E7D260E09FE">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_Span_342F797681C8A26247E86213AFC9204FEF17D2A5">
                    <name>Span</name>
                    <groupName>Span</groupName>
                    <syntax> public class Span;</syntax>
                    <constructors>
                        <constructor id="default_constructor_Span_2C5A303351119D5B8C2D2701E709AF754135415B">
                            <name>Span()</name>
                            <syntax>public nothrow Span();</syntax>
                        </constructor>
                        <constructor id="constructor_Span_B2AB7E91894E0F1CDCFB19F0C0DDBAAB13F89FEF">
                            <name>Span(int fileIndex_)</name>
                            <syntax>public nothrow Span(int fileIndex_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>fileIndex_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_Span_F9614378795B21C7570E8C831A7C6B42433EDB2C">
                            <name>Span(int fileIndex_, int lineNumber_, int start_, int end_)</name>
                            <syntax>public nothrow Span(int fileIndex_, int lineNumber_, int start_, int end_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>fileIndex_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                                <parameter>
                                    <name>lineNumber_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                                <parameter>
                                    <name>start_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                                <parameter>
                                    <name>end_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_IsValid_Span_089917CCE7FF6E52D995B192D2083F99CB812F58">
                            <name>IsValid() const</name>
                            <syntax>public nothrow inline bool IsValid() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_op_plusplus_Span_5538413EC710B3C5814C8C175CB2D3ACABFE9931">
                            <name>operator++()</name>
                            <syntax>public nothrow inline void operator++();</syntax>
                        </function>
                    </functions>
                    <memberVariables>
                        <memberVariable id="variable_end_52C4B8F78FDD997145D7D2AC957A93913864B6CA">
                            <name>end</name>
                            <syntax>public int end;</syntax>
                            <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </memberVariable>
                        <memberVariable id="variable_fileIndex_933EE9700295B7901DE11C5C292A945F4F0A54AA">
                            <name>fileIndex</name>
                            <syntax>public int fileIndex;</syntax>
                            <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </memberVariable>
                        <memberVariable id="variable_lineNumber_782FFD7DFE44C74EACF9B600FC57D2B020D7ABC9">
                            <name>lineNumber</name>
                            <syntax>public int lineNumber;</syntax>
                            <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </memberVariable>
                        <memberVariable id="variable_start_95DA3FD31658207AF158A7824BED3F2F2931919D">
                            <name>start</name>
                            <syntax>public int start;</syntax>
                            <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </memberVariable>
                    </memberVariables>
                </class>
                <class id="class_StringParser_765B96F3702C707FA03EC3AFF074BEF47356D039">
                    <name>StringParser</name>
                    <groupName>StringParser</groupName>
                    <syntax> public class StringParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="constructor_StringParser_A3A23B290BA0C5E71940A667858CE816C85096EC">
                            <name>StringParser(const String&lt;uchar>&amp; s_)</name>
                            <syntax>public nothrow StringParser(const String&lt;uchar>&amp; s_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>s_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_StringParser_E86A013B2CE41EAEA4EA8CDD9DA70CD232F7766E">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_StringParser_13160B955DD35403B30B561661CA5829AA3D82A1">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                        <function id="member_function_String_StringParser_D3078C433C810F05FBB334CF4A4B1943A2DAE6F9">
                            <name>String() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; String() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                    </functions>
                </class>
                <class id="class_SurrogateParser_621E59A0FC3C49F9DADBE6C4C595442238B39AE7">
                    <name>SurrogateParser</name>
                    <groupName>SurrogateParser</groupName>
                    <syntax> public class SurrogateParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_SurrogateParser_9817C43ECD21504C23D29BAB4C699A9C5D1F6D9E">
                            <name>SurrogateParser()</name>
                            <syntax>public nothrow SurrogateParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_SurrogateParser_B1111368142D0FDF4AE3F4CF58C3D210D6768B4D">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_SurrogateParser_B90D7A69EEC37C6193BDA3B418196A4D4D4C543A">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_SymbolParser_A5146C5ECEFE464AAA32ED863013DC2B99B7E00B">
                    <name>SymbolParser</name>
                    <groupName>SymbolParser</groupName>
                    <syntax> public class SymbolParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_SymbolParser_353DDF910A26E2499F7C09957717DBD1F137D7C3">
                            <name>SymbolParser()</name>
                            <syntax>public nothrow SymbolParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_SymbolParser_A05FEBBAC49BE02293AE61AA433E4A59A4EA8F8F">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_SymbolParser_151103C879E1324F80207447A29267CD4713C35E">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_TitleLetterParser_CB5E9F95B1BFAA4498E885363D18ADB1DF1AF544">
                    <name>TitleLetterParser</name>
                    <groupName>TitleLetterParser</groupName>
                    <syntax> public class TitleLetterParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_TitleLetterParser_80F2766051A7FD03966CA00D93CAEFCA66D9D976">
                            <name>TitleLetterParser()</name>
                            <syntax>public nothrow TitleLetterParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_TitleLetterParser_2B1AF1DC43C0ADE687FF9A068CF77310318DE26A">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_TitleLetterParser_E936775D1051AA7321E2757AD332323A6A6B82EC">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72">
                    <name>TokenParser</name>
                    <groupName>TokenParser</groupName>
                    <syntax> public class TokenParser;</syntax>
                    <baseClass ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                    <constructors>
                        <constructor id="constructor_TokenParser_B49F5F4AAD1980819E83A02127D391E8151D12A1">
                            <name>TokenParser(Parser* child_)</name>
                            <syntax>public TokenParser(Parser* child_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>child_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_TokenParser_3A3D6F77E72397A6138F572675ACC1E6EA3B57C8">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_TokenParser_B2AFDDEC22F4C10A641D934AABEF47E697E59496">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A">
                    <name>UnaryParser</name>
                    <groupName>UnaryParser</groupName>
                    <syntax>abstract public class UnaryParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="constructor_UnaryParser_236C1DC86BE6DE8BA3BDD210BA06D746B66527B7">
                            <name>UnaryParser(const String&lt;uchar>&amp; name_, Parser* child_, const String&lt;uchar>&amp; info_)</name>
                            <syntax>public UnaryParser(const String&lt;uchar>&amp; name_, Parser* child_, const String&lt;uchar>&amp; info_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>child_</name>
                                    <type ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                                </parameter>
                                <parameter>
                                    <name>info_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Child_UnaryParser_916F1E7DB31AA8FD6EC9CF49A206D87F700495C5">
                            <name>Child() const</name>
                            <syntax>public nothrow inline Parser* Child() const;</syntax>
                            <returnType ref="type.761cc9b4-5437-4aaa-9033-46dca03f69e1"/>
                        </function>
                    </functions>
                </class>
                <class id="class_UnassignedParser_B837C0573CAFFB26E8BFF6AD38B8AED47DB1F3B5">
                    <name>UnassignedParser</name>
                    <groupName>UnassignedParser</groupName>
                    <syntax> public class UnassignedParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_UnassignedParser_993A1EDAB54FC9714F5E60A35E2181B7DC823EA1">
                            <name>UnassignedParser()</name>
                            <syntax>public nothrow UnassignedParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_UnassignedParser_EE11680F7319819960452DD43CEB1ABB53CABF7B">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_UnassignedParser_861B0B0DD98159CBE996D4BA2EEEA0DFEEF81DE9">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_UpperLetterParser_60FA6653414FF82D2E34FEADF0F18A7C3A0A601F">
                    <name>UpperLetterParser</name>
                    <groupName>UpperLetterParser</groupName>
                    <syntax> public class UpperLetterParser;</syntax>
                    <baseClass ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                    <constructors>
                        <constructor id="default_constructor_UpperLetterParser_4A2B6FCADCF3E6E8D94DD6A81E5C28DE77969201">
                            <name>UpperLetterParser()</name>
                            <syntax>public nothrow UpperLetterParser();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_UpperLetterParser_B3E2A734C92FB6B441F611EF1C8F14C9970743B5">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.5cc8b643-a34a-4514-b4b7-0375db007747"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Parse_UpperLetterParser_85BD27133CFEABADEA30EB16585D77F29602761C">
                            <name>Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData)</name>
                            <syntax>public override Match Parse(Scanner&amp; scanner, Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                            <parameters>
                                <parameter>
                                    <name>scanner</name>
                                    <type ref="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85"/>
                                </parameter>
                                <parameter>
                                    <name>stack</name>
                                    <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                                </parameter>
                                <parameter>
                                    <name>parsingData</name>
                                    <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                                </parameter>
                            </parameters>
                            <returnType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79">
                    <name>ValueObject&lt;ValueType></name>
                    <groupName>ValueObject</groupName>
                    <syntax> public class ValueObject&lt;ValueType>;</syntax>
                    <templateParameters>
                        <templateParameter id="4237d6ae-8537-4ec7-bef5-89061bffb107">
                            <name>ValueType</name>
                        </templateParameter>
                    </templateParameters>
                    <baseClass ref="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66"/>
                    <constructors>
                        <constructor id="default_constructor_ValueObject_ValueType_37271B380BBCB190F503191A64BBBCDA52DC61AF">
                            <name>ValueObject&lt;ValueType>()</name>
                            <syntax>public default ValueObject&lt;ValueType>();</syntax>
                        </constructor>
                        <constructor id="constructor_ValueObject_ValueType_59E338A0BD54B0AD4948749380EF819BC34B902C">
                            <name>ValueObject&lt;ValueType>(const ValueType&amp; value_)</name>
                            <syntax>public ValueObject&lt;ValueType>(const ValueType&amp; value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.6a151616-fc13-4b5b-ae14-96a51d5dc948"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="conversion_function_operator_6D9C478EDC9A7E1B11DB3132375F8174825BADFB">
                            <name>operator ValueType() const</name>
                            <syntax>public ValueType operator ValueType() const;</syntax>
                            <returnType ref="4237d6ae-8537-4ec7-bef5-89061bffb107"/>
                        </function>
                        <function id="member_function_op_assign_ValueObject_ValueType_F83209E7F0869FB17FBD4D8F700E76F46DB2638B">
                            <name>operator=(const ValueType&amp; value_)</name>
                            <syntax>public void operator=(const ValueType&amp; value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.6a151616-fc13-4b5b-ae14-96a51d5dc948"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Visitor_019F0A77C04DF2CCE6FDB74DE512001C068902CF">
                    <name>Visitor</name>
                    <groupName>Visitor</groupName>
                    <syntax> public class Visitor;</syntax>
                    <functions>
                        <function id="function_group_BeginVisit_B5C691876405B8298E6554E11E1A9F987B6A13AD">
                            <name>BeginVisit</name>
                            <overloads>
                                <overload id="member_function_BeginVisit_Visitor_3C69F3478C0BE14E87C3DFF52CF4E2CC742F5CCB">
                                    <name>BeginVisit(ActionParser&amp; actionParser)</name>
                                    <syntax>public virtual void BeginVisit(ActionParser&amp; actionParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>actionParser</name>
                                            <type ref="type.4d8ee09e-63b4-4583-ae4f-7f0a7de2b770"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_0B82297C2D03430A8170C338BF7B01652810125E">
                                    <name>BeginVisit(AlternativeParser&amp; alternativeParser)</name>
                                    <syntax>public virtual void BeginVisit(AlternativeParser&amp; alternativeParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>alternativeParser</name>
                                            <type ref="type.1035d0ff-2e62-47ad-810a-7db3f862c75d"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_46532D867D0EF0655E2E23E4148738CDED6FB7AC">
                                    <name>BeginVisit(DifferenceParser&amp; differenceParser)</name>
                                    <syntax>public virtual void BeginVisit(DifferenceParser&amp; differenceParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>differenceParser</name>
                                            <type ref="type.e7f190ab-31a5-43b1-b3cf-d536e692b167"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_11DC4CDD63E012FA0601747506C63029B8410CD8">
                                    <name>BeginVisit(ExclusiveOrParser&amp; exclusiveOrParser)</name>
                                    <syntax>public virtual void BeginVisit(ExclusiveOrParser&amp; exclusiveOrParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>exclusiveOrParser</name>
                                            <type ref="type.12ad51ba-ed39-448a-b215-4aa648679c76"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_14CC953EE84829910938FF6E0688803D619FAA4F">
                                    <name>BeginVisit(ExpectationParser&amp; expectationParser)</name>
                                    <syntax>public virtual void BeginVisit(ExpectationParser&amp; expectationParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>expectationParser</name>
                                            <type ref="type.f3bc7f79-b448-4761-9511-fae53d2cafcf"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_A2C707E128EBC828C31D9D762EB0B78A9697F1CD">
                                    <name>BeginVisit(Grammar&amp; grammar)</name>
                                    <syntax>public virtual void BeginVisit(Grammar&amp; grammar);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>grammar</name>
                                            <type ref="type.76b75553-a0fe-4105-8764-20ef4571a182"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_482D52EA4D86D0FE83B64F526EBF2F783BA23577">
                                    <name>BeginVisit(IntersectionParser&amp; intersectionParser)</name>
                                    <syntax>public virtual void BeginVisit(IntersectionParser&amp; intersectionParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>intersectionParser</name>
                                            <type ref="type.93afd0c4-6fbc-41ee-b686-8d93df67b931"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_3AA78E535DB0279D9696E33D7210DC29D585DD3D">
                                    <name>BeginVisit(KleeneStarParser&amp; kleeneStarParser)</name>
                                    <syntax>public virtual void BeginVisit(KleeneStarParser&amp; kleeneStarParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>kleeneStarParser</name>
                                            <type ref="type.6a0f1ce7-2628-452d-902c-8b8b22b36be1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_4C00C6D63137AB8E2ECA034E542A652A4FDB6D66">
                                    <name>BeginVisit(ListParser&amp; listParser)</name>
                                    <syntax>public virtual void BeginVisit(ListParser&amp; listParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>listParser</name>
                                            <type ref="type.57f36d06-9f22-4dd4-a3dd-3edd78facbd2"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_1AC698A8542624106DF694A2C2D268A7D831B3C1">
                                    <name>BeginVisit(Namespace&amp; ns)</name>
                                    <syntax>public virtual void BeginVisit(Namespace&amp; ns);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>ns</name>
                                            <type ref="type.da30ecaa-d882-4b04-8edb-efc8c9aa1c65"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_BE89C9D1FCFFAFAA4D37FF8553AD3C7EBFCDEC8E">
                                    <name>BeginVisit(OptionalParser&amp; optionalParser)</name>
                                    <syntax>public virtual void BeginVisit(OptionalParser&amp; optionalParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>optionalParser</name>
                                            <type ref="type.d81d3e87-4aec-494b-ae6e-d2ff90e8cfaf"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_EAB6C907A162AC44EDAE8BE53906C6C42B5FEBFF">
                                    <name>BeginVisit(PositiveParser&amp; positiveParser)</name>
                                    <syntax>public virtual void BeginVisit(PositiveParser&amp; positiveParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>positiveParser</name>
                                            <type ref="type.709ac1f3-e365-4145-b507-42e9781c47f3"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_A1232E7C2A839C1093B7AF1204BA7B8B5705846D">
                                    <name>BeginVisit(RuleParser&amp; rule)</name>
                                    <syntax>public virtual void BeginVisit(RuleParser&amp; rule);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>rule</name>
                                            <type ref="type.9d88513b-9425-401d-9e70-2d75019148b8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_5F3A470EB2415901E201826BA969B2B072157F53">
                                    <name>BeginVisit(SequenceParser&amp; sequenceParser)</name>
                                    <syntax>public virtual void BeginVisit(SequenceParser&amp; sequenceParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>sequenceParser</name>
                                            <type ref="type.52952c35-7029-49cd-b0a1-750698d112e8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_BeginVisit_Visitor_FB01CDD20EA3208D971B74178895008965DF0291">
                                    <name>BeginVisit(TokenParser&amp; tokenParser)</name>
                                    <syntax>public virtual void BeginVisit(TokenParser&amp; tokenParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>tokenParser</name>
                                            <type ref="type.d8f66ae7-9473-46d3-968c-1d9a019986a3"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="function_group_EndVisit_79141257664E016439225059D33D7BE6CC044D29">
                            <name>EndVisit</name>
                            <overloads>
                                <overload id="member_function_EndVisit_Visitor_5873FEBCA7778FF3E51EFB6285703F02F5A7B7E3">
                                    <name>EndVisit(ActionParser&amp; actionParser)</name>
                                    <syntax>public virtual void EndVisit(ActionParser&amp; actionParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>actionParser</name>
                                            <type ref="type.4d8ee09e-63b4-4583-ae4f-7f0a7de2b770"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_C784871802B4B3E734C3B073A0C4687FE46CD1E9">
                                    <name>EndVisit(AlternativeParser&amp; alternativeParser)</name>
                                    <syntax>public virtual void EndVisit(AlternativeParser&amp; alternativeParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>alternativeParser</name>
                                            <type ref="type.1035d0ff-2e62-47ad-810a-7db3f862c75d"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_0E54BB3AB8181999AE8B05EE01327684FAF4A835">
                                    <name>EndVisit(DifferenceParser&amp; differenceParser)</name>
                                    <syntax>public virtual void EndVisit(DifferenceParser&amp; differenceParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>differenceParser</name>
                                            <type ref="type.e7f190ab-31a5-43b1-b3cf-d536e692b167"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_3F1ECF05A40BD2AC8F4A1932377D49D760FFBC65">
                                    <name>EndVisit(ExclusiveOrParser&amp; exclusiveOrParser)</name>
                                    <syntax>public virtual void EndVisit(ExclusiveOrParser&amp; exclusiveOrParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>exclusiveOrParser</name>
                                            <type ref="type.12ad51ba-ed39-448a-b215-4aa648679c76"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_B26B7677A6D0F9EE0C7D6D7CE86459D64886B61A">
                                    <name>EndVisit(ExpectationParser&amp; expectationParser)</name>
                                    <syntax>public virtual void EndVisit(ExpectationParser&amp; expectationParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>expectationParser</name>
                                            <type ref="type.f3bc7f79-b448-4761-9511-fae53d2cafcf"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_B19FE0338C157B9EE8C04021DF3A9EB9DC6F447A">
                                    <name>EndVisit(Grammar&amp; grammar)</name>
                                    <syntax>public virtual void EndVisit(Grammar&amp; grammar);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>grammar</name>
                                            <type ref="type.76b75553-a0fe-4105-8764-20ef4571a182"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_85E87F8DA07B8B73587BD996CC47A15DAC6DA70E">
                                    <name>EndVisit(IntersectionParser&amp; intersectionParser)</name>
                                    <syntax>public virtual void EndVisit(IntersectionParser&amp; intersectionParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>intersectionParser</name>
                                            <type ref="type.93afd0c4-6fbc-41ee-b686-8d93df67b931"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_98D2BC5F6F62CDCD44CCD607B3BCC46E09044837">
                                    <name>EndVisit(KleeneStarParser&amp; kleeneStarParser)</name>
                                    <syntax>public virtual void EndVisit(KleeneStarParser&amp; kleeneStarParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>kleeneStarParser</name>
                                            <type ref="type.6a0f1ce7-2628-452d-902c-8b8b22b36be1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_ECF9315123AA428B26B58D7C1AF7FBCAA9FDC114">
                                    <name>EndVisit(ListParser&amp; listParser)</name>
                                    <syntax>public virtual void EndVisit(ListParser&amp; listParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>listParser</name>
                                            <type ref="type.57f36d06-9f22-4dd4-a3dd-3edd78facbd2"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_29D8220918F57810DD92FFC63BF5FAE99098DD60">
                                    <name>EndVisit(Namespace&amp; ns)</name>
                                    <syntax>public virtual void EndVisit(Namespace&amp; ns);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>ns</name>
                                            <type ref="type.da30ecaa-d882-4b04-8edb-efc8c9aa1c65"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_16AF0BD49350604127988E3955276B4421EA7BAA">
                                    <name>EndVisit(OptionalParser&amp; optionalParser)</name>
                                    <syntax>public virtual void EndVisit(OptionalParser&amp; optionalParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>optionalParser</name>
                                            <type ref="type.d81d3e87-4aec-494b-ae6e-d2ff90e8cfaf"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_FCD37CED9F1F715826A13DF030A2090B0E9C51F0">
                                    <name>EndVisit(PositiveParser&amp; positiveParser)</name>
                                    <syntax>public virtual void EndVisit(PositiveParser&amp; positiveParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>positiveParser</name>
                                            <type ref="type.709ac1f3-e365-4145-b507-42e9781c47f3"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_F0422CF732EED6A2846497A226596542B931993B">
                                    <name>EndVisit(RuleParser&amp; rule)</name>
                                    <syntax>public virtual void EndVisit(RuleParser&amp; rule);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>rule</name>
                                            <type ref="type.9d88513b-9425-401d-9e70-2d75019148b8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_A329EC2E58708229A2AA5FC8CF67AC4C54472692">
                                    <name>EndVisit(SequenceParser&amp; sequenceParser)</name>
                                    <syntax>public virtual void EndVisit(SequenceParser&amp; sequenceParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>sequenceParser</name>
                                            <type ref="type.52952c35-7029-49cd-b0a1-750698d112e8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_EndVisit_Visitor_4F1EE3D9E005BA13380C0ADF0CBE142140418971">
                                    <name>EndVisit(TokenParser&amp; tokenParser)</name>
                                    <syntax>public virtual void EndVisit(TokenParser&amp; tokenParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>tokenParser</name>
                                            <type ref="type.d8f66ae7-9473-46d3-968c-1d9a019986a3"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="function_group_Visit_E324BBAEAD3DDA1AACEA3201168142594DD53605">
                            <name>Visit</name>
                            <overloads>
                                <overload id="member_function_Visit_Visitor_EAA5C0982A03E767580C7E8AB003651847B97B41">
                                    <name>Visit(AlphabeticParser&amp; alphabeticParser)</name>
                                    <syntax>public virtual void Visit(AlphabeticParser&amp; alphabeticParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>alphabeticParser</name>
                                            <type ref="type.0a0e061f-e44e-45d1-8bb6-7bf4e4b9d359"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_21D9E2198D6CCAFA5C0B36DFDA99E6F4FA1E4B99">
                                    <name>Visit(AlternativeParser&amp; alternativeParser)</name>
                                    <syntax>public virtual void Visit(AlternativeParser&amp; alternativeParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>alternativeParser</name>
                                            <type ref="type.1035d0ff-2e62-47ad-810a-7db3f862c75d"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_954FAF7CCF2A78751822EFBB06FE2313B891B62A">
                                    <name>Visit(AnyCharParser&amp; anyCharParser)</name>
                                    <syntax>public virtual void Visit(AnyCharParser&amp; anyCharParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>anyCharParser</name>
                                            <type ref="type.b5886a50-0b6f-4dee-86c2-b8795e44e8ab"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_6AC8D6A5B50D483AF03BB143E5E258E085F8FF59">
                                    <name>Visit(BaseCharParser&amp; baseCharParser)</name>
                                    <syntax>public virtual void Visit(BaseCharParser&amp; baseCharParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>baseCharParser</name>
                                            <type ref="type.5d7aefd9-c7cb-44ed-804f-eb29147b599b"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_C4E188530BF92A9E83D720E63ACED47E8BB48778">
                                    <name>Visit(CasedLetterParser&amp; casedLetterParser)</name>
                                    <syntax>public virtual void Visit(CasedLetterParser&amp; casedLetterParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>casedLetterParser</name>
                                            <type ref="type.97177733-b1cf-487b-996f-0c819859aa3e"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_548BEB3A6F2B0F931FB472FE5DD9435A40BAC0F2">
                                    <name>Visit(CharParser&amp; charParser)</name>
                                    <syntax>public virtual void Visit(CharParser&amp; charParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>charParser</name>
                                            <type ref="type.56b28854-0a9c-44ba-a917-df1e782fe66f"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_6A776BDE8C032087C46BADA5739BE4721E747352">
                                    <name>Visit(CharSetParser&amp; charSetParser)</name>
                                    <syntax>public virtual void Visit(CharSetParser&amp; charSetParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>charSetParser</name>
                                            <type ref="type.e7883257-fb0c-4cec-826f-77ebe48cdfcd"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_C3F0F0A0FCC5E21BB5C591865577F478703B9631">
                                    <name>Visit(ClosePunctuationParser&amp; closePunctuationParser)</name>
                                    <syntax>public virtual void Visit(ClosePunctuationParser&amp; closePunctuationParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>closePunctuationParser</name>
                                            <type ref="type.055f6ad5-a585-4065-ab84-df1e0d315aab"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_3004B23CAA00C13A4513BCBD7D036AF5A22A148F">
                                    <name>Visit(ConnectorPunctuationParser&amp; connectorPunctuationParser)</name>
                                    <syntax>public virtual void Visit(ConnectorPunctuationParser&amp; connectorPunctuationParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>connectorPunctuationParser</name>
                                            <type ref="type.3b871b3a-2fbe-4834-a075-c0ebf4e130e0"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_87D0F5A5190D49E213DF82D0737E990AD8E55CC6">
                                    <name>Visit(ControlParser&amp; controlParser)</name>
                                    <syntax>public virtual void Visit(ControlParser&amp; controlParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>controlParser</name>
                                            <type ref="type.94b2de31-5b6e-4556-88aa-130eb87e5277"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_0C27A549BEACBDF7BF89629C09E2A8362D63B77B">
                                    <name>Visit(CurrencySymbolParser&amp; currencySymbolParser)</name>
                                    <syntax>public virtual void Visit(CurrencySymbolParser&amp; currencySymbolParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>currencySymbolParser</name>
                                            <type ref="type.4805b8f3-04e3-4c43-8140-ad5d40c5348c"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_D2B740A087AF9E793194CD396C24D0B84642A5D8">
                                    <name>Visit(DashPunctuationParser&amp; dashPunctuationParser)</name>
                                    <syntax>public virtual void Visit(DashPunctuationParser&amp; dashPunctuationParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>dashPunctuationParser</name>
                                            <type ref="type.36cb878c-21b2-41d9-9ee3-b3bcbc9fe6ed"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_0EAE80CAECF5F5ED260E1392C8EBFDEF332DE360">
                                    <name>Visit(DecimalNumberParser&amp; decimalNumberParser)</name>
                                    <syntax>public virtual void Visit(DecimalNumberParser&amp; decimalNumberParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>decimalNumberParser</name>
                                            <type ref="type.e4462ea4-bd60-47a6-8ed5-0ee914a54c40"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_3E0DADEA1B81FEEBE266CE964030DB1351D10F48">
                                    <name>Visit(DifferenceParser&amp; differenceParser)</name>
                                    <syntax>public virtual void Visit(DifferenceParser&amp; differenceParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>differenceParser</name>
                                            <type ref="type.e7f190ab-31a5-43b1-b3cf-d536e692b167"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_FACB52D8E9614D214F30CCB5500EE9B5C8814126">
                                    <name>Visit(DigitParser&amp; digitParser)</name>
                                    <syntax>public virtual void Visit(DigitParser&amp; digitParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>digitParser</name>
                                            <type ref="type.fabc5d61-854f-4b19-bf62-622e950134f2"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_DC77E20E894991C79AB3E6E1D364C33B1A1B6337">
                                    <name>Visit(EmptyParser&amp; emptyParser)</name>
                                    <syntax>public virtual void Visit(EmptyParser&amp; emptyParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>emptyParser</name>
                                            <type ref="type.ca3860f2-e462-496b-b808-1be6a9e9686f"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_43DB870680A0B1CCF36C6C5DB65109E640B17175">
                                    <name>Visit(EnclosingMarkParser&amp; enclosingMarkParser)</name>
                                    <syntax>public virtual void Visit(EnclosingMarkParser&amp; enclosingMarkParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>enclosingMarkParser</name>
                                            <type ref="type.8150b575-d253-4b4f-b79d-1840771f857d"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_2DC1B904CD0A318A51DC83EE9AFB9FBADB7A0F27">
                                    <name>Visit(ExclusiveOrParser&amp; exclusiveOrParser)</name>
                                    <syntax>public virtual void Visit(ExclusiveOrParser&amp; exclusiveOrParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>exclusiveOrParser</name>
                                            <type ref="type.12ad51ba-ed39-448a-b215-4aa648679c76"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_5F0701F82E9F009AB9585BC164019DC8004346A6">
                                    <name>Visit(FinalPunctuationParser&amp; finalPunctuationParser)</name>
                                    <syntax>public virtual void Visit(FinalPunctuationParser&amp; finalPunctuationParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>finalPunctuationParser</name>
                                            <type ref="type.eab6f1b7-bba6-4ee7-a10b-39fd9e75e7f7"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_9A71EDA0B8F03951DFD119C095BC7CCBC3EA2D68">
                                    <name>Visit(FormatParser&amp; formatParser)</name>
                                    <syntax>public virtual void Visit(FormatParser&amp; formatParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>formatParser</name>
                                            <type ref="type.e3b4afa4-51b0-454d-86a5-58bab2ac2319"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_E093768A4B443BEA7F50131FA7A7CBD5AA43D23F">
                                    <name>Visit(GraphicParser&amp; graphicParser)</name>
                                    <syntax>public virtual void Visit(GraphicParser&amp; graphicParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>graphicParser</name>
                                            <type ref="type.753b69cc-29fd-40cf-9e00-6ef9e1788648"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_75DCEEE3AD3192858EBA8D34C9CD749D2F92371F">
                                    <name>Visit(HexDigitParser&amp; hexDigitParser)</name>
                                    <syntax>public virtual void Visit(HexDigitParser&amp; hexDigitParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>hexDigitParser</name>
                                            <type ref="type.feaefa62-47df-46da-a53f-d7ae59cbdf34"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_F55704411C9DF5620F527FEA41755A2E75062ED2">
                                    <name>Visit(IdContParser&amp; idContParser)</name>
                                    <syntax>public virtual void Visit(IdContParser&amp; idContParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>idContParser</name>
                                            <type ref="type.1b4c1429-af6d-42dc-89d5-1fbbe5260567"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_D5B51FC9E2B4551C14D528F16BAFF08F4F841066">
                                    <name>Visit(IdStartParser&amp; idStartParser)</name>
                                    <syntax>public virtual void Visit(IdStartParser&amp; idStartParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>idStartParser</name>
                                            <type ref="type.5f328192-2e82-4a7b-b044-c088d1b9545b"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_CEB7C7A8F38F98EC751401713A3AEA6E8438414C">
                                    <name>Visit(InitialPunctuationParser&amp; initialPunctuationParser)</name>
                                    <syntax>public virtual void Visit(InitialPunctuationParser&amp; initialPunctuationParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>initialPunctuationParser</name>
                                            <type ref="type.39fa8dac-debf-4ecc-bc37-876ccaa78a3c"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_358386F687DD45E33D5B339EA6623817F9813F44">
                                    <name>Visit(IntersectionParser&amp; intersectionParser)</name>
                                    <syntax>public virtual void Visit(IntersectionParser&amp; intersectionParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>intersectionParser</name>
                                            <type ref="type.93afd0c4-6fbc-41ee-b686-8d93df67b931"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_7545009BAA199558184E617AB3DC322BE00E0551">
                                    <name>Visit(KeywordListParser&amp; keywordListParser)</name>
                                    <syntax>public virtual void Visit(KeywordListParser&amp; keywordListParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>keywordListParser</name>
                                            <type ref="type.8e4d56c2-fc9b-4678-a014-b8693d9392f5"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_BC61B51852ACB2D5AC2CC1C88C5AF2A2811D4207">
                                    <name>Visit(KeywordParser&amp; keywordParser)</name>
                                    <syntax>public virtual void Visit(KeywordParser&amp; keywordParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>keywordParser</name>
                                            <type ref="type.a04fe64c-9b43-4ede-a906-3e1590d1a701"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_9EF1573A8B9214A644D6D00252EEE84A3DD6DF64">
                                    <name>Visit(LetterNumberParser&amp; letterNumberParser)</name>
                                    <syntax>public virtual void Visit(LetterNumberParser&amp; letterNumberParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>letterNumberParser</name>
                                            <type ref="type.df71f94c-6ded-4b2b-9020-13357bc5afc4"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_0C894B78542AF047A08EC64D74B6377565BD471F">
                                    <name>Visit(LetterParser&amp; letterParser)</name>
                                    <syntax>public virtual void Visit(LetterParser&amp; letterParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>letterParser</name>
                                            <type ref="type.5738f8e2-5353-4f8b-8c31-d33d21d03a44"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_147B6779437280E26C0D016854AB146D05B328CC">
                                    <name>Visit(LineSeparatorParser&amp; lineSeparatorParser)</name>
                                    <syntax>public virtual void Visit(LineSeparatorParser&amp; lineSeparatorParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>lineSeparatorParser</name>
                                            <type ref="type.28d5a966-0bb2-436c-9d22-9c9c82db3218"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_859AFC54A9F3D97719740D3190A712BF9D482D2A">
                                    <name>Visit(ListParser&amp; listParser)</name>
                                    <syntax>public virtual void Visit(ListParser&amp; listParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>listParser</name>
                                            <type ref="type.57f36d06-9f22-4dd4-a3dd-3edd78facbd2"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_14F095A9A405E2D2663FA67FE6EFC5A3038C03BD">
                                    <name>Visit(LowerLetterParser&amp; lowerLetterParser)</name>
                                    <syntax>public virtual void Visit(LowerLetterParser&amp; lowerLetterParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>lowerLetterParser</name>
                                            <type ref="type.af1e8b01-7bd2-4575-ab4c-65815f2e017f"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_DC5AAF1B1B051648015648599FD1D7D2D7C894A4">
                                    <name>Visit(MarkParser&amp; markParser)</name>
                                    <syntax>public virtual void Visit(MarkParser&amp; markParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>markParser</name>
                                            <type ref="type.9e501bfb-2a5e-422a-8786-ccdd7497b344"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_41688B34EF724F5B4599363DD61107CC0E46151F">
                                    <name>Visit(MathSymbolParser&amp; mathSymbolParser)</name>
                                    <syntax>public virtual void Visit(MathSymbolParser&amp; mathSymbolParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>mathSymbolParser</name>
                                            <type ref="type.6f70efd8-c3d9-4aac-8bc7-c237e91338d9"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_20D85D14B4AE93311DBA89BF59A19A1116380048">
                                    <name>Visit(ModifierLetterParser&amp; modifierLetterParser)</name>
                                    <syntax>public virtual void Visit(ModifierLetterParser&amp; modifierLetterParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>modifierLetterParser</name>
                                            <type ref="type.4b14105a-df54-4a51-abf9-4f64219329e3"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_C40A9C4BCBC33E3C9650B4AF506C3CE2DEF8162A">
                                    <name>Visit(ModifierSymbolParser&amp; modifierSymbolParser)</name>
                                    <syntax>public virtual void Visit(ModifierSymbolParser&amp; modifierSymbolParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>modifierSymbolParser</name>
                                            <type ref="type.f570372a-e52f-4813-bfa4-a967f89c0a60"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_7F27D9E7900D80FA25D9372FAC26F3DA9D10CFC2">
                                    <name>Visit(NonspacingMarkParser&amp; nonspacingMarkParser)</name>
                                    <syntax>public virtual void Visit(NonspacingMarkParser&amp; nonspacingMarkParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>nonspacingMarkParser</name>
                                            <type ref="type.8f384c2d-7f49-4363-93b4-8fa9d2561f79"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_ED8E471D04449A4D40C56A3E3F8B94C3BA515EF3">
                                    <name>Visit(NonterminalParser&amp; nonterminalParser)</name>
                                    <syntax>public virtual void Visit(NonterminalParser&amp; nonterminalParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>nonterminalParser</name>
                                            <type ref="type.51055218-9737-4d84-8d1c-2de41ce4d6e1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_6971BC48329F8916BB4FBEFA714417F89AF88F4E">
                                    <name>Visit(NumberParser&amp; numberParser)</name>
                                    <syntax>public virtual void Visit(NumberParser&amp; numberParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>numberParser</name>
                                            <type ref="type.b786d5eb-cdb7-43e4-a7fd-0dbfcf1ff0e7"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_F410E229DE9392AE4342C4AB5B0181FE24DEBD7F">
                                    <name>Visit(OpenPunctuationParser&amp; openPunctuationParser)</name>
                                    <syntax>public virtual void Visit(OpenPunctuationParser&amp; openPunctuationParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>openPunctuationParser</name>
                                            <type ref="type.c43c33c3-82ab-4878-854d-c30eb041b5d5"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_AA752F1A31D5642FD959D956EA1AA062650BB120">
                                    <name>Visit(OtherLetterParser&amp; otherLetterParser)</name>
                                    <syntax>public virtual void Visit(OtherLetterParser&amp; otherLetterParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>otherLetterParser</name>
                                            <type ref="type.0f56a0e0-b7e8-4dfd-a681-1ec5e478fbfc"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_AF3F3D379140565EFAA2333DCF5054513850BFD3">
                                    <name>Visit(OtherNumberParser&amp; otherNumberParer)</name>
                                    <syntax>public virtual void Visit(OtherNumberParser&amp; otherNumberParer);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>otherNumberParer</name>
                                            <type ref="type.e4414450-6605-4ec0-b275-a0d07e6fc6ae"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_A814893E5E37A45D43CE8149B776CB07671BBA5E">
                                    <name>Visit(OtherParser&amp; otherParser)</name>
                                    <syntax>public virtual void Visit(OtherParser&amp; otherParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>otherParser</name>
                                            <type ref="type.d0872f26-6aa2-4c78-8cee-edc1ea745a8d"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_ACAB85272DD91C108BEBC3D98A6F62E7A9AAF0D0">
                                    <name>Visit(OtherPunctuationParser&amp; otherPunctuationParser)</name>
                                    <syntax>public virtual void Visit(OtherPunctuationParser&amp; otherPunctuationParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>otherPunctuationParser</name>
                                            <type ref="type.96fc7efc-dd32-460c-b2bf-ed81161fcb96"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_A6DF3772094C1FFF39080C2C58C2E7EB8B7BC70B">
                                    <name>Visit(OtherSymbolParser&amp; otherSymbolParser)</name>
                                    <syntax>public virtual void Visit(OtherSymbolParser&amp; otherSymbolParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>otherSymbolParser</name>
                                            <type ref="type.5d0442a8-9cff-45e5-8f10-d9277f22d640"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_E3DEB3226781A34FE62BF04D28C2F2069062F561">
                                    <name>Visit(ParagraphSeparatorParser&amp; paragraphSeparatorParser)</name>
                                    <syntax>public virtual void Visit(ParagraphSeparatorParser&amp; paragraphSeparatorParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>paragraphSeparatorParser</name>
                                            <type ref="type.76427ec8-7ad9-4a6b-8e60-8083b70ed20b"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_04DED091CCD25080DDD6FF92D3A95912C3A6B79F">
                                    <name>Visit(PrivateUseParser&amp; privateUseParser)</name>
                                    <syntax>public virtual void Visit(PrivateUseParser&amp; privateUseParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>privateUseParser</name>
                                            <type ref="type.b8cb30ca-c72f-4a05-bafa-8c03916de01a"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_D2991943C8EEB1F88EB013D79B315842F4A6E860">
                                    <name>Visit(PunctuationParser&amp; punctuationParser)</name>
                                    <syntax>public virtual void Visit(PunctuationParser&amp; punctuationParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>punctuationParser</name>
                                            <type ref="type.a51b1edc-8f97-41ef-bc21-1bf67a108507"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_C8E45936B8CE68004FA0C1C61AECBFEDF29D9BDD">
                                    <name>Visit(RangeParser&amp; rangeParser)</name>
                                    <syntax>public virtual void Visit(RangeParser&amp; rangeParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>rangeParser</name>
                                            <type ref="type.6d2ef368-c713-439c-b470-a268b92a3796"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_0BF25A581950481AB951DB5EEC749BD3989795F2">
                                    <name>Visit(RuleLink&amp; ruleLink)</name>
                                    <syntax>public virtual void Visit(RuleLink&amp; ruleLink);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>ruleLink</name>
                                            <type ref="type.3a217868-bdcb-4f9a-85a1-bfcf3a81fbe3"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_EB1055B2400FFACA7700EFEE080C93B7EF53CB37">
                                    <name>Visit(SeparatorParser&amp; separatorParser)</name>
                                    <syntax>public virtual void Visit(SeparatorParser&amp; separatorParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>separatorParser</name>
                                            <type ref="type.b7cb3fe5-e6fc-45f7-8848-81d38f4d16c4"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_138FF6A19119629ACB5802919D5811B3F6F1D1E7">
                                    <name>Visit(SequenceParser&amp; sequenceParser)</name>
                                    <syntax>public virtual void Visit(SequenceParser&amp; sequenceParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>sequenceParser</name>
                                            <type ref="type.52952c35-7029-49cd-b0a1-750698d112e8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_EBE768042FD518CA151A3198A4884E959C643B67">
                                    <name>Visit(SpaceParser&amp; spaceParser)</name>
                                    <syntax>public virtual void Visit(SpaceParser&amp; spaceParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>spaceParser</name>
                                            <type ref="type.029f2a40-5c81-4632-a99e-932d126dd4be"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_08C6DD1CD83012756B4349A9BF68BFF9C16C5FFA">
                                    <name>Visit(SpaceSeparatorParser&amp; spaceSeparatorParser)</name>
                                    <syntax>public virtual void Visit(SpaceSeparatorParser&amp; spaceSeparatorParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>spaceSeparatorParser</name>
                                            <type ref="type.a286eb1b-71dd-4fa5-a17b-070cfbce6993"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_1F640A9C551CCD72E7A86D2ED72AB5471ED97257">
                                    <name>Visit(SpacingMarkParser&amp; spacingMarkParser)</name>
                                    <syntax>public virtual void Visit(SpacingMarkParser&amp; spacingMarkParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>spacingMarkParser</name>
                                            <type ref="type.78a3271e-2455-4dd9-8321-ebb5cdf36872"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_FA3165A8F58B83D22E8D42CEE8897ED7DBACCBA6">
                                    <name>Visit(StringParser&amp; stringParser)</name>
                                    <syntax>public virtual void Visit(StringParser&amp; stringParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>stringParser</name>
                                            <type ref="type.062ff8ea-998d-4abb-a176-1dab21d4102d"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_694D70E309361EFB3252C97C78E3A026A3415BF1">
                                    <name>Visit(SurrogateParser&amp; surrogateParser)</name>
                                    <syntax>public virtual void Visit(SurrogateParser&amp; surrogateParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>surrogateParser</name>
                                            <type ref="type.10a7210a-ea0d-4a2f-adbe-b75fd4c85cdc"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_6F927C7A699AF95FBAA1BFB98D2CEEC0D2AB8945">
                                    <name>Visit(SymbolParser&amp; symbolParser)</name>
                                    <syntax>public virtual void Visit(SymbolParser&amp; symbolParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>symbolParser</name>
                                            <type ref="type.cb36975c-f764-4123-a095-082b3894fbf1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_8B2C5DF74F8999C2FF68965411A1A41DC6A6E6EA">
                                    <name>Visit(TitleLetterParser&amp; titleLetterParser)</name>
                                    <syntax>public virtual void Visit(TitleLetterParser&amp; titleLetterParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>titleLetterParser</name>
                                            <type ref="type.c036e588-9a19-49db-97bf-58d403ed3475"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_38C51FFD269BE5DAE72A78E5127754C5B24E46BB">
                                    <name>Visit(UnassignedParser&amp; unassignedParser)</name>
                                    <syntax>public virtual void Visit(UnassignedParser&amp; unassignedParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>unassignedParser</name>
                                            <type ref="type.d02ae84a-5aaf-4c98-9f52-a71d7034a802"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_8BF1AEAB9DB3A7165DE7E5409D9635FD8ECA9F8F">
                                    <name>Visit(UpperLetterParser&amp; upperLetterParser)</name>
                                    <syntax>public virtual void Visit(UpperLetterParser&amp; upperLetterParser);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>upperLetterParser</name>
                                            <type ref="type.1c3d7a6b-acd4-47e1-9740-c2feae6ecd53"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                    </functions>
                </class>
                <class id="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704">
                    <name>XmlLog</name>
                    <groupName>XmlLog</groupName>
                    <syntax> public class XmlLog;</syntax>
                    <constructors>
                        <constructor id="constructor_XmlLog_3BE29A048D209B39468D36D8B8213F00CD5CE7B4">
                            <name>XmlLog(StreamWriter&amp; writer_, int maxLineLength_)</name>
                            <syntax>public nothrow XmlLog(StreamWriter&amp; writer_, int maxLineLength_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>writer_</name>
                                    <type ref="type.8443c3b4-e010-4ca9-a4e1-35af9eaf958a"/>
                                </parameter>
                                <parameter>
                                    <name>maxLineLength_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_DecIndent_XmlLog_4C871D50E812DD2B0809544BEE1D5F7ADE5A5575">
                            <name>DecIndent()</name>
                            <syntax>public nothrow inline void DecIndent();</syntax>
                        </function>
                        <function id="member_function_IncIndent_XmlLog_EB0ABAAC3F5F26E7239BFD0924BF6F3D5F20A92E">
                            <name>IncIndent()</name>
                            <syntax>public nothrow inline void IncIndent();</syntax>
                        </function>
                        <function id="member_function_MaxLineLength_XmlLog_A1AD5DE5DF5DD1787565056EDA302638F4E55EF0">
                            <name>MaxLineLength() const</name>
                            <syntax>public nothrow inline int MaxLineLength() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                        <function id="member_function_Write_XmlLog_DA9D1C2417B4DA88BF9959AEB34E60E90A5F21FA">
                            <name>Write(const String&lt;uchar>&amp; s)</name>
                            <syntax>public void Write(const String&lt;uchar>&amp; s);</syntax>
                            <parameters>
                                <parameter>
                                    <name>s</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_WriteBeginRule_XmlLog_5899B4427541E4050B1AA6FC236F287F6D649960">
                            <name>WriteBeginRule(const String&lt;uchar>&amp; ruleName)</name>
                            <syntax>public void WriteBeginRule(const String&lt;uchar>&amp; ruleName);</syntax>
                            <parameters>
                                <parameter>
                                    <name>ruleName</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_WriteElement_XmlLog_F5A0AD4B369E2B08AE3A5434DEFDC078135ADC3E">
                            <name>WriteElement(const String&lt;uchar>&amp; elementName, const String&lt;uchar>&amp; elementContent)</name>
                            <syntax>public void WriteElement(const String&lt;uchar>&amp; elementName, const String&lt;uchar>&amp; elementContent);</syntax>
                            <parameters>
                                <parameter>
                                    <name>elementName</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>elementContent</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_WriteEndRule_XmlLog_9289C4B4EAF5C4B8752A34D8CDF59521A07AC7AD">
                            <name>WriteEndRule(const String&lt;uchar>&amp; ruleName)</name>
                            <syntax>public void WriteEndRule(const String&lt;uchar>&amp; ruleName);</syntax>
                            <parameters>
                                <parameter>
                                    <name>ruleName</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_WriteFail_XmlLog_18E5AF01C6FC6CEEF4134CA2CABDE54F10DC6766">
                            <name>WriteFail()</name>
                            <syntax>public void WriteFail();</syntax>
                        </function>
                        <function id="member_function_WriteSuccess_XmlLog_3E22503C19B38FBD163EA3EF4B3EDDBAF0C02038">
                            <name>WriteSuccess(const String&lt;uchar>&amp; match)</name>
                            <syntax>public void WriteSuccess(const String&lt;uchar>&amp; match);</syntax>
                            <parameters>
                                <parameter>
                                    <name>match</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_WriteTry_XmlLog_ABED20B7D097E464AE73F6B84C92DE4D0A2837AA">
                            <name>WriteTry(const String&lt;uchar>&amp; s)</name>
                            <syntax>public void WriteTry(const String&lt;uchar>&amp; s);</syntax>
                            <parameters>
                                <parameter>
                                    <name>s</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981">
                    <name>stdlib</name>
                    <groupName>stdlib</groupName>
                    <syntax> public class stdlib;</syntax>
                    <baseClass ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                    <constructors>
                        <constructor id="default_constructor_stdlib_66237E3263302A7F81A23B3ED60F61BD92347F46">
                            <name>stdlib()</name>
                            <syntax>public stdlib();</syntax>
                        </constructor>
                        <constructor id="constructor_stdlib_97795A96520DDF56F703C847ED6F564005CAE4BD">
                            <name>stdlib(ParsingDomain* parsingDomain)</name>
                            <syntax>public stdlib(ParsingDomain* parsingDomain);</syntax>
                            <parameters>
                                <parameter>
                                    <name>parsingDomain</name>
                                    <type ref="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_CreateRules_stdlib_123FA2BE91B0A1ABCE924CB8679C1D02D233B38D">
                            <name>CreateRules()</name>
                            <syntax>public override void CreateRules();</syntax>
                        </function>
                        <function id="member_function_GetReferencedGrammars_stdlib_9E1157B68CDE56EB74B28A8C0702A2FF0A6B481B">
                            <name>GetReferencedGrammars()</name>
                            <syntax>public override void GetReferencedGrammars();</syntax>
                        </function>
                    </functions>
                </class>
            </classes>
            <functions>
                <function id="function_CommonName_E714805B7BF1F48ED743DBDBBB779C74673362E2">
                    <name>CommonName(const String&lt;uchar>&amp; qualifiedName)</name>
                    <syntax>public nothrow String&lt;uchar> CommonName(const String&lt;uchar>&amp; qualifiedName);</syntax>
                    <parameters>
                        <parameter>
                            <name>qualifiedName</name>
                            <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                </function>
                <function id="function_ExpandCode_F6C68BD20B5E0628D82F1BCA296E26BB8F1CCA6C">
                    <name>ExpandCode(ParsingDomain* parsingDomain)</name>
                    <syntax>public void ExpandCode(ParsingDomain* parsingDomain);</syntax>
                    <parameters>
                        <parameter>
                            <name>parsingDomain</name>
                            <type ref="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e"/>
                        </parameter>
                    </parameters>
                </function>
                <function id="function_GetErrorLines_2C67EBA9C2C99C93C28C09944E9C374C6DD40056">
                    <name>GetErrorLines(const uchar* start, const uchar* end, const Span&amp; span)</name>
                    <syntax>public nothrow String&lt;uchar> GetErrorLines(const uchar* start, const uchar* end, const Span&amp; span);</syntax>
                    <parameters>
                        <parameter>
                            <name>start</name>
                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </parameter>
                        <parameter>
                            <name>end</name>
                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </parameter>
                        <parameter>
                            <name>span</name>
                            <type ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                </function>
                <function id="function_GetPrefix_061D51385EE6B68F879657A446ECBFB59D261B26">
                    <name>GetPrefix(const String&lt;uchar>&amp; fullName)</name>
                    <syntax>public nothrow String&lt;uchar> GetPrefix(const String&lt;uchar>&amp; fullName);</syntax>
                    <parameters>
                        <parameter>
                            <name>fullName</name>
                            <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                </function>
                <function id="function_InverseStr_0D10EC6785D4E9B887237021D90D4B62DD2BEC71">
                    <name>InverseStr(bool inverse)</name>
                    <syntax>public nothrow String&lt;uchar> InverseStr(bool inverse);</syntax>
                    <parameters>
                        <parameter>
                            <name>inverse</name>
                            <type ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                </function>
                <function id="function_LineEnd_061F40AA6FB4083204C5096B5D7CB78B9DFA0909">
                    <name>LineEnd(const uchar* end, const uchar* pos)</name>
                    <syntax>public nothrow const uchar* LineEnd(const uchar* end, const uchar* pos);</syntax>
                    <parameters>
                        <parameter>
                            <name>end</name>
                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </parameter>
                        <parameter>
                            <name>pos</name>
                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                </function>
                <function id="function_LineStart_3BC899FBB690117E389CBD52F89ED2D71919409C">
                    <name>LineStart(const uchar* start, const uchar* pos)</name>
                    <syntax>public nothrow const uchar* LineStart(const uchar* start, const uchar* pos);</syntax>
                    <parameters>
                        <parameter>
                            <name>start</name>
                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </parameter>
                        <parameter>
                            <name>pos</name>
                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                </function>
                <function id="function_Link_7048369924ADD3E9F782C85EC8D6DE5C13FACB00">
                    <name>Link(ParsingDomain* parsingDomain)</name>
                    <syntax>public void Link(ParsingDomain* parsingDomain);</syntax>
                    <parameters>
                        <parameter>
                            <name>parsingDomain</name>
                            <type ref="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e"/>
                        </parameter>
                    </parameters>
                </function>
                <function id="function_RegisterParsingDomain_FF50421D81FD3C29CCD99E651EDE434BD728E693">
                    <name>RegisterParsingDomain(ParsingDomain* parsingDomain)</name>
                    <syntax>public void RegisterParsingDomain(ParsingDomain* parsingDomain);</syntax>
                    <parameters>
                        <parameter>
                            <name>parsingDomain</name>
                            <type ref="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e"/>
                        </parameter>
                    </parameters>
                </function>
                <function id="function_ThrowException_4651EE3205B502F6308EAD98AA4EDE5C129DEE3E">
                    <name>ThrowException(const String&lt;char>&amp; message, const Span&amp; span)</name>
                    <syntax>public void ThrowException(const String&lt;char>&amp; message, const Span&amp; span);</syntax>
                    <parameters>
                        <parameter>
                            <name>message</name>
                            <type ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                        </parameter>
                        <parameter>
                            <name>span</name>
                            <type ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                        </parameter>
                    </parameters>
                </function>
                <function id="function_XmlCharStr_7E995B6FF27964D889C4FB987F6356975895C52E">
                    <name>XmlCharStr(uchar c)</name>
                    <syntax>public String&lt;uchar> XmlCharStr(uchar c);</syntax>
                    <parameters>
                        <parameter>
                            <name>c</name>
                            <type ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                </function>
                <function id="function_XmlEscape_9E7152D741743E57926D9E4948944955CDCD595D">
                    <name>XmlEscape(const String&lt;uchar>&amp; s)</name>
                    <syntax>public String&lt;uchar> XmlEscape(const String&lt;uchar>&amp; s);</syntax>
                    <parameters>
                        <parameter>
                            <name>s</name>
                            <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                </function>
                <function id="function_group_op_eq_52A01F8C172271E855010828D2E825F82D67BA88">
                    <name>operator==</name>
                    <overloads>
                        <overload id="function_op_eq_5E6AA4E7BE6B120D6F86893E558375A481F537EF">
                            <name>operator==(const FailureAction&amp; left, const FailureAction&amp; right)</name>
                            <syntax>public bool operator==(const FailureAction&amp; left, const FailureAction&amp; right);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left</name>
                                    <type ref="type.0c837dfa-98ff-47be-8729-b73250667b8d"/>
                                </parameter>
                                <parameter>
                                    <name>right</name>
                                    <type ref="type.0c837dfa-98ff-47be-8729-b73250667b8d"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </overload>
                        <overload id="function_op_eq_7B4D9583A4064703F3E39A049B876C8C28D80611">
                            <name>operator==(const ParsingAction&amp; left, const ParsingAction&amp; right)</name>
                            <syntax>public bool operator==(const ParsingAction&amp; left, const ParsingAction&amp; right);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left</name>
                                    <type ref="type.9af5e6d7-6bd5-466a-be62-54609c65791d"/>
                                </parameter>
                                <parameter>
                                    <name>right</name>
                                    <type ref="type.9af5e6d7-6bd5-466a-be62-54609c65791d"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </overload>
                        <overload id="function_op_eq_6C2881406AA71A8B917AB57130C80643460820BE">
                            <name>operator==(const PostCall&amp; left, const PostCall&amp; right)</name>
                            <syntax>public bool operator==(const PostCall&amp; left, const PostCall&amp; right);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left</name>
                                    <type ref="type.ec7e55e6-94cf-4e5d-b421-b835cb6ef882"/>
                                </parameter>
                                <parameter>
                                    <name>right</name>
                                    <type ref="type.ec7e55e6-94cf-4e5d-b421-b835cb6ef882"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </overload>
                        <overload id="function_op_eq_F40797939D17C143BAB0854F2E01B03C1469DBA0">
                            <name>operator==(const PreCall&amp; left, const PreCall&amp; right)</name>
                            <syntax>public bool operator==(const PreCall&amp; left, const PreCall&amp; right);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left</name>
                                    <type ref="type.d6605f5b-0c6b-4b75-a34d-2fca84dc6416"/>
                                </parameter>
                                <parameter>
                                    <name>right</name>
                                    <type ref="type.d6605f5b-0c6b-4b75-a34d-2fca84dc6416"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </overload>
                    </overloads>
                </function>
            </functions>
            <classDelegates>
                <classDelegate id="e912d177-ad2c-4bb8-a5fe-8065e2ca8f72">
                    <name>FailureAction</name>
                    <syntax>public class delegate void FailureAction(ParsingData* parsingData);</syntax>
                    <parameters>
                        <parameter>
                            <name>parsingData</name>
                            <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                        </parameter>
                    </parameters>
                </classDelegate>
                <classDelegate id="37dc5721-3977-479f-ac14-288ec050ec54">
                    <name>ParsingAction</name>
                    <syntax>public class delegate void ParsingAction(const uchar* matchBegin, const uchar* matchEnd, const Span&amp; span, const String&lt;char>&amp; fileName, ParsingData* parsingData, bool&amp; pass);</syntax>
                    <parameters>
                        <parameter>
                            <name>matchBegin</name>
                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </parameter>
                        <parameter>
                            <name>matchEnd</name>
                            <type ref="type.9070c70d-d234-46bf-baac-581462eefb31"/>
                        </parameter>
                        <parameter>
                            <name>span</name>
                            <type ref="type.062e9748-df59-4692-8baf-2747f21fc97c"/>
                        </parameter>
                        <parameter>
                            <name>fileName</name>
                            <type ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                        </parameter>
                        <parameter>
                            <name>parsingData</name>
                            <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                        </parameter>
                        <parameter>
                            <name>pass</name>
                            <type ref="type.fe36e66f-ce1a-496d-816c-b0bc25e23dfa"/>
                        </parameter>
                    </parameters>
                </classDelegate>
                <classDelegate id="8a8c3416-9875-44c1-989c-a914b658e94b">
                    <name>PostCall</name>
                    <syntax>public class delegate void PostCall(Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData, bool matched);</syntax>
                    <parameters>
                        <parameter>
                            <name>stack</name>
                            <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                        </parameter>
                        <parameter>
                            <name>parsingData</name>
                            <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                        </parameter>
                        <parameter>
                            <name>matched</name>
                            <type ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </parameter>
                    </parameters>
                </classDelegate>
                <classDelegate id="df57030a-b7b4-454f-a0e5-0b81e12f2266">
                    <name>PreCall</name>
                    <syntax>public class delegate void PreCall(Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp; stack, ParsingData* parsingData);</syntax>
                    <parameters>
                        <parameter>
                            <name>stack</name>
                            <type ref="type.a62b6b04-7562-4e17-a04f-7891b15d1f39"/>
                        </parameter>
                        <parameter>
                            <name>parsingData</name>
                            <type ref="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f"/>
                        </parameter>
                    </parameters>
                </classDelegate>
            </classDelegates>
        </namespace>
    </namespaces>
    <types>
        <type id="15807b3c-9faf-41dd-adad-64e533fbc4c6">
            <name>@dlg_type</name>
        </type>
        <type id="18aa616a-58bb-4b24-904e-c303e0690318">
            <name>@dlg_type</name>
        </type>
        <type id="5bc41c1f-106a-4547-9769-5bdffba39e75">
            <name>@dlg_type</name>
        </type>
        <type id="c74adb82-ed20-4a51-af6d-681e8731c206">
            <name>@dlg_type</name>
        </type>
        <type id="">
            <name>@objectDelegatePairType</name>
        </type>
        <type id="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A">
            <name>ActionParser</name>
        </type>
        <type derived="true" id="type.4d8ee09e-63b4-4583-ae4f-7f0a7de2b770">
            <name>ActionParser&amp;</name>
            <content>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3bcd23cc-75a6-42a6-9c58-eca7f3c363c8">
            <name>ActionParser*</name>
            <content>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.aad1e39a-890d-4605-bcc6-71eec59a881d">
            <name>ActionParser*&amp;</name>
            <content>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dc6d717a-2350-4f16-9778-ff2f468345ec">
            <name>ActionParser*&amp;&amp;</name>
            <content>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee89728f-a074-4f08-9873-435ca7aef1eb">
            <name>ActionParser**</name>
            <content>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4339b2f6-af7e-4caa-8396-78a2e94cb973">
            <name>ActionParser**&amp;</name>
            <content>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.643820fc-1abb-4541-84d1-acd45c0b3d9a">
            <name>ActionParser**&amp;&amp;</name>
            <content>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.94534826-510b-4901-bab6-c4be6cb77e5a">
            <name>ActionParser***</name>
            <content>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3e4a8ec8-a764-4469-a902-74a40d7813fb">
            <name>AddressOf&amp;&amp;</name>
            <content>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_AlphabeticParser_45DD8543651C76160EC9B3B2107BA2BF503D7E2F">
            <name>AlphabeticParser</name>
        </type>
        <type derived="true" id="type.0a0e061f-e44e-45d1-8bb6-7bf4e4b9d359">
            <name>AlphabeticParser&amp;</name>
            <content>
                <baseType ref="class_AlphabeticParser_45DD8543651C76160EC9B3B2107BA2BF503D7E2F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7d2e28b3-a68e-43ef-9e73-5d32c403d05e">
            <name>AlphabeticParser*</name>
            <content>
                <baseType ref="class_AlphabeticParser_45DD8543651C76160EC9B3B2107BA2BF503D7E2F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AlternativeParser_8DD9857AEB00E695967B3B1B3B8C707141C6AD93">
            <name>AlternativeParser</name>
        </type>
        <type derived="true" id="type.1035d0ff-2e62-47ad-810a-7db3f862c75d">
            <name>AlternativeParser&amp;</name>
            <content>
                <baseType ref="class_AlternativeParser_8DD9857AEB00E695967B3B1B3B8C707141C6AD93"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3d5f177b-d7ed-414a-8056-797a9ce9127b">
            <name>AlternativeParser*</name>
            <content>
                <baseType ref="class_AlternativeParser_8DD9857AEB00E695967B3B1B3B8C707141C6AD93"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AnyCharParser_D8CBAF47F831F823FE8E427A422286DAB5951B4B">
            <name>AnyCharParser</name>
        </type>
        <type derived="true" id="type.b5886a50-0b6f-4dee-86c2-b8795e44e8ab">
            <name>AnyCharParser&amp;</name>
            <content>
                <baseType ref="class_AnyCharParser_D8CBAF47F831F823FE8E427A422286DAB5951B4B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4ab820c3-b83a-419e-8b33-1e188b52d333">
            <name>AnyCharParser*</name>
            <content>
                <baseType ref="class_AnyCharParser_D8CBAF47F831F823FE8E427A422286DAB5951B4B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ArgumentCollector_8DB5AA794D02FF745237C5821824D8F36A738051">
            <name>ArgumentCollector</name>
        </type>
        <type derived="true" id="type.7dfff391-1543-432a-8401-128bfdd89135">
            <name>ArgumentCollector&amp;</name>
            <content>
                <baseType ref="class_ArgumentCollector_8DB5AA794D02FF745237C5821824D8F36A738051"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6859c981-d945-42b0-b6af-34df94f77ac4">
            <name>ArgumentCollector*</name>
            <content>
                <baseType ref="class_ArgumentCollector_8DB5AA794D02FF745237C5821824D8F36A738051"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a2797fe9-9a97-4b20-b49c-ed194c96318a">
            <name>AssertStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353">
            <name>AttrOrVar</name>
        </type>
        <type derived="true" id="type.63a88dc6-508a-467e-a8a9-22de27a8d020">
            <name>AttrOrVar&amp;</name>
            <content>
                <baseType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dfdd2d97-b3f2-4353-b8af-10f0f4864cfd">
            <name>AttrOrVar&amp;&amp;</name>
            <content>
                <baseType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.54190d53-ec69-4fae-bc02-55615907cb08">
            <name>AttrOrVar*</name>
            <content>
                <baseType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fdf3d76f-1b30-4a2f-8db6-202e37a4a6fa">
            <name>AttrOrVar*&amp;</name>
            <content>
                <baseType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.78338ba2-e46c-42d1-8f33-761074cbca9a">
            <name>AttrOrVar*&amp;&amp;</name>
            <content>
                <baseType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b5490ae4-44b9-4153-89e0-22a295c19a21">
            <name>AttrOrVar**</name>
            <content>
                <baseType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A" specialization="true">
            <name>BackInsertIterator&lt;C></name>
            <content>
                <primaryType ref="class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <argumentType ref="276c8c8f-bdb3-4278-b7c7-7bb19af1e7d6"/>
            </content>
        </type>
        <type derived="true" id="type.92709197-7222-4811-b6d0-5a71fef3a307">
            <name>BackInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fcbb4bd1-67c4-44c8-adf2-6ffbbe2df0a7">
            <name>BackInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD" specialization="true">
            <name>BackInsertProxy&lt;C></name>
            <content>
                <primaryType ref="class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <argumentType ref="0b483091-b02c-4d65-a743-ae37f2af0801"/>
            </content>
        </type>
        <type derived="true" id="type.5d4f52a4-5182-4299-9915-62d655721f14">
            <name>BackInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.de757266-dedc-4fc6-a0d3-561167381d62">
            <name>BackInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.99ddb983-b834-4db2-975d-07822ff7e29d">
            <name>BackInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_BaseCharParser_F1DEF3A63C197D74465AC1D960F197C940D83E2E">
            <name>BaseCharParser</name>
        </type>
        <type derived="true" id="type.5d7aefd9-c7cb-44ed-804f-eb29147b599b">
            <name>BaseCharParser&amp;</name>
            <content>
                <baseType ref="class_BaseCharParser_F1DEF3A63C197D74465AC1D960F197C940D83E2E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.aac5e562-da89-4654-a1eb-d8983005bfbe">
            <name>BaseCharParser*</name>
            <content>
                <baseType ref="class_BaseCharParser_F1DEF3A63C197D74465AC1D960F197C940D83E2E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.6a9247ed-9cec-4a01-ada8-532406fce8a9" specialization="true">
            <name>BinaryFun&lt;Grammar*, Grammar*, bool></name>
            <content>
                <primaryType ref="class_BinaryFun_Argument1_Argument2_Result_958A7BAC6F2E3E4BFF4471012FF390F88F6A37D2"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type derived="true" id="type.2191db85-ab65-409d-bd80-8da4eaf71ac3">
            <name>BinaryFun&lt;Grammar*, Grammar*, bool>&amp;</name>
            <content>
                <baseType ref="type.6a9247ed-9cec-4a01-ada8-532406fce8a9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.36c90b2f-ec76-4f35-94a1-9136e60061b3">
            <name>BinaryFun&lt;Grammar*, Grammar*, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.6a9247ed-9cec-4a01-ada8-532406fce8a9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1530aeb3-c42a-4adb-aa78-d2bc75aae1b8">
            <name>BinaryFun&lt;Grammar*, Grammar*, bool>*</name>
            <content>
                <baseType ref="type.6a9247ed-9cec-4a01-ada8-532406fce8a9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.de338b55-a080-41cf-91d6-c6eca9f520cf" specialization="true">
            <name>BinaryFun&lt;String&lt;uchar>, String&lt;uchar>, bool></name>
            <content>
                <primaryType ref="class_BinaryFun_Argument1_Argument2_Result_958A7BAC6F2E3E4BFF4471012FF390F88F6A37D2"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type derived="true" id="type.fbde6254-7a62-4a59-aa42-dd84bcd329c0">
            <name>BinaryFun&lt;String&lt;uchar>, String&lt;uchar>, bool>&amp;</name>
            <content>
                <baseType ref="type.de338b55-a080-41cf-91d6-c6eca9f520cf"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.14be30a0-04f9-4ce6-9617-03c57f971398">
            <name>BinaryFun&lt;String&lt;uchar>, String&lt;uchar>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.de338b55-a080-41cf-91d6-c6eca9f520cf"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bd10eac9-6617-415b-b504-96fcd824025b">
            <name>BinaryFun&lt;String&lt;uchar>, String&lt;uchar>, bool>*</name>
            <content>
                <baseType ref="type.de338b55-a080-41cf-91d6-c6eca9f520cf"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA">
            <name>BinaryParser</name>
        </type>
        <type derived="true" id="type.1a86b2a5-f542-485f-a243-9c64823c5278">
            <name>BinaryParser&amp;</name>
            <content>
                <baseType ref="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6f1b6fbd-ca2f-4f23-8a78-e4185d804263">
            <name>BinaryParser*</name>
            <content>
                <baseType ref="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9d22e1ef-360e-4e23-971d-4b2ee770339d" specialization="true">
            <name>BinaryPred&lt;Grammar*, Grammar*></name>
            <content>
                <primaryType ref="class_BinaryPred_Argument1_Argument2_58670947C9368A3B9CA2822A418C109ED49379F7"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
            </content>
        </type>
        <type derived="true" id="type.1607b5aa-ef39-4e05-b735-0d19997fc261">
            <name>BinaryPred&lt;Grammar*, Grammar*>&amp;</name>
            <content>
                <baseType ref="type.9d22e1ef-360e-4e23-971d-4b2ee770339d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b9e8a1a0-2aad-49f3-831d-ec3ec1c1e83e">
            <name>BinaryPred&lt;Grammar*, Grammar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9d22e1ef-360e-4e23-971d-4b2ee770339d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4a9ff129-4467-4fe3-87eb-8731c14d53ac">
            <name>BinaryPred&lt;Grammar*, Grammar*>*</name>
            <content>
                <baseType ref="type.9d22e1ef-360e-4e23-971d-4b2ee770339d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.22285d60-fedb-409a-b500-f48d2bec1fa0" specialization="true">
            <name>BinaryPred&lt;String&lt;uchar>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_BinaryPred_Argument1_Argument2_58670947C9368A3B9CA2822A418C109ED49379F7"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.4dc1dd75-69d1-429f-aafc-5a6650982aaf">
            <name>BinaryPred&lt;String&lt;uchar>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.22285d60-fedb-409a-b500-f48d2bec1fa0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.24084f57-11c2-4037-8b8c-75ef7e20009d">
            <name>BinaryPred&lt;String&lt;uchar>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.22285d60-fedb-409a-b500-f48d2bec1fa0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0e4452ee-50bf-4d58-b55f-533f5f01d2dc">
            <name>BinaryPred&lt;String&lt;uchar>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.22285d60-fedb-409a-b500-f48d2bec1fa0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.598e9156-9ea0-4a67-a250-efba8958c51c" specialization="true">
            <name>Bucket&lt;Grammar*></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
            </content>
        </type>
        <type derived="true" id="type.34da7c41-26eb-44d0-a085-9e52967533f0">
            <name>Bucket&lt;Grammar*>&amp;</name>
            <content>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ad3791c4-acdc-4e18-803c-87e46b8ad15d">
            <name>Bucket&lt;Grammar*>*</name>
            <content>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9bfbd839-11cf-4cb0-8d8d-e16b2bbfe313">
            <name>Bucket&lt;Grammar*>*&amp;</name>
            <content>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2a13cbb2-1769-48c0-b1b3-10d5e433a4b4">
            <name>Bucket&lt;Grammar*>*&amp;&amp;</name>
            <content>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5890f76c-2ee4-44dc-81be-f2a995620199">
            <name>Bucket&lt;Grammar*>**</name>
            <content>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9827e5d6-43fc-46c1-a4ab-d24bd301580d">
            <name>Bucket&lt;Grammar*>**&amp;</name>
            <content>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1126c794-6b45-4ad5-bd20-772d6d7eb098">
            <name>Bucket&lt;Grammar*>**&amp;&amp;</name>
            <content>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.02f7bbeb-14b5-4b5f-8290-f443a7544aad">
            <name>Bucket&lt;Grammar*>***</name>
            <content>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9b58d269-828c-427c-9e25-0b6c5b1cae28" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.b0a4ac59-bed1-4060-ba02-722484edebc8">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9b58d269-828c-427c-9e25-0b6c5b1cae28"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.08e2d2be-02ff-43db-b01b-e1164e742fb8" specialization="true">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
            </content>
        </type>
        <type derived="true" id="type.cd8a88c7-1234-4b45-ae33-0dece466ee87">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>&amp;</name>
            <content>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0408eee1-4ffd-4030-9105-070a3bdcea4c">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*</name>
            <content>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1be5a88d-28e7-4721-bc3e-d603099874df">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;</name>
            <content>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.362bf295-71c3-46be-9713-aeb863499c4d">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.194d48e3-7bcd-44b9-8511-71376ade2e81">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**</name>
            <content>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11fb4c14-a09f-4b97-9ac9-5f0d0d994289">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**&amp;</name>
            <content>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7e88c6a2-4010-4a72-8df2-f9130efee751">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**&amp;&amp;</name>
            <content>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1ecf4d6f-8584-44e3-945d-15bad1d67175">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>***</name>
            <content>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64" specialization="true">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
            </content>
        </type>
        <type derived="true" id="type.fd04675b-3b05-4eef-85e1-9edbb42feb85">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>&amp;</name>
            <content>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.84177fdb-e78e-4297-ac3a-2d7d78bb7587">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*</name>
            <content>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6ce4b8c9-1c45-490c-b874-6efdf02ee22b">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;</name>
            <content>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ad3c8e37-af16-4b22-86c5-65947e1a84f2">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.33cd64d6-5604-4513-8db4-9007b9b15f72">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**</name>
            <content>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.50f46d70-37d6-4c0f-9b1f-fa7acf7205cd">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**&amp;</name>
            <content>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3dd7705a-4f4a-4b88-8fcb-7b8af01fcaf7">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**&amp;&amp;</name>
            <content>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f7b58f56-79bb-4934-bb05-6ef72d8c6414">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>***</name>
            <content>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.c5bbec5b-4509-4f43-92ed-f968978bf157" specialization="true">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
            </content>
        </type>
        <type derived="true" id="type.0597ffc0-40f9-428e-a348-17214d94c077">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>&amp;</name>
            <content>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.65e62c64-c738-4bcc-9c37-8210ac980fa2">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*</name>
            <content>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2d3b253d-2dc2-4e92-b407-35611af5abe5">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;</name>
            <content>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8c73181e-c414-4073-b578-32b94ec1c3a2">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ac2089ae-355f-454b-9c86-44cbb7590360">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**</name>
            <content>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ff3fe1b4-5d52-4306-9d61-5405e7a49780">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**&amp;</name>
            <content>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.71549817-ef4b-4c1e-9fe5-5a47ecf4cd1d">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**&amp;&amp;</name>
            <content>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ca86e129-3559-4508-b0e8-520113655f61">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>***</name>
            <content>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb" specialization="true">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
            </content>
        </type>
        <type derived="true" id="type.68064289-fe9a-45b0-8649-d244957e5879">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.326cb0c9-25c5-44e5-b91c-1f1bc0708f3d">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.68ae8581-35f9-4ad9-a8ff-dcdcec9d1e5c">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.135956b9-539b-4282-b0f5-a6bdf95b7542">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.983701e4-3fc9-4bf9-88c7-bd11b3eb597f">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5148ea3e-8d5e-463e-b7cd-264a77b9b2b0">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**&amp;</name>
            <content>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f90d4f02-87d1-4199-a7a7-ffce16e109dd">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**&amp;&amp;</name>
            <content>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.db26d52d-734b-4c44-b175-788388d57429">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>***</name>
            <content>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.7566c226-6cb7-43a9-aa2e-1823ec686d29" specialization="true">
            <name>Bucket&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.a7375f38-8ca5-45c4-ad99-d45287765abf">
            <name>Bucket&lt;String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.39145495-6b14-4573-8a83-4ecd78f0caff">
            <name>Bucket&lt;String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.27b1ce5c-33c2-40a9-9aac-55f3600efbae">
            <name>Bucket&lt;String&lt;uchar>>*&amp;</name>
            <content>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.967fde24-152a-49c5-9af3-7ad45f1c8db9">
            <name>Bucket&lt;String&lt;uchar>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b8a69733-d5df-48d3-ac95-4cf02d188201">
            <name>Bucket&lt;String&lt;uchar>>**</name>
            <content>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bff35b49-07df-4fc3-aebb-fd7d41cd61bc">
            <name>Bucket&lt;String&lt;uchar>>**&amp;</name>
            <content>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9d60e352-33dc-4b0c-8887-9b7ffef8653f">
            <name>Bucket&lt;String&lt;uchar>>**&amp;&amp;</name>
            <content>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a12d2e0f-25cd-4eff-81aa-2a0256473972">
            <name>Bucket&lt;String&lt;uchar>>***</name>
            <content>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9" specialization="true">
            <name>Bucket&lt;T></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="59a666a4-caab-49c0-96b5-4c967d4999f2"/>
            </content>
        </type>
        <type derived="true" id="type.71704670-c7db-43a3-8fbc-5c231938fd82">
            <name>Bucket&lt;T>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE" specialization="true">
            <name>Bucket&lt;ValueType></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="8e5332b6-c054-4eb4-934f-5d11acbfb871"/>
            </content>
        </type>
        <type derived="true" id="type.fae43f10-913c-4c06-9304-78e2a519e5e4">
            <name>Bucket&lt;ValueType>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_CasedLetterParser_6C4CB1503DDB17FE7152408AFFEB79501A61B243">
            <name>CasedLetterParser</name>
        </type>
        <type derived="true" id="type.97177733-b1cf-487b-996f-0c819859aa3e">
            <name>CasedLetterParser&amp;</name>
            <content>
                <baseType ref="class_CasedLetterParser_6C4CB1503DDB17FE7152408AFFEB79501A61B243"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d64f29f0-214a-49d7-8c72-0c2260a3e527">
            <name>CasedLetterParser*</name>
            <content>
                <baseType ref="class_CasedLetterParser_6C4CB1503DDB17FE7152408AFFEB79501A61B243"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA">
            <name>CharParser</name>
        </type>
        <type derived="true" id="type.56b28854-0a9c-44ba-a917-df1e782fe66f">
            <name>CharParser&amp;</name>
            <content>
                <baseType ref="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9057126e-b4fa-479b-93ec-d24986e21424">
            <name>CharParser&amp;&amp;</name>
            <content>
                <baseType ref="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.330264b6-7c52-4a76-8334-dbc03d62e52c">
            <name>CharParser*</name>
            <content>
                <baseType ref="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC">
            <name>CharRange</name>
        </type>
        <type derived="true" id="type.3a94c86b-1dff-490f-bf80-7658f6286460">
            <name>CharRange&amp;</name>
            <content>
                <baseType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a799acb4-a83d-46fd-9d42-a20ee2b0f28d">
            <name>CharRange&amp;&amp;</name>
            <content>
                <baseType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ae93d3c2-1f9b-4c16-a8fb-2126d42ff6f4">
            <name>CharRange*</name>
            <content>
                <baseType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c9fe58a4-129f-42b7-9b78-56aab8beb0f2">
            <name>CharRange*&amp;</name>
            <content>
                <baseType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cb4c057e-002b-49b5-b8fd-245132ec520a">
            <name>CharRange**</name>
            <content>
                <baseType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CharSetParser_1549A5D12A015735356B2B65DB64C4AF85157B9A">
            <name>CharSetParser</name>
        </type>
        <type derived="true" id="type.e7883257-fb0c-4cec-826f-77ebe48cdfcd">
            <name>CharSetParser&amp;</name>
            <content>
                <baseType ref="class_CharSetParser_1549A5D12A015735356B2B65DB64C4AF85157B9A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8e477fcf-bbbc-46db-8810-491e27350f83">
            <name>CharSetParser&amp;&amp;</name>
            <content>
                <baseType ref="class_CharSetParser_1549A5D12A015735356B2B65DB64C4AF85157B9A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.97a052c1-cc02-4ce2-a5b9-5e01c7c09ed2">
            <name>CharSetParser*</name>
            <content>
                <baseType ref="class_CharSetParser_1549A5D12A015735356B2B65DB64C4AF85157B9A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ClosePunctuationParser_EEBF21313A80F897CA549B02A6216FE79BF4E902">
            <name>ClosePunctuationParser</name>
        </type>
        <type derived="true" id="type.055f6ad5-a585-4065-ab84-df1e0d315aab">
            <name>ClosePunctuationParser&amp;</name>
            <content>
                <baseType ref="class_ClosePunctuationParser_EEBF21313A80F897CA549B02A6216FE79BF4E902"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ab50b7f1-f4bd-46c8-8dfb-8e0c2b9ce4ea">
            <name>ClosePunctuationParser*</name>
            <content>
                <baseType ref="class_ClosePunctuationParser_EEBF21313A80F897CA549B02A6216FE79BF4E902"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53">
            <name>CodeExpandingVisitor</name>
        </type>
        <type derived="true" id="type.1bc1e2e6-c03b-4bbb-b065-22e9adfe1c95">
            <name>CodeExpandingVisitor&amp;</name>
            <content>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.571a0c3e-7747-4602-bee8-52898a3ea768">
            <name>CodeExpandingVisitor&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a9962fa5-8f2d-4ccd-af45-51845eddecb4">
            <name>CodeExpandingVisitor*</name>
            <content>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b33e99df-11d1-4638-92c1-d40b4fa3f7cd">
            <name>CodeExpandingVisitor*&amp;</name>
            <content>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.45829921-979e-47c0-809f-6c52ad2be6ca">
            <name>CodeExpandingVisitor**</name>
            <content>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f438b00a-1f69-4963-90e0-6f599acdf3fe">
            <name>CodeFormatter&amp;</name>
            <content>
                <baseType ref="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.847f640e-e9f7-40f7-81d7-3fb259ed22c5">
            <name>CodeFormatter&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0702159f-4cb7-458b-b15c-1f1be8dc7112">
            <name>Complement&amp;&amp;</name>
            <content>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d53c30ca-37b0-4587-b55f-b33a0e050707">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.093a7c58-92a2-4faf-986e-eb4d929d22bd">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.951fbd71-229f-4f08-b389-da23c51e5530">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.36ef9524-152b-4d56-a223-9deda1c9d47a">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8db5275f-dccb-452a-9f68-85c1e440a669">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ConnectorPunctuationParser_2C109CCB1929B5A7DF6B45B53976529B0BBE333B">
            <name>ConnectorPunctuationParser</name>
        </type>
        <type derived="true" id="type.3b871b3a-2fbe-4834-a075-c0ebf4e130e0">
            <name>ConnectorPunctuationParser&amp;</name>
            <content>
                <baseType ref="class_ConnectorPunctuationParser_2C109CCB1929B5A7DF6B45B53976529B0BBE333B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.52d95235-33c0-4345-b0f5-189c33d5c35b">
            <name>ConnectorPunctuationParser*</name>
            <content>
                <baseType ref="class_ConnectorPunctuationParser_2C109CCB1929B5A7DF6B45B53976529B0BBE333B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.32ae169e-4450-4d24-9f21-63c440403269">
            <name>Console&amp;</name>
            <content>
                <baseType ref="class_Console_41891B146EC51CAB04451732257B28BD18CAE52B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.64c959b3-7e39-4da3-b7ae-d052f50fe83e">
            <name>Console*</name>
            <content>
                <baseType ref="class_Console_41891B146EC51CAB04451732257B28BD18CAE52B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0e1d3be3-3e16-4fa6-9579-bc4984eed987">
            <name>Const&amp;&amp;</name>
            <content>
                <baseType ref="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b2a61c6e-07d9-4bed-9084-9b536ab9b743">
            <name>Construct&amp;&amp;</name>
            <content>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_Context_B042BE4BB589CF038B308F8A0003757C287052B1">
            <name>Context</name>
        </type>
        <type id="class_Context_76E806ADA2843FDD75319B1BCBD6D329D8E07510">
            <name>Context</name>
        </type>
        <type id="class_Context_82786F341A2A2D903014844D45B9FA98CCD36994">
            <name>Context</name>
        </type>
        <type id="class_Context_980A770826B0D84832D576F0A98A53C7F561AD34">
            <name>Context</name>
        </type>
        <type id="class_Context_5D0D42188F71D20ECF040EAC6CA0C0F0DADFD87A">
            <name>Context</name>
        </type>
        <type id="class_Context_2AA850BA72AE658B4D36906F8C2E2AF3F0D4C293">
            <name>Context</name>
        </type>
        <type id="class_Context_418248BD78CB44D4E18AB434C473F2F1E471649A">
            <name>Context</name>
        </type>
        <type id="class_Context_38F312432FE03D76DCBF29B0F672EAB8CC22C002">
            <name>Context</name>
        </type>
        <type id="class_Context_9A0F2200F51BF8AA550323C4F2EDF991155908BD">
            <name>Context</name>
        </type>
        <type id="class_Context_EC7F146CE01EB601A40BC87EAACE69AF8938A1FE">
            <name>Context</name>
        </type>
        <type id="class_Context_040573959767ECDC8F1941BD825CEA007DDD9496">
            <name>Context</name>
        </type>
        <type id="class_Context_9A5CFEB43F650C44EB0839CC2527BA254CA5FA5C">
            <name>Context</name>
        </type>
        <type id="class_Context_F7CC9ECB8BFD015E976EDFDCA010DD2E7E66BB4F">
            <name>Context</name>
        </type>
        <type id="class_Context_5AEFF056096C9DB4DD9A789139375764C6AC9C87">
            <name>Context</name>
        </type>
        <type id="class_Context_08F70E9272E44DE52B20EA9152A0FBD4A81E74F7">
            <name>Context</name>
        </type>
        <type id="class_Context_02ABE7999CC9A1172B3261949625EFD3F3C7F3E3">
            <name>Context</name>
        </type>
        <type id="class_Context_6A39AD94127F969F1D23CF740EFDD5A7FAD738D2">
            <name>Context</name>
        </type>
        <type id="class_Context_3664830904D570FF377F49DFE01B45C3A25DD87A">
            <name>Context</name>
        </type>
        <type id="class_Context_ECD3B130A0619EB35F7B454B93B42925757F7DE7">
            <name>Context</name>
        </type>
        <type id="class_Context_9A0D3F77D56B57DCEF83D26ED2A2727D23AFA119">
            <name>Context</name>
        </type>
        <type id="class_Context_BB7B12E9650F4C0FAEF6553E3BFD0F48BEA6B816">
            <name>Context</name>
        </type>
        <type id="class_Context_855FECD8147E889D8EE4657F7D5146484A6B40E0">
            <name>Context</name>
        </type>
        <type id="class_Context_ADBA85E2E02F7E7231A06C4B17A8011D75FC0E2D">
            <name>Context</name>
        </type>
        <type id="class_Context_575D937C7970C0F8BB113EC2D2DEA09DDCC074B3">
            <name>Context</name>
        </type>
        <type id="class_Context_93EF22174A06FB61DDC9665AA75FDE0524FD6E3F">
            <name>Context</name>
        </type>
        <type id="class_Context_0BB11C4741B5F63EFCA1A19C7ACBB749E43CC2E2">
            <name>Context</name>
        </type>
        <type derived="true" id="type.efc58580-26a8-4d69-b3fa-164314de0408">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_02ABE7999CC9A1172B3261949625EFD3F3C7F3E3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ec379649-145e-4c8c-92c1-f92cc1f6ea59">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_2AA850BA72AE658B4D36906F8C2E2AF3F0D4C293"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3db1bc9c-ad13-40ba-a128-1a8f42006d81">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_F7CC9ECB8BFD015E976EDFDCA010DD2E7E66BB4F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f2d66669-0039-4ced-8f66-379dbc18254b">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_6A39AD94127F969F1D23CF740EFDD5A7FAD738D2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.627b204c-079a-4e52-819c-0441847e9754">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_9A5CFEB43F650C44EB0839CC2527BA254CA5FA5C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6f4a771d-6659-44d2-a264-a25c080da83c">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_BB7B12E9650F4C0FAEF6553E3BFD0F48BEA6B816"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2816d298-66f2-47d3-9483-f3268ede7eb2">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_76E806ADA2843FDD75319B1BCBD6D329D8E07510"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.03caf16f-d4f9-46f0-918a-925035afb987">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_ECD3B130A0619EB35F7B454B93B42925757F7DE7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6c3b40ec-7e48-47d6-a016-8a93fac1e63c">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_0BB11C4741B5F63EFCA1A19C7ACBB749E43CC2E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d6570f08-5ef5-46d0-8a0f-2afd56db169b">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_575D937C7970C0F8BB113EC2D2DEA09DDCC074B3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d2c71493-b58e-4869-af58-bc8d65354976">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_3664830904D570FF377F49DFE01B45C3A25DD87A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7ca5a49b-22ec-40a9-a8bf-fa5a971e6fa3">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_93EF22174A06FB61DDC9665AA75FDE0524FD6E3F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5729a76d-3250-4f5d-8150-63f02d669138">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_418248BD78CB44D4E18AB434C473F2F1E471649A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.42664cd0-695a-42c5-bd25-0c541d45d80a">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_EC7F146CE01EB601A40BC87EAACE69AF8938A1FE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cf88fac3-c787-4aa8-bd3d-3ec843f63959">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_9A0F2200F51BF8AA550323C4F2EDF991155908BD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5729a76d-3250-4f5d-8150-63f02d669138">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_418248BD78CB44D4E18AB434C473F2F1E471649A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e767f40e-d41e-4d73-8015-8e53d0e2ce4f">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_B042BE4BB589CF038B308F8A0003757C287052B1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eb41727f-6eac-4f9a-a63c-a3acef0c3d0a">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_38F312432FE03D76DCBF29B0F672EAB8CC22C002"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6965c87e-e157-4275-ad67-0a160c9bc04f">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_9A0D3F77D56B57DCEF83D26ED2A2727D23AFA119"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b40888c3-b33f-4fc3-b877-15c6bdd0ba68">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_040573959767ECDC8F1941BD825CEA007DDD9496"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ecd48c25-4a6e-4fd0-9f78-9470d8c3328b">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_980A770826B0D84832D576F0A98A53C7F561AD34"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fe5f8c43-9ef6-4eab-b97a-18597f4dc303">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_08F70E9272E44DE52B20EA9152A0FBD4A81E74F7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2910d3f4-9ce6-4bf8-a3dd-25a30e7e2247">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_5D0D42188F71D20ECF040EAC6CA0C0F0DADFD87A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0fb00a5d-006e-4173-8c4c-49685413d38d">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_855FECD8147E889D8EE4657F7D5146484A6B40E0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.585f8a13-da20-4501-b8dd-9d4e0e0e36d3">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_5AEFF056096C9DB4DD9A789139375764C6AC9C87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9309bdcb-d393-42c4-8720-c72a1d9fe11b">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_ADBA85E2E02F7E7231A06C4B17A8011D75FC0E2D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9141b79e-d665-4a52-a4a5-db89065ff31c">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_82786F341A2A2D903014844D45B9FA98CCD36994"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4e6025f9-fa30-4970-ac11-cda1ac62fca0">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_2AA850BA72AE658B4D36906F8C2E2AF3F0D4C293"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.68656b58-1c72-4e37-a95b-83bb0f96573b">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_9A0F2200F51BF8AA550323C4F2EDF991155908BD"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e99d9397-571c-4cd9-b23d-a793a8a95f5a">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_418248BD78CB44D4E18AB434C473F2F1E471649A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7b8ea0ca-e342-4719-9720-3aa80b994e56">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_855FECD8147E889D8EE4657F7D5146484A6B40E0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e1217330-822e-449e-97b6-e58492f6a45c">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_ECD3B130A0619EB35F7B454B93B42925757F7DE7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d378e8b0-6a81-4e60-b364-a96568b1cbed">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_5D0D42188F71D20ECF040EAC6CA0C0F0DADFD87A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c75c792e-521c-480c-a9f9-da5e237aa2d7">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_02ABE7999CC9A1172B3261949625EFD3F3C7F3E3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5689f460-9b52-4359-a448-4e9e428bacd3">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_6A39AD94127F969F1D23CF740EFDD5A7FAD738D2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d37f0d74-9540-4f36-8e82-7908229cd2be">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_9A5CFEB43F650C44EB0839CC2527BA254CA5FA5C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ec92e679-84fb-4956-9bc3-e6900efabba5">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_575D937C7970C0F8BB113EC2D2DEA09DDCC074B3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f5f015f7-62bb-428a-9e2c-bbca1fcb1001">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_EC7F146CE01EB601A40BC87EAACE69AF8938A1FE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2ba1c28a-ffec-435f-8fbf-7fcf23afed1b">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_93EF22174A06FB61DDC9665AA75FDE0524FD6E3F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.80c4c721-2cd2-426a-ac21-4c5d4f6c2270">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_9A0D3F77D56B57DCEF83D26ED2A2727D23AFA119"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.17920c4a-a092-4d71-803d-72dce9d94192">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_38F312432FE03D76DCBF29B0F672EAB8CC22C002"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.abdf3bce-0c9b-49c5-8285-c0707671db44">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_5AEFF056096C9DB4DD9A789139375764C6AC9C87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5f05a9af-de9e-4fb7-82ac-44c6feb97425">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_F7CC9ECB8BFD015E976EDFDCA010DD2E7E66BB4F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a4b812fd-78c5-4dc1-8b5b-747a6e411d07">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_BB7B12E9650F4C0FAEF6553E3BFD0F48BEA6B816"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.084b54f1-a1fd-447a-8f1d-6fd52cc55909">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_08F70E9272E44DE52B20EA9152A0FBD4A81E74F7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ed4ced4d-4a85-469d-aac1-4512bc6d4ebe">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_B042BE4BB589CF038B308F8A0003757C287052B1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90967545-6780-4784-a819-c0add3118191">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_76E806ADA2843FDD75319B1BCBD6D329D8E07510"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4e6025f9-fa30-4970-ac11-cda1ac62fca0">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_2AA850BA72AE658B4D36906F8C2E2AF3F0D4C293"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a78d3871-b46f-407d-9182-7d4830e33913">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_040573959767ECDC8F1941BD825CEA007DDD9496"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eb1dd6f8-87e9-4392-bceb-fe69da474dc1">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_82786F341A2A2D903014844D45B9FA98CCD36994"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9d452180-ceec-49a1-be5a-5a5bb9d8448f">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_3664830904D570FF377F49DFE01B45C3A25DD87A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eefe0e10-c68d-4ce4-b13a-aa80ce7c47b8">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_ADBA85E2E02F7E7231A06C4B17A8011D75FC0E2D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e45c75d0-a048-4493-9eca-42dc9a32648f">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_980A770826B0D84832D576F0A98A53C7F561AD34"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.615cb778-1d6e-4ffb-a69e-ea9a955fd769">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_0BB11C4741B5F63EFCA1A19C7ACBB749E43CC2E2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7fee2835-bbd5-45ae-be6b-3cca286f5b24">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_6A39AD94127F969F1D23CF740EFDD5A7FAD738D2"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.64c88d0d-5d46-4cb4-bbc1-cacbc76dabd0">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_BB7B12E9650F4C0FAEF6553E3BFD0F48BEA6B816"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.feb216d2-301b-448f-a87f-94268090ad2a">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_2AA850BA72AE658B4D36906F8C2E2AF3F0D4C293"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3e8f61e8-3d83-4a49-9b83-6d7c5f39cd08">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_EC7F146CE01EB601A40BC87EAACE69AF8938A1FE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8b197665-d9e6-4f19-9e7e-eaf982fcaf84">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_040573959767ECDC8F1941BD825CEA007DDD9496"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4b716ab3-84c1-4735-a76a-82e48901f34e">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_9A0F2200F51BF8AA550323C4F2EDF991155908BD"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8eb3c263-4434-4636-b475-7d640d87fdab">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_38F312432FE03D76DCBF29B0F672EAB8CC22C002"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d5d4ad92-258e-4311-a944-910600e350ae">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_9A0D3F77D56B57DCEF83D26ED2A2727D23AFA119"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.543b239e-7e37-4caf-af8b-881e599b9811">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_9A5CFEB43F650C44EB0839CC2527BA254CA5FA5C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0a1e4197-06ad-4b4d-bb73-3631b706c60c">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_418248BD78CB44D4E18AB434C473F2F1E471649A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.291a74a3-acea-48c6-988f-f8c673cf41eb">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_08F70E9272E44DE52B20EA9152A0FBD4A81E74F7"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4afefadb-0c73-45c7-8138-f79d1c7e833f">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_3664830904D570FF377F49DFE01B45C3A25DD87A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.44891e5d-0f90-41ee-9012-d135a30dc026">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_ADBA85E2E02F7E7231A06C4B17A8011D75FC0E2D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f4ac9e47-bd48-4eec-a8b8-014e58112bca">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_B042BE4BB589CF038B308F8A0003757C287052B1"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.62f3a526-4e16-4690-b95b-12b30a84a33a">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_5AEFF056096C9DB4DD9A789139375764C6AC9C87"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.431b490d-5f47-4194-b155-0eea84452ee6">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_575D937C7970C0F8BB113EC2D2DEA09DDCC074B3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee12f690-fd92-490c-8139-87c1ed7de117">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_980A770826B0D84832D576F0A98A53C7F561AD34"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1cc8a33d-0963-40db-821b-3fef2adf62b9">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_0BB11C4741B5F63EFCA1A19C7ACBB749E43CC2E2"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.362eec50-0d90-4238-b830-1fb0bc149942">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_5D0D42188F71D20ECF040EAC6CA0C0F0DADFD87A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1cc8a33d-0963-40db-821b-3fef2adf62b9">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_0BB11C4741B5F63EFCA1A19C7ACBB749E43CC2E2"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ecff7de1-4ef3-49de-b2e2-b59a1f3dae7e">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_76E806ADA2843FDD75319B1BCBD6D329D8E07510"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ab5739c0-3777-4c65-89d9-ccd06080f3ca">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_93EF22174A06FB61DDC9665AA75FDE0524FD6E3F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.472f681a-4c84-4e1a-bb15-ff93309c789c">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_855FECD8147E889D8EE4657F7D5146484A6B40E0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f495ad30-df6c-48ea-bcfa-c301d6738b25">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_02ABE7999CC9A1172B3261949625EFD3F3C7F3E3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ab3edac2-a30e-4c76-99df-4c8549a3a7e2">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_F7CC9ECB8BFD015E976EDFDCA010DD2E7E66BB4F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f68a837d-a09a-4b7f-ad6c-5433506ecaee">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_ECD3B130A0619EB35F7B454B93B42925757F7DE7"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f959464f-43fc-401e-acf6-fd04c6fe42ea">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_82786F341A2A2D903014844D45B9FA98CCD36994"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3b69a327-d1ab-42f5-ac6b-54f786dc2681">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_9A5CFEB43F650C44EB0839CC2527BA254CA5FA5C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.69de7e52-dee6-4519-8aec-068e98fa0612">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_418248BD78CB44D4E18AB434C473F2F1E471649A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9de1dd5f-06e4-4148-801c-04d8be7f7675">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_08F70E9272E44DE52B20EA9152A0FBD4A81E74F7"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.487b9b32-3cc7-4455-81a0-89e91e17a5eb">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_040573959767ECDC8F1941BD825CEA007DDD9496"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6acd31f4-3e0d-4a5e-b63c-47158c30903e">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_9A0D3F77D56B57DCEF83D26ED2A2727D23AFA119"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e04bdf70-fdaa-42e4-aaa2-fc7ec656a092">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_5AEFF056096C9DB4DD9A789139375764C6AC9C87"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ea89d1bd-4cb3-4a61-8ca0-3547c44a2b53">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_B042BE4BB589CF038B308F8A0003757C287052B1"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.50e6d7b2-ee8b-4c70-a61c-da9d184b864c">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_F7CC9ECB8BFD015E976EDFDCA010DD2E7E66BB4F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9067aa9e-07f0-4d50-b1d3-f9f63b2d73eb">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_BB7B12E9650F4C0FAEF6553E3BFD0F48BEA6B816"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f56b380e-838d-420c-90e5-fd58eee707cf">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_855FECD8147E889D8EE4657F7D5146484A6B40E0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.08496c40-67ee-4ffe-ab9a-27a7d345d515">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_2AA850BA72AE658B4D36906F8C2E2AF3F0D4C293"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0f15c26a-e862-429e-a5cd-1216949531e1">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_93EF22174A06FB61DDC9665AA75FDE0524FD6E3F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4d8489a9-cfc1-47c6-b956-5ea4f1ec8263">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_76E806ADA2843FDD75319B1BCBD6D329D8E07510"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2852f651-2bab-45c6-a728-cd843f2241f7">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_82786F341A2A2D903014844D45B9FA98CCD36994"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7b07ef55-1bea-44b4-afbd-3d7121bf6aae">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_ECD3B130A0619EB35F7B454B93B42925757F7DE7"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.69de7e52-dee6-4519-8aec-068e98fa0612">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_418248BD78CB44D4E18AB434C473F2F1E471649A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4edacfc7-ac88-439e-843d-8d923b135d9a">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_3664830904D570FF377F49DFE01B45C3A25DD87A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.963a734b-7d1f-4be6-b5fe-7f833029fece">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_5D0D42188F71D20ECF040EAC6CA0C0F0DADFD87A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bdd21b2f-a518-4197-b5fa-9dc7ce32e6bb">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_02ABE7999CC9A1172B3261949625EFD3F3C7F3E3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.09c6f7a4-8f32-4ed6-b879-4301b89d947a">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_38F312432FE03D76DCBF29B0F672EAB8CC22C002"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d0299ebc-c25b-42db-a78a-761d6bc2e7c6">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_ADBA85E2E02F7E7231A06C4B17A8011D75FC0E2D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7c30fcbc-a72a-4249-a522-04401cc17fee">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_980A770826B0D84832D576F0A98A53C7F561AD34"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.000ac412-84ff-4b13-9a66-21d82c9f334a">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_6A39AD94127F969F1D23CF740EFDD5A7FAD738D2"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.608bc871-a5d7-42d5-9fbd-efac5a6c7421">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_EC7F146CE01EB601A40BC87EAACE69AF8938A1FE"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c106fd31-e281-4036-b8e0-013afe17699f">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_9A0F2200F51BF8AA550323C4F2EDF991155908BD"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.25f53a4e-bba1-49d1-9d02-8d11992be315">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_0BB11C4741B5F63EFCA1A19C7ACBB749E43CC2E2"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e3c24444-fcef-4d53-a695-531cf58bd37c">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_575D937C7970C0F8BB113EC2D2DEA09DDCC074B3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ContextStack_36326089C891D467AE5BC740DBC4C07098B375EE">
            <name>ContextStack</name>
        </type>
        <type derived="true" id="type.c7c33438-300b-4d2d-8d9a-ab833131af27">
            <name>ContextStack&amp;</name>
            <content>
                <baseType ref="class_ContextStack_36326089C891D467AE5BC740DBC4C07098B375EE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cfec834f-f1d7-47e9-89bb-f93f85cd43ec">
            <name>ContextStack&amp;&amp;</name>
            <content>
                <baseType ref="class_ContextStack_36326089C891D467AE5BC740DBC4C07098B375EE"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.932c6120-21a9-4473-ab4c-fc08b82bd74e">
            <name>ContextStack*</name>
            <content>
                <baseType ref="class_ContextStack_36326089C891D467AE5BC740DBC4C07098B375EE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ControlParser_1334D26AE4230C2F284FC6316329790AE23C7A28">
            <name>ControlParser</name>
        </type>
        <type derived="true" id="type.94b2de31-5b6e-4556-88aa-130eb87e5277">
            <name>ControlParser&amp;</name>
            <content>
                <baseType ref="class_ControlParser_1334D26AE4230C2F284FC6316329790AE23C7A28"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f5927c07-9fd3-4678-8b6b-5f3f3415fbbe">
            <name>ControlParser*</name>
            <content>
                <baseType ref="class_ControlParser_1334D26AE4230C2F284FC6316329790AE23C7A28"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.42b7f893-26a8-437d-bf79-8d4e6336479c" specialization="true">
            <name>Counter&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30" specialization="true">
            <name>Counter&lt;T></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="e12acfaf-6162-421d-8781-e62af09c89f0"/>
            </content>
        </type>
        <type derived="true" id="type.2ebbd64a-0ef3-4ee7-864d-4d89eb460105">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90cb89ee-47f4-4607-afd3-1cf6f809aa89">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4edbfad5-2788-4300-85fb-f94025879971">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8d25e863-0216-4027-954c-1c5baa8c4c41">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4516dd44-5f04-4195-a375-932b45184ad7">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7168fc20-cd66-43e3-a42f-7c91f05abe44">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A" specialization="true">
            <name>Counter&lt;U></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="9fb2a34b-8472-4092-b1ad-fbee5ab7c259"/>
            </content>
        </type>
        <type id="class_CurrencySymbolParser_20757D3E45D7CCAABB4B408EB8F3EF95925411CC">
            <name>CurrencySymbolParser</name>
        </type>
        <type derived="true" id="type.4805b8f3-04e3-4c43-8140-ad5d40c5348c">
            <name>CurrencySymbolParser&amp;</name>
            <content>
                <baseType ref="class_CurrencySymbolParser_20757D3E45D7CCAABB4B408EB8F3EF95925411CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.29644592-b569-47b9-a4a8-5636a28afdff">
            <name>CurrencySymbolParser*</name>
            <content>
                <baseType ref="class_CurrencySymbolParser_20757D3E45D7CCAABB4B408EB8F3EF95925411CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DashPunctuationParser_5AD7DDB1B6093A2764FFBEFB693A74F5328ADCC0">
            <name>DashPunctuationParser</name>
        </type>
        <type derived="true" id="type.36cb878c-21b2-41d9-9ee3-b3bcbc9fe6ed">
            <name>DashPunctuationParser&amp;</name>
            <content>
                <baseType ref="class_DashPunctuationParser_5AD7DDB1B6093A2764FFBEFB693A74F5328ADCC0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4357039a-7812-4aaf-a81e-5c3dbeefc40e">
            <name>DashPunctuationParser*</name>
            <content>
                <baseType ref="class_DashPunctuationParser_5AD7DDB1B6093A2764FFBEFB693A74F5328ADCC0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DecimalNumberParser_730379C9B4D622C667F5095CC66454F3215D4EFF">
            <name>DecimalNumberParser</name>
        </type>
        <type derived="true" id="type.e4462ea4-bd60-47a6-8ed5-0ee914a54c40">
            <name>DecimalNumberParser&amp;</name>
            <content>
                <baseType ref="class_DecimalNumberParser_730379C9B4D622C667F5095CC66454F3215D4EFF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e3b94728-36db-4d0d-8df1-1bc35d17fd4f">
            <name>DecimalNumberParser*</name>
            <content>
                <baseType ref="class_DecimalNumberParser_730379C9B4D622C667F5095CC66454F3215D4EFF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dae03d9c-95d1-47e8-8e15-42e275d7b37b">
            <name>DeleteStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b59a3d66-9f0b-4b92-9a97-21ae8498ce89">
            <name>Deref&amp;&amp;</name>
            <content>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a9a3378c-41c1-44ab-86ee-7e7836a47e0f">
            <name>DestroyStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_DifferenceParser_6B333D97634B9028F109391E5F702C41F874DE5F">
            <name>DifferenceParser</name>
        </type>
        <type derived="true" id="type.e7f190ab-31a5-43b1-b3cf-d536e692b167">
            <name>DifferenceParser&amp;</name>
            <content>
                <baseType ref="class_DifferenceParser_6B333D97634B9028F109391E5F702C41F874DE5F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90c0a7f7-3c31-4c18-8b51-10cecaafe65f">
            <name>DifferenceParser*</name>
            <content>
                <baseType ref="class_DifferenceParser_6B333D97634B9028F109391E5F702C41F874DE5F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DigitParser_A021D42468DFF59A104E5196A3F76F3F12DB9E70">
            <name>DigitParser</name>
        </type>
        <type derived="true" id="type.fabc5d61-854f-4b19-bf62-622e950134f2">
            <name>DigitParser&amp;</name>
            <content>
                <baseType ref="class_DigitParser_A021D42468DFF59A104E5196A3F76F3F12DB9E70"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ec12c378-1b07-437f-8cf0-05c7105faf55">
            <name>DigitParser*</name>
            <content>
                <baseType ref="class_DigitParser_A021D42468DFF59A104E5196A3F76F3F12DB9E70"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.33c14fc0-0818-4ed8-ab66-c68a1513319f">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a094bfa9-aee2-47ad-8b17-da3a6d87c68e">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a3e0c6e9-567a-40c5-943b-a033655c96ea">
            <name>DomObject&amp;&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9a512402-860a-4be3-9615-25c9bb384b86">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.56b90bd5-6ea6-4efd-a9a4-1794d42a6a2e">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.aba57165-7378-4b6f-873d-4957e1ebf6db">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.56b90bd5-6ea6-4efd-a9a4-1794d42a6a2e">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EmptyParser_E7A601A33228A4EE630BE03260AC60547351C266">
            <name>EmptyParser</name>
        </type>
        <type derived="true" id="type.ca3860f2-e462-496b-b808-1be6a9e9686f">
            <name>EmptyParser&amp;</name>
            <content>
                <baseType ref="class_EmptyParser_E7A601A33228A4EE630BE03260AC60547351C266"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c5960877-aaf5-4e52-beaa-469c6fc6dcb8">
            <name>EmptyParser*</name>
            <content>
                <baseType ref="class_EmptyParser_E7A601A33228A4EE630BE03260AC60547351C266"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EnclosingMarkParser_F2F5F8431121DAD3720B7EC0D8B35ECDC47FA49F">
            <name>EnclosingMarkParser</name>
        </type>
        <type derived="true" id="type.8150b575-d253-4b4f-b79d-1840771f857d">
            <name>EnclosingMarkParser&amp;</name>
            <content>
                <baseType ref="class_EnclosingMarkParser_F2F5F8431121DAD3720B7EC0D8B35ECDC47FA49F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.12aaea33-258e-4140-8242-17f145340109">
            <name>EnclosingMarkParser*</name>
            <content>
                <baseType ref="class_EnclosingMarkParser_F2F5F8431121DAD3720B7EC0D8B35ECDC47FA49F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.33277cfe-053f-4955-a08a-d5e2644fd1da" specialization="true">
            <name>EqualTo&lt;Grammar*></name>
            <content>
                <primaryType ref="class_EqualTo_T_483B326DC1355EE905B9A0F4E9331F702788D28E"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
            </content>
        </type>
        <type derived="true" id="type.056fd494-7607-4496-b46b-5052fb51161c">
            <name>EqualTo&lt;Grammar*>&amp;</name>
            <content>
                <baseType ref="type.33277cfe-053f-4955-a08a-d5e2644fd1da"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1ee623ba-8535-4472-addb-77bb27cb29a9">
            <name>EqualTo&lt;Grammar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.33277cfe-053f-4955-a08a-d5e2644fd1da"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee3b64c9-67da-4779-b17d-7db6c35778aa">
            <name>EqualTo&lt;Grammar*>*</name>
            <content>
                <baseType ref="type.33277cfe-053f-4955-a08a-d5e2644fd1da"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.b534f2b8-6cf3-437b-aa83-1f10893f7769" specialization="true">
            <name>EqualTo&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_EqualTo_T_483B326DC1355EE905B9A0F4E9331F702788D28E"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.c1b428d5-f689-4e22-ae55-447c9ce7c8b7">
            <name>EqualTo&lt;String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c0ac9fdf-c8c4-412a-9311-f8697f420845">
            <name>EqualTo&lt;String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d1b6cb83-2fa5-49dc-b034-150cbe168adc">
            <name>EqualTo&lt;String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ExclusiveOrParser_024EB6E22761BAB373A51265E66943EC916618FE">
            <name>ExclusiveOrParser</name>
        </type>
        <type derived="true" id="type.12ad51ba-ed39-448a-b215-4aa648679c76">
            <name>ExclusiveOrParser&amp;</name>
            <content>
                <baseType ref="class_ExclusiveOrParser_024EB6E22761BAB373A51265E66943EC916618FE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7d8bae45-7049-47f4-9a26-da2a2eb412cc">
            <name>ExclusiveOrParser*</name>
            <content>
                <baseType ref="class_ExclusiveOrParser_024EB6E22761BAB373A51265E66943EC916618FE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ExpandCodeVisitor_91A3450CB18AC371BEB4812F6196A4A42AC02D77">
            <name>ExpandCodeVisitor</name>
        </type>
        <type derived="true" id="type.91b59ff8-c192-41cd-aabb-bf9e688a5e13">
            <name>ExpandCodeVisitor&amp;</name>
            <content>
                <baseType ref="class_ExpandCodeVisitor_91A3450CB18AC371BEB4812F6196A4A42AC02D77"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.099c9a1c-64ba-46f6-a4f5-c99eb5fcc84a">
            <name>ExpandCodeVisitor*</name>
            <content>
                <baseType ref="class_ExpandCodeVisitor_91A3450CB18AC371BEB4812F6196A4A42AC02D77"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C">
            <name>ExpectationFailure</name>
        </type>
        <type derived="true" id="type.e3bf87ae-c8c3-4099-8c9d-bf5c5c921c2b">
            <name>ExpectationFailure&amp;</name>
            <content>
                <baseType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.35edadcd-32c5-4a23-bb47-a1574d766c8d">
            <name>ExpectationFailure&amp;&amp;</name>
            <content>
                <baseType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.390244f3-4b6b-4c29-bd42-463f6a26231c">
            <name>ExpectationFailure*</name>
            <content>
                <baseType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3ded612f-39f3-4bc5-b537-eb4b1e35b001">
            <name>ExpectationFailure*&amp;</name>
            <content>
                <baseType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f2e6de63-b03e-43d1-aef3-70ddc2cba073">
            <name>ExpectationFailure**</name>
            <content>
                <baseType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB">
            <name>ExpectationParser</name>
        </type>
        <type derived="true" id="type.f3bc7f79-b448-4761-9511-fae53d2cafcf">
            <name>ExpectationParser&amp;</name>
            <content>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.375f01b0-9191-48bb-80ba-847304b762a9">
            <name>ExpectationParser&amp;&amp;</name>
            <content>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7e32e48a-1dc4-4980-8312-1ca9504dcda1">
            <name>ExpectationParser*</name>
            <content>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.279fd309-8376-4cb8-94c6-be0d305995df">
            <name>ExpressionStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="e912d177-ad2c-4bb8-a5fe-8065e2ca8f72">
            <name>FailureAction</name>
        </type>
        <type derived="true" id="type.411b8c16-ae69-4df6-bba6-2f7678606210">
            <name>FailureAction&amp;</name>
            <content>
                <baseType ref="e912d177-ad2c-4bb8-a5fe-8065e2ca8f72"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2f30fd35-9855-45f9-b07d-ae92c3700537">
            <name>FailureAction&amp;&amp;</name>
            <content>
                <baseType ref="e912d177-ad2c-4bb8-a5fe-8065e2ca8f72"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.046f8691-ba36-4717-8638-139c8223aaac">
            <name>FailureAction*</name>
            <content>
                <baseType ref="e912d177-ad2c-4bb8-a5fe-8065e2ca8f72"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_FileInfo_482D1595D6ADD6B76DCA9EE9DD41AFCD55B8A5BA">
            <name>FileInfo</name>
        </type>
        <type derived="true" id="type.1b3bd59e-77f0-4d22-acba-2a016378f1b6">
            <name>FileInfo&amp;</name>
            <content>
                <baseType ref="class_FileInfo_482D1595D6ADD6B76DCA9EE9DD41AFCD55B8A5BA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.da4ad01a-5e6e-4efb-be6b-cc7914333680">
            <name>FileInfo*</name>
            <content>
                <baseType ref="class_FileInfo_482D1595D6ADD6B76DCA9EE9DD41AFCD55B8A5BA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bd38e899-f0e0-47f2-acf2-bc8b2cede9a1">
            <name>FileInfo*&amp;</name>
            <content>
                <baseType ref="class_FileInfo_482D1595D6ADD6B76DCA9EE9DD41AFCD55B8A5BA"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5a2ab4b3-5ff4-4ef3-9ed5-25cde3d82414">
            <name>FileInfo**</name>
            <content>
                <baseType ref="class_FileInfo_482D1595D6ADD6B76DCA9EE9DD41AFCD55B8A5BA"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_FinalPunctuationParser_7C92D80BD253997107DD6B218F341C05EA286E5B">
            <name>FinalPunctuationParser</name>
        </type>
        <type derived="true" id="type.eab6f1b7-bba6-4ee7-a10b-39fd9e75e7f7">
            <name>FinalPunctuationParser&amp;</name>
            <content>
                <baseType ref="class_FinalPunctuationParser_7C92D80BD253997107DD6B218F341C05EA286E5B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8a7c1077-6288-41cc-8ceb-75e136658ecc">
            <name>FinalPunctuationParser*</name>
            <content>
                <baseType ref="class_FinalPunctuationParser_7C92D80BD253997107DD6B218F341C05EA286E5B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_FormatParser_3606CA5D49BB1FBCB55AC9A61CA2764AEDFD83DF">
            <name>FormatParser</name>
        </type>
        <type derived="true" id="type.e3b4afa4-51b0-454d-86a5-58bab2ac2319">
            <name>FormatParser&amp;</name>
            <content>
                <baseType ref="class_FormatParser_3606CA5D49BB1FBCB55AC9A61CA2764AEDFD83DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9d708632-60ba-42ee-b460-88ca2fc578b9">
            <name>FormatParser*</name>
            <content>
                <baseType ref="class_FormatParser_3606CA5D49BB1FBCB55AC9A61CA2764AEDFD83DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051" specialization="true">
            <name>ForwardList&lt;T></name>
            <content>
                <primaryType ref="class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <argumentType ref="88ea128c-abf7-4278-a98b-ddd12f6cd256"/>
            </content>
        </type>
        <type derived="true" id="type.bd286790-190f-4520-96f3-bac28c074257">
            <name>ForwardList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA" specialization="true">
            <name>ForwardListNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="4cf6ec60-4efd-46d8-ae39-6b5ae79f6596"/>
                <argumentType ref="468e6a4c-ef5e-4ad1-a141-55ffc196aae9"/>
                <argumentType ref="3ad1eca4-6d16-4c0e-a731-1cec8c0a324d"/>
            </content>
        </type>
        <type derived="true" id="type.d3772925-391c-4198-852c-c5f3ad0ef3df">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.faee716b-c0d6-4505-82a1-7b951fc8f430">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84" specialization="true">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="e99ab78c-e5bc-4156-81b2-47216a3738db"/>
                <argumentType ref="type.49746f39-22c0-43ca-94b2-564fdb242b00"/>
                <argumentType ref="type.bd48a33d-3bd0-4dc5-9efb-455ceb83bb6c"/>
            </content>
        </type>
        <type derived="true" id="type.13c208da-ee76-4c39-96eb-0f8a206d7536">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1306a2a5-3198-40e7-93ea-f44683b44064">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3391e0ef-fb6f-4672-bac5-24fc3428d49b">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3" specialization="true">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="8dc30a06-25a2-45c6-8f19-dcf483533d15"/>
                <argumentType ref="type.fde9983b-3654-40f8-ba5f-e9206a509160"/>
                <argumentType ref="type.ac9ef8e6-0f1c-4856-a830-e6171dbf9ed5"/>
            </content>
        </type>
        <type derived="true" id="type.2862add0-fafc-4eba-b376-9f9e2523dc45">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.43affab4-2614-4212-a611-4f4be372495b">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.908728e8-4c00-459c-97b6-ffae187cd336">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8" specialization="true">
            <name>FrontInsertIterator&lt;C></name>
            <content>
                <primaryType ref="class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <argumentType ref="0f0a9135-17cc-4e75-8fa4-3a64b58f1ebb"/>
            </content>
        </type>
        <type derived="true" id="type.948656b0-4799-4721-a61b-61395db8ed1f">
            <name>FrontInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8650c0a3-87dc-4385-b80e-88f055c90437">
            <name>FrontInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467" specialization="true">
            <name>FrontInsertProxy&lt;C></name>
            <content>
                <primaryType ref="class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <argumentType ref="0f0a9135-17cc-4e75-8fa4-3a64b58f1ebb"/>
            </content>
        </type>
        <type derived="true" id="type.ba7493ba-7534-4769-bcff-02be981575f2">
            <name>FrontInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1319fe7c-aa04-4b26-8719-5403fdb5cf49">
            <name>FrontInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.aa08636b-2c40-456d-93b0-53f96b084d1e">
            <name>FrontInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bd4e1def-569e-45b4-bc3c-24425638fe8d">
            <name>FunctionProfiler&amp;&amp;</name>
            <content>
                <baseType ref="class_FunctionProfiler_809E118D4757DEA417E0CB7F4E658DF7C4B79B00"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b0189b3f-17da-4df8-87bc-b33eb4412fab">
            <name>GotoCaseStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c489458a-6ab3-490a-bd33-fc7e290a66bb">
            <name>GotoStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6">
            <name>Grammar</name>
        </type>
        <type derived="true" id="type.76b75553-a0fe-4105-8764-20ef4571a182">
            <name>Grammar&amp;</name>
            <content>
                <baseType ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2448671f-e480-4a64-a267-051ad0bcd650">
            <name>Grammar*</name>
            <content>
                <baseType ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d2729ab5-2ff0-4040-89f8-30b09cbd5da7">
            <name>Grammar*&amp;</name>
            <content>
                <baseType ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0c26dcd7-3c76-46ab-bab1-34ba338096f4">
            <name>Grammar*&amp;&amp;</name>
            <content>
                <baseType ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b51668cd-99b6-4eaf-a96e-047ff1337901">
            <name>Grammar**</name>
            <content>
                <baseType ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_GraphicParser_CCC378BAB252129868AEF9610BA84DB9CB865D56">
            <name>GraphicParser</name>
        </type>
        <type derived="true" id="type.753b69cc-29fd-40cf-9e00-6ef9e1788648">
            <name>GraphicParser&amp;</name>
            <content>
                <baseType ref="class_GraphicParser_CCC378BAB252129868AEF9610BA84DB9CB865D56"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e23fd89d-bed9-48fb-a398-e4aa5ab7874e">
            <name>GraphicParser*</name>
            <content>
                <baseType ref="class_GraphicParser_CCC378BAB252129868AEF9610BA84DB9CB865D56"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.591b9883-fe31-40a3-b03c-3508bbdb74ca" specialization="true">
            <name>HashMap&lt;String&lt;uchar>, Grammar*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <argumentType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.e73502fc-e584-49ba-8cf0-1db941e6637f">
            <name>HashMap&lt;String&lt;uchar>, Grammar*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.591b9883-fe31-40a3-b03c-3508bbdb74ca"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3fd9146e-2aac-4651-a57c-2240fee68024">
            <name>HashMap&lt;String&lt;uchar>, Grammar*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.591b9883-fe31-40a3-b03c-3508bbdb74ca"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.33ea9934-bcef-4372-825a-977e3667a347">
            <name>HashMap&lt;String&lt;uchar>, Grammar*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.591b9883-fe31-40a3-b03c-3508bbdb74ca"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c13be9ea-0d72-4dfd-abac-24fdbc8cc5d8">
            <name>HashMap&lt;String&lt;uchar>, Grammar*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.591b9883-fe31-40a3-b03c-3508bbdb74ca"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4a1f5a1d-2b1d-495f-9b8c-6ae9bb0016e3" specialization="true">
            <name>HashMap&lt;String&lt;uchar>, Namespace*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                <argumentType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <argumentType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.2f26460d-e97c-4fec-83b8-cd7a463fa2be">
            <name>HashMap&lt;String&lt;uchar>, Namespace*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.4a1f5a1d-2b1d-495f-9b8c-6ae9bb0016e3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.52f705c0-463e-4659-8871-6302b643e9d5">
            <name>HashMap&lt;String&lt;uchar>, Namespace*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.4a1f5a1d-2b1d-495f-9b8c-6ae9bb0016e3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2e665009-b021-41eb-9d98-91a33fb761f1">
            <name>HashMap&lt;String&lt;uchar>, Namespace*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.4a1f5a1d-2b1d-495f-9b8c-6ae9bb0016e3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d4885180-d177-4e05-be72-af038768838c">
            <name>HashMap&lt;String&lt;uchar>, Namespace*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.4a1f5a1d-2b1d-495f-9b8c-6ae9bb0016e3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.efce59e9-5e09-4a7b-ab54-7bd0eaedfc79" specialization="true">
            <name>HashMap&lt;String&lt;uchar>, ParsingObject*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.cd2b767d-81fd-400f-a8de-ad916f3e3357"/>
                <argumentType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <argumentType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.f49cc3ba-1002-4fdc-8dad-b01bf1812ff1">
            <name>HashMap&lt;String&lt;uchar>, ParsingObject*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.efce59e9-5e09-4a7b-ab54-7bd0eaedfc79"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.22bcc3c5-c242-467c-b53d-1b7f5c15facc">
            <name>HashMap&lt;String&lt;uchar>, ParsingObject*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.efce59e9-5e09-4a7b-ab54-7bd0eaedfc79"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.09091d46-e457-4acc-abaa-e4f7cba39e1b" specialization="true">
            <name>HashMap&lt;String&lt;uchar>, String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <argumentType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.969cf6a1-6916-49f1-87e3-1021198441c2">
            <name>HashMap&lt;String&lt;uchar>, String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.09091d46-e457-4acc-abaa-e4f7cba39e1b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e0e69ea0-3368-4055-af7d-f48463c3ef09">
            <name>HashMap&lt;String&lt;uchar>, String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.09091d46-e457-4acc-abaa-e4f7cba39e1b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7b6f4d32-3eb0-4a45-94dc-e6446d744587">
            <name>HashMap&lt;String&lt;uchar>, String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.09091d46-e457-4acc-abaa-e4f7cba39e1b"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.54f0e138-2858-44c4-9f9f-8e789d3f4a77">
            <name>HashMap&lt;String&lt;uchar>, String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.09091d46-e457-4acc-abaa-e4f7cba39e1b"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.6927f0f0-14a1-412d-933f-484703dea1ba" specialization="true">
            <name>HashSet&lt;Grammar*, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>></name>
            <content>
                <primaryType ref="class_HashSet_T_H_C_6247CEC2AE0E22CFEFEC71837C21FA087B7840DC"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.c3dfb72b-e2c5-44f9-ab25-560f9160f1d6"/>
                <argumentType ref="type.33277cfe-053f-4955-a08a-d5e2644fd1da"/>
            </content>
        </type>
        <type derived="true" id="type.a8c9848c-9ddf-4c13-97c2-a24b78a5b8bc">
            <name>HashSet&lt;Grammar*, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>&amp;</name>
            <content>
                <baseType ref="type.6927f0f0-14a1-412d-933f-484703dea1ba"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.17bcbcf5-2fa4-4978-baf7-bce1550c8c13">
            <name>HashSet&lt;Grammar*, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>*</name>
            <content>
                <baseType ref="type.6927f0f0-14a1-412d-933f-484703dea1ba"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.ae8196d9-8057-4b3b-b96d-8921798c29aa" specialization="true">
            <name>HashSet&lt;String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_HashSet_T_H_C_6247CEC2AE0E22CFEFEC71837C21FA087B7840DC"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <argumentType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.df4a7800-2cc3-4b5f-98ff-1883104f4292">
            <name>HashSet&lt;String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.ae8196d9-8057-4b3b-b96d-8921798c29aa"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.784c1880-6773-484b-a68e-8eb45dec8bde">
            <name>HashSet&lt;String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.ae8196d9-8057-4b3b-b96d-8921798c29aa"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.c3dfb72b-e2c5-44f9-ab25-560f9160f1d6" specialization="true">
            <name>Hasher&lt;Grammar*></name>
            <content>
                <primaryType ref="class_Hasher_T_9E06FCD9B56B8B3B7E7F8286BE8179D3B1CB8325"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
            </content>
        </type>
        <type derived="true" id="type.3d13bc4a-8bdc-437e-8e55-11d7561be39f">
            <name>Hasher&lt;Grammar*>&amp;</name>
            <content>
                <baseType ref="type.c3dfb72b-e2c5-44f9-ab25-560f9160f1d6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9fe362e9-2fa4-4259-9a91-8f041effe36f">
            <name>Hasher&lt;Grammar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c3dfb72b-e2c5-44f9-ab25-560f9160f1d6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3caf36cc-df4c-4661-86ab-878e91327f5e">
            <name>Hasher&lt;Grammar*>*</name>
            <content>
                <baseType ref="type.c3dfb72b-e2c5-44f9-ab25-560f9160f1d6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.52cc2336-180e-4851-8e35-89023e193a1a" specialization="true">
            <name>Hasher&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Hasher_T_9E06FCD9B56B8B3B7E7F8286BE8179D3B1CB8325"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.6b9d114f-7bd6-42f5-a08e-454d96b0dec9">
            <name>Hasher&lt;String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bd331ed3-61c1-48c0-b7f5-e82e49c82c9d">
            <name>Hasher&lt;String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8e2244af-5337-4c1c-94c8-9ff5aa32346b">
            <name>Hasher&lt;String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.85263d18-f1c6-4917-9fbd-999ae715cf94" specialization="true">
            <name>Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.98c77f3a-e05d-415b-a5ba-9ab8f257269f"/>
                <argumentType ref="type.c3dfb72b-e2c5-44f9-ab25-560f9160f1d6"/>
                <argumentType ref="type.33277cfe-053f-4955-a08a-d5e2644fd1da"/>
            </content>
        </type>
        <type derived="true" id="type.b8212242-e27a-4909-b1a1-e081e52a7bc4">
            <name>Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>&amp;</name>
            <content>
                <baseType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.73357141-3765-4d18-946f-9566654c1478">
            <name>Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>&amp;&amp;</name>
            <content>
                <baseType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.948522f9-110b-4424-a7ea-07bc6c0cfe76">
            <name>Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>*</name>
            <content>
                <baseType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.82aa93ef-db28-4e1f-b3db-2e365e11493e">
            <name>Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>*&amp;</name>
            <content>
                <baseType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f65272bb-c279-4611-96c8-47a5eaf4e271">
            <name>Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1d345135-0240-4a03-a586-6f759dfcc60f">
            <name>Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>**</name>
            <content>
                <baseType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B" specialization="true">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="4da7762f-8c5e-4d4e-a185-605883df46f1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <argumentType ref="ede62ec2-8b40-4997-b09d-38f70b1810e2"/>
                <argumentType ref="7309693c-b3f3-4960-abaa-888b23e61971"/>
            </content>
        </type>
        <type derived="true" id="type.39f96f6d-480c-4125-b8aa-a23418ff9855">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2" specialization="true">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="6731076c-f39f-4b1a-901e-acda07d86381"/>
                <argumentType ref="8e5332b6-c054-4eb4-934f-5d11acbfb871"/>
                <argumentType ref="89b6f68f-9374-4572-93c6-4590f3b6c892"/>
                <argumentType ref="b13fc40d-014a-4f37-ae20-8382f9a3d657"/>
                <argumentType ref="2ab7d8aa-35f4-4927-9369-03b27972eee6"/>
            </content>
        </type>
        <type derived="true" id="type.ba10db4b-1239-426f-8d8b-9a081e0735b0">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
                <argumentType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
                <argumentType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <argumentType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.b761e881-4ee0-432e-ae0a-10bc6625298f">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.273724e9-03a4-49e1-96c6-054edbc9b70c">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.87dfb0e6-21fa-4de8-b6ee-7b4564627e94">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.97b8ee1b-dd61-4c13-9bc7-287d45ff0448">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e4a54d28-4552-4596-883a-acd0d4bf8bd9">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ec83b697-df50-4630-8e51-c8534f5feab1">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
                <argumentType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
                <argumentType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <argumentType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.563bad1c-68df-4e13-96c6-1494f4cd83c2">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dc970e59-e1b3-4fa6-ba7c-315ff82726a4">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b95a5f13-33e5-494b-9e2a-02d683cef382">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.18a5bdbd-118d-4a15-9bac-acc8dd9f1564">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.05cc86c2-5728-4263-8b9d-504aa0291a3c">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ce1128d9-60b9-4cee-b167-a1337a0221bb">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8f31013f-e174-406d-a62d-6116b2c1fae2" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
                <argumentType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
                <argumentType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <argumentType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.c2ca7a28-73f7-4e09-8bb0-93e27dd7d8cd">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f990b6fb-5c7c-42fa-a916-d4e44a8b6392">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d2814ec8-b4d8-43cd-970f-40912dae9b23">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e309f7fc-e041-4df1-9269-893355fe0f76">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.29774a09-b351-4aec-9f9b-6e76ac0b8a8d">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3e3de912-6c0c-4729-a836-900a9f694198">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.37f7546e-e8af-403e-8a35-33e44c143772" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
                <argumentType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
                <argumentType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <argumentType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.3e9ce870-3439-49a8-a474-33bddc8ebb19">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.73c762a3-381d-4935-b8ab-574c53be8cdc">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b7e10a9c-2d49-4ed6-a792-06e58f51c17d">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4e3d9f7b-d103-495c-b4a2-95f26e8b3a1d">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.028127e2-e396-4096-9d87-79cbba1902f2">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.44bd45e5-5059-46e8-8cfd-d756a929073f">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.db02f9a8-6d9b-42f1-aed0-9371d616011c" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.08c17c9b-c834-414b-8eab-08b8de1ea443"/>
                <argumentType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <argumentType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.af0adde1-22be-4544-ba9a-869eeee02cf8">
            <name>Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fd8aa828-0a2f-4552-992f-8cf13e1e419e">
            <name>Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ce0b2583-cf11-4122-a13e-dd8217de956d">
            <name>Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4b9b3955-6776-4ebc-a0e7-c2d6a38d8d02">
            <name>Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.707f0421-4cda-46d9-b772-1f75f167f44d">
            <name>Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.927cde93-229e-4b10-8606-241ea316aafd">
            <name>Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C" specialization="true">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="59a666a4-caab-49c0-96b5-4c967d4999f2"/>
                <argumentType ref="59a666a4-caab-49c0-96b5-4c967d4999f2"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="6dc86999-6cd9-4f12-90a3-436362b9dda2"/>
                <argumentType ref="2a624689-21a4-43ae-8fed-0fcdfe1af1ab"/>
            </content>
        </type>
        <type derived="true" id="type.0c319d37-4e98-4cbb-827c-b87f91c8044f">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.d3de4bc2-8e97-49ca-bb00-3799303b41a0" specialization="true">
            <name>HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.d2729ab5-2ff0-4040-89f8-30b09cbd5da7"/>
                <argumentType ref="type.b51668cd-99b6-4eaf-a96e-047ff1337901"/>
                <argumentType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
            </content>
        </type>
        <type derived="true" id="type.5fab12df-77c3-486c-852c-e0d695b70d45">
            <name>HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>&amp;</name>
            <content>
                <baseType ref="type.d3de4bc2-8e97-49ca-bb00-3799303b41a0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.27f51245-8699-4543-afcc-d3e97b42973f">
            <name>HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.d3de4bc2-8e97-49ca-bb00-3799303b41a0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8f1755b8-0bd6-4adb-b6f0-45239593bc12">
            <name>HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>*</name>
            <content>
                <baseType ref="type.d3de4bc2-8e97-49ca-bb00-3799303b41a0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.e4ef023f-6da4-4f9a-b3e9-e4dcba1738f3" specialization="true">
            <name>HashtableIterator&lt;Grammar*, const Grammar*&amp;, const Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.83cba7a9-43dc-4111-b8ba-68d65211cb97"/>
                <argumentType ref="type.ca5b885f-aa8c-4c87-9895-608b09c5e40c"/>
                <argumentType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
            </content>
        </type>
        <type derived="true" id="type.62482959-2da7-4b46-8feb-f156f17b280e">
            <name>HashtableIterator&lt;Grammar*, const Grammar*&amp;, const Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>&amp;</name>
            <content>
                <baseType ref="type.e4ef023f-6da4-4f9a-b3e9-e4dcba1738f3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.414e5e4d-95fe-4caf-9dad-e45b2cb3aa12">
            <name>HashtableIterator&lt;Grammar*, const Grammar*&amp;, const Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>*</name>
            <content>
                <baseType ref="type.e4ef023f-6da4-4f9a-b3e9-e4dcba1738f3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.3dfaee5c-06e9-404d-b4df-b7e4204c912c" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
                <argumentType ref="type.6f59d6d6-fbff-49b9-8e92-8fec29a407fa"/>
                <argumentType ref="type.eaab1fd4-afed-49c0-82ec-c0b0ee30d3f4"/>
                <argumentType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
            </content>
        </type>
        <type derived="true" id="type.182849d1-4e36-4f10-ac28-dc70500d3c16">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.3dfaee5c-06e9-404d-b4df-b7e4204c912c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2dfe2688-b1eb-4186-a8a9-5bab42244e0a">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.3dfaee5c-06e9-404d-b4df-b7e4204c912c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.affb0ef7-5d80-4437-b3e3-4b9905f2d741">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.3dfaee5c-06e9-404d-b4df-b7e4204c912c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.13925496-3577-4e53-bdf9-8eedd379ec74" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, const Pair&lt;String&lt;uchar>, Grammar*>&amp;, const Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
                <argumentType ref="type.6c6f5927-01ea-467b-b813-20f5c1ed0c49"/>
                <argumentType ref="type.a05acaac-b374-4163-bfa5-e3a2a19f5b0b"/>
                <argumentType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
            </content>
        </type>
        <type derived="true" id="type.2faa7647-bc83-44d7-9291-0c4c9c4119d9">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, const Pair&lt;String&lt;uchar>, Grammar*>&amp;, const Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.13925496-3577-4e53-bdf9-8eedd379ec74"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1b2abeb2-7897-495e-ab30-6a567348293b">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, const Pair&lt;String&lt;uchar>, Grammar*>&amp;, const Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.13925496-3577-4e53-bdf9-8eedd379ec74"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0a8985e7-d2a4-42ed-ad3e-9a960827c833">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, const Pair&lt;String&lt;uchar>, Grammar*>&amp;, const Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.13925496-3577-4e53-bdf9-8eedd379ec74"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.3fd4fd11-315c-46a1-9812-8fb8a140fc83" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
                <argumentType ref="type.e235ebd7-1669-45e2-97b8-59c7327a7b3c"/>
                <argumentType ref="type.ac320c1d-5647-4d5d-be3a-c736e47b5d4a"/>
                <argumentType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
            </content>
        </type>
        <type derived="true" id="type.8c3dd398-54fa-4be9-ab31-e5f54d363a14">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.3fd4fd11-315c-46a1-9812-8fb8a140fc83"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1933c069-cfcf-4cb1-b280-bc45e8ec02b6">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.3fd4fd11-315c-46a1-9812-8fb8a140fc83"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.48c829b3-22b3-4f64-9456-664507218570">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.3fd4fd11-315c-46a1-9812-8fb8a140fc83"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.406e6953-a130-43f4-b023-096fe55d1c65" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, const Pair&lt;String&lt;uchar>, Namespace*>&amp;, const Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
                <argumentType ref="type.dc9b9e33-7e57-4483-b9f8-265efb742a2c"/>
                <argumentType ref="type.e13b3677-c532-48bb-9e80-215b033c56e7"/>
                <argumentType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
            </content>
        </type>
        <type derived="true" id="type.ff05e464-848a-4033-b8b6-a9aea8c9ba4f">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, const Pair&lt;String&lt;uchar>, Namespace*>&amp;, const Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.406e6953-a130-43f4-b023-096fe55d1c65"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f6f5ad8d-842b-495d-8d4b-8bb406372889">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, const Pair&lt;String&lt;uchar>, Namespace*>&amp;, const Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.406e6953-a130-43f4-b023-096fe55d1c65"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.15f28a0d-739a-4dfa-8ea1-a1db9d9cf947">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, const Pair&lt;String&lt;uchar>, Namespace*>&amp;, const Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.406e6953-a130-43f4-b023-096fe55d1c65"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9d9d4fa9-8244-43a6-8217-2c71b4abe240" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
                <argumentType ref="type.ad984a53-5459-4df0-ba47-62ac5fd6f4eb"/>
                <argumentType ref="type.6b2360a9-f90e-4aae-a499-58253b93e3bf"/>
                <argumentType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
            </content>
        </type>
        <type derived="true" id="type.7a4260d8-278b-4fc4-aa4a-eae6e6432c88">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.9d9d4fa9-8244-43a6-8217-2c71b4abe240"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1ed4e973-b34b-4058-983c-3100f58bae5a">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9d9d4fa9-8244-43a6-8217-2c71b4abe240"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3b395991-376b-4f93-af65-b5015874ba42">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9d9d4fa9-8244-43a6-8217-2c71b4abe240"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.e3239f19-f6ac-484a-aa20-64be273bad00" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, const Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, const Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
                <argumentType ref="type.e953262c-3a3f-4656-8167-0afebf196dab"/>
                <argumentType ref="type.30fd5802-12b6-4831-8719-c6ccc8465cd0"/>
                <argumentType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
            </content>
        </type>
        <type derived="true" id="type.f1281808-452e-4196-88a8-5a56c2b0ead6">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, const Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, const Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.e3239f19-f6ac-484a-aa20-64be273bad00"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b07d0774-28ad-4e2a-8ce8-51e58e42fdc0">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, const Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, const Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.e3239f19-f6ac-484a-aa20-64be273bad00"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7d39c2c8-b5f2-430a-9f59-89864cff61a5">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, const Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, const Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.e3239f19-f6ac-484a-aa20-64be273bad00"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.1c7c0d67-3fca-41b2-9c3e-2002a3357cb4" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
                <argumentType ref="type.6afc8371-8bf1-4465-9e16-e80cb9616633"/>
                <argumentType ref="type.e9a9657a-99d8-419d-abad-23a63645eca3"/>
                <argumentType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
            </content>
        </type>
        <type derived="true" id="type.89a972ce-ccf8-499b-88a9-33b20cc009b2">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.1c7c0d67-3fca-41b2-9c3e-2002a3357cb4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.98c702b9-15e5-44fc-83b2-d5cfbcff4273">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.1c7c0d67-3fca-41b2-9c3e-2002a3357cb4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f6a319a7-9531-4640-8de3-e8771b40d6a8">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.1c7c0d67-3fca-41b2-9c3e-2002a3357cb4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.6546d856-d082-45ff-b2f2-7160263e491d" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, const Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, const Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
                <argumentType ref="type.802e6cbf-d183-482b-adb7-e07ec1197dac"/>
                <argumentType ref="type.d377f41a-57ed-4242-ba79-411883d5b0a6"/>
                <argumentType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
            </content>
        </type>
        <type derived="true" id="type.d67ed582-dd81-46e4-b32c-ecf07b843c4d">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, const Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, const Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.6546d856-d082-45ff-b2f2-7160263e491d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.05fd8c0d-7908-4194-947a-57264110cc12">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, const Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, const Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.6546d856-d082-45ff-b2f2-7160263e491d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.95104ba0-31cc-4ccd-9553-76d25b78469e">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, const Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, const Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.6546d856-d082-45ff-b2f2-7160263e491d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.3c1139a5-781d-4122-8871-071666a474e1" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.83915a56-dc2f-4773-8a98-6f9537ba1712"/>
                <argumentType ref="type.828bdeb7-f02d-4b39-99e9-63cf85590097"/>
                <argumentType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
            </content>
        </type>
        <type id="type.38036b23-1991-4b78-a0c8-2d67ac034833" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.83915a56-dc2f-4773-8a98-6f9537ba1712"/>
                <argumentType ref="type.828bdeb7-f02d-4b39-99e9-63cf85590097"/>
                <argumentType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
            </content>
        </type>
        <type derived="true" id="type.02e8b0e8-5b78-435f-95b9-ed7046e4c455">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.38036b23-1991-4b78-a0c8-2d67ac034833"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.19f7b93d-48b9-4b26-9be8-807a838ba671">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.3c1139a5-781d-4122-8871-071666a474e1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.02e8b0e8-5b78-435f-95b9-ed7046e4c455">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.38036b23-1991-4b78-a0c8-2d67ac034833"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0f2fa47d-9caa-4606-87eb-8518d2c4729f">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.38036b23-1991-4b78-a0c8-2d67ac034833"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0408a72d-cee1-4be9-aca4-f385c3d7fe99">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.3c1139a5-781d-4122-8871-071666a474e1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ea60f6dc-5bc4-4111-9efc-6b49234a54b6">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.38036b23-1991-4b78-a0c8-2d67ac034833"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.1f04ebbb-0a30-42b2-bce7-2d0c677ec1af" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                <argumentType ref="type.0b4ccc59-a858-4693-80b5-d810cdd3010e"/>
                <argumentType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
            </content>
        </type>
        <type id="type.ee3ce017-fd88-481b-946e-02b71eb8d7c0" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                <argumentType ref="type.0b4ccc59-a858-4693-80b5-d810cdd3010e"/>
                <argumentType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
            </content>
        </type>
        <type derived="true" id="type.b1199196-a047-4d78-94a6-42eb2aea5f7c">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.ee3ce017-fd88-481b-946e-02b71eb8d7c0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8d2eeb23-6df3-4b88-9964-e80e8132e1d1">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.1f04ebbb-0a30-42b2-bce7-2d0c677ec1af"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b1199196-a047-4d78-94a6-42eb2aea5f7c">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.ee3ce017-fd88-481b-946e-02b71eb8d7c0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.121abb52-b120-4381-a92f-eee27dcef03c">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.ee3ce017-fd88-481b-946e-02b71eb8d7c0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.52dc1b61-aa8d-4e9f-ab14-11f079b16e72">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.1f04ebbb-0a30-42b2-bce7-2d0c677ec1af"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fe364be7-bc7f-4eda-a0e1-e92c234baea6">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.ee3ce017-fd88-481b-946e-02b71eb8d7c0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_HexDigitParser_C159CE4D9314E481C4C80F2734D59ED21BCDDFC3">
            <name>HexDigitParser</name>
        </type>
        <type derived="true" id="type.feaefa62-47df-46da-a53f-d7ae59cbdf34">
            <name>HexDigitParser&amp;</name>
            <content>
                <baseType ref="class_HexDigitParser_C159CE4D9314E481C4C80F2734D59ED21BCDDFC3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f2768bdf-d4c6-4a5e-87d3-5713aca1cecc">
            <name>HexDigitParser*</name>
            <content>
                <baseType ref="class_HexDigitParser_C159CE4D9314E481C4C80F2734D59ED21BCDDFC3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_IdContParser_2E96D9CCED8FB679DACCC042D65F1FF8319AF14A">
            <name>IdContParser</name>
        </type>
        <type derived="true" id="type.1b4c1429-af6d-42dc-89d5-1fbbe5260567">
            <name>IdContParser&amp;</name>
            <content>
                <baseType ref="class_IdContParser_2E96D9CCED8FB679DACCC042D65F1FF8319AF14A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5701fa8a-5996-4c2d-b139-59b540c08aa3">
            <name>IdContParser*</name>
            <content>
                <baseType ref="class_IdContParser_2E96D9CCED8FB679DACCC042D65F1FF8319AF14A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_IdStartParser_7E19B4157FAD686B9AAA24B3303CBA84D5E3B55A">
            <name>IdStartParser</name>
        </type>
        <type derived="true" id="type.5f328192-2e82-4a7b-b044-c088d1b9545b">
            <name>IdStartParser&amp;</name>
            <content>
                <baseType ref="class_IdStartParser_7E19B4157FAD686B9AAA24B3303CBA84D5E3B55A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fd4aa039-b145-44b0-a5df-4579a61ce88e">
            <name>IdStartParser*</name>
            <content>
                <baseType ref="class_IdStartParser_7E19B4157FAD686B9AAA24B3303CBA84D5E3B55A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5b209244-c04e-492e-a649-42b1ab07eca0">
            <name>Identifier&amp;</name>
            <content>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ad0863b2-0322-40dd-a119-c1ade7e9e0b0">
            <name>Identifier&amp;&amp;</name>
            <content>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_IdentifierCharsRule_F8759732990B698642B4479584B5D4D6D9C390CB">
            <name>IdentifierCharsRule</name>
        </type>
        <type derived="true" id="type.1edcc9b5-1242-4f0e-bf13-66eacfa0b2e8">
            <name>IdentifierCharsRule&amp;</name>
            <content>
                <baseType ref="class_IdentifierCharsRule_F8759732990B698642B4479584B5D4D6D9C390CB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b9f5858e-1722-47bf-a72b-6e3e5df6b5a2">
            <name>IdentifierCharsRule*</name>
            <content>
                <baseType ref="class_IdentifierCharsRule_F8759732990B698642B4479584B5D4D6D9C390CB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fcdb7c3b-eb02-425b-b231-4424124300ba">
            <name>IdentifierCharsRule*&amp;</name>
            <content>
                <baseType ref="class_IdentifierCharsRule_F8759732990B698642B4479584B5D4D6D9C390CB"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1611315d-8ed9-4ec5-992a-1ebcc20dce03">
            <name>IdentifierCharsRule**</name>
            <content>
                <baseType ref="class_IdentifierCharsRule_F8759732990B698642B4479584B5D4D6D9C390CB"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.98c77f3a-e05d-415b-a5ba-9ab8f257269f" specialization="true">
            <name>Identity&lt;Grammar*></name>
            <content>
                <primaryType ref="class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
            </content>
        </type>
        <type derived="true" id="type.f3a4cff5-c5a4-4012-b878-da9298072ef4">
            <name>Identity&lt;Grammar*>&amp;</name>
            <content>
                <baseType ref="type.98c77f3a-e05d-415b-a5ba-9ab8f257269f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.451e203e-a0f2-4dc7-aa7e-7cde43ecf01b">
            <name>Identity&lt;Grammar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.98c77f3a-e05d-415b-a5ba-9ab8f257269f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7646b09c-d1d8-4e2a-85bd-9d7ec1df2db7">
            <name>Identity&lt;Grammar*>*</name>
            <content>
                <baseType ref="type.98c77f3a-e05d-415b-a5ba-9ab8f257269f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.08c17c9b-c834-414b-8eab-08b8de1ea443" specialization="true">
            <name>Identity&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.5be99d96-ef4c-4fa3-9c27-532ce5bc7e90">
            <name>Identity&lt;String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.08c17c9b-c834-414b-8eab-08b8de1ea443"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0d74cdc0-8532-45c6-8dae-57fe9270cd38">
            <name>Identity&lt;String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.08c17c9b-c834-414b-8eab-08b8de1ea443"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.917acfcd-7c30-4e3a-9df6-a70c7368a2d3">
            <name>Identity&lt;String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.08c17c9b-c834-414b-8eab-08b8de1ea443"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_InitialPunctuationParser_FF9A6C6B18A9668464DA0A7894EDEE822BA05F4C">
            <name>InitialPunctuationParser</name>
        </type>
        <type derived="true" id="type.39fa8dac-debf-4ecc-bc37-876ccaa78a3c">
            <name>InitialPunctuationParser&amp;</name>
            <content>
                <baseType ref="class_InitialPunctuationParser_FF9A6C6B18A9668464DA0A7894EDEE822BA05F4C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1b824e56-3a7d-4399-a419-5b2e93f7555f">
            <name>InitialPunctuationParser*</name>
            <content>
                <baseType ref="class_InitialPunctuationParser_FF9A6C6B18A9668464DA0A7894EDEE822BA05F4C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A" specialization="true">
            <name>InsertProxy&lt;C></name>
            <content>
                <primaryType ref="class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <argumentType ref="907d0156-4c29-40f8-9e0d-3a2654086ae5"/>
            </content>
        </type>
        <type derived="true" id="type.528acb39-02ec-47db-8473-45a3a10e3376">
            <name>InsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.452c4d75-d699-47a5-b147-3ac6b184fd3b">
            <name>InsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.093213a2-d657-4754-b014-1f42f907dbb5">
            <name>InsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_IntersectionParser_C3227AB2B63C00FCB285B109438BD7DE0BBB4E94">
            <name>IntersectionParser</name>
        </type>
        <type derived="true" id="type.93afd0c4-6fbc-41ee-b686-8d93df67b931">
            <name>IntersectionParser&amp;</name>
            <content>
                <baseType ref="class_IntersectionParser_C3227AB2B63C00FCB285B109438BD7DE0BBB4E94"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7819e115-ab33-461c-93d0-07e474b8c1c2">
            <name>IntersectionParser*</name>
            <content>
                <baseType ref="class_IntersectionParser_C3227AB2B63C00FCB285B109438BD7DE0BBB4E94"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0b55721d-0974-4a0e-a1f5-82fb541ebf81">
            <name>Invoke&amp;&amp;</name>
            <content>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_KeywordListParser_02161DAF5C377B76A9433EE79663623F8710F2EB">
            <name>KeywordListParser</name>
        </type>
        <type derived="true" id="type.8e4d56c2-fc9b-4678-a014-b8693d9392f5">
            <name>KeywordListParser&amp;</name>
            <content>
                <baseType ref="class_KeywordListParser_02161DAF5C377B76A9433EE79663623F8710F2EB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c53abb29-d03f-4e20-8ad7-2483cf9519cc">
            <name>KeywordListParser*</name>
            <content>
                <baseType ref="class_KeywordListParser_02161DAF5C377B76A9433EE79663623F8710F2EB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7bf4c705-bfbd-4416-a12c-18240b3e8a02">
            <name>KeywordListParser*&amp;</name>
            <content>
                <baseType ref="class_KeywordListParser_02161DAF5C377B76A9433EE79663623F8710F2EB"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8f218670-ef50-4f5b-8e0d-2870242b628c">
            <name>KeywordListParser**</name>
            <content>
                <baseType ref="class_KeywordListParser_02161DAF5C377B76A9433EE79663623F8710F2EB"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_KeywordParser_A653B0BB080315E503BF719C91EC3C4DAD3F604F">
            <name>KeywordParser</name>
        </type>
        <type derived="true" id="type.a04fe64c-9b43-4ede-a906-3e1590d1a701">
            <name>KeywordParser&amp;</name>
            <content>
                <baseType ref="class_KeywordParser_A653B0BB080315E503BF719C91EC3C4DAD3F604F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.203b8d85-dfd0-4732-9fbc-5b0bc4faf76f">
            <name>KeywordParser&amp;&amp;</name>
            <content>
                <baseType ref="class_KeywordParser_A653B0BB080315E503BF719C91EC3C4DAD3F604F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1a1ad8f4-fd1f-4897-893e-4b55b2297463">
            <name>KeywordParser*</name>
            <content>
                <baseType ref="class_KeywordParser_A653B0BB080315E503BF719C91EC3C4DAD3F604F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D">
            <name>KleeneStarParser</name>
        </type>
        <type derived="true" id="type.6a0f1ce7-2628-452d-902c-8b8b22b36be1">
            <name>KleeneStarParser&amp;</name>
            <content>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3633bd52-49ba-421e-b5f5-60b4388f6b3a">
            <name>KleeneStarParser&amp;&amp;</name>
            <content>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c07e7d1d-25e7-46e8-b03c-e3d066dc188c">
            <name>KleeneStarParser*</name>
            <content>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_LetterNumberParser_A2E1DA9BF27BD67D2A8F0CA4BFD23F5013D49F07">
            <name>LetterNumberParser</name>
        </type>
        <type derived="true" id="type.df71f94c-6ded-4b2b-9020-13357bc5afc4">
            <name>LetterNumberParser&amp;</name>
            <content>
                <baseType ref="class_LetterNumberParser_A2E1DA9BF27BD67D2A8F0CA4BFD23F5013D49F07"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e4053d60-6956-4706-ac63-4fc9bb4432a0">
            <name>LetterNumberParser*</name>
            <content>
                <baseType ref="class_LetterNumberParser_A2E1DA9BF27BD67D2A8F0CA4BFD23F5013D49F07"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_LetterParser_AA49F4AA1BFE22DA5E008596CBB5F724C716D263">
            <name>LetterParser</name>
        </type>
        <type derived="true" id="type.5738f8e2-5353-4f8b-8c31-d33d21d03a44">
            <name>LetterParser&amp;</name>
            <content>
                <baseType ref="class_LetterParser_AA49F4AA1BFE22DA5E008596CBB5F724C716D263"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b567bcb5-7a96-46d1-b82e-871c4349a8a5">
            <name>LetterParser*</name>
            <content>
                <baseType ref="class_LetterParser_AA49F4AA1BFE22DA5E008596CBB5F724C716D263"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_LineSeparatorParser_17BDA29613745BBAD949CECBD8755C565F8E1385">
            <name>LineSeparatorParser</name>
        </type>
        <type derived="true" id="type.28d5a966-0bb2-436c-9d22-9c9c82db3218">
            <name>LineSeparatorParser&amp;</name>
            <content>
                <baseType ref="class_LineSeparatorParser_17BDA29613745BBAD949CECBD8755C565F8E1385"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fc02593e-0e2b-4953-a38a-b20287179414">
            <name>LineSeparatorParser*</name>
            <content>
                <baseType ref="class_LineSeparatorParser_17BDA29613745BBAD949CECBD8755C565F8E1385"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20" specialization="true">
            <name>LinkedList&lt;T></name>
            <content>
                <primaryType ref="class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <argumentType ref="277cfc69-c95c-468a-9524-1cdae05c4eed"/>
            </content>
        </type>
        <type derived="true" id="type.4495d74f-fe89-406c-b7f1-040a7931cd73">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.640a219f-085e-4e71-b7a2-54b6e64ce239">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_LinkerVisitor_92E7CB11B5BEAD45509A4A34DFC118DFED4DBD9B">
            <name>LinkerVisitor</name>
        </type>
        <type derived="true" id="type.6c6ad203-d0fc-4e77-a37d-fa1a236b6eae">
            <name>LinkerVisitor&amp;</name>
            <content>
                <baseType ref="class_LinkerVisitor_92E7CB11B5BEAD45509A4A34DFC118DFED4DBD9B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.421b90a6-a49c-4364-b54c-9b07d3bcf8ba">
            <name>LinkerVisitor*</name>
            <content>
                <baseType ref="class_LinkerVisitor_92E7CB11B5BEAD45509A4A34DFC118DFED4DBD9B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.d952f9d9-4f9c-4238-af65-ceba7689fef3" specialization="true">
            <name>List&lt;ActionParser*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.3bcd23cc-75a6-42a6-9c58-eca7f3c363c8"/>
            </content>
        </type>
        <type derived="true" id="type.cfbc2cf9-ea72-46a5-957b-473e7d5ed661">
            <name>List&lt;ActionParser*>&amp;</name>
            <content>
                <baseType ref="type.d952f9d9-4f9c-4238-af65-ceba7689fef3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8737dc3b-6406-42f5-a884-6800c4b3a936">
            <name>List&lt;ActionParser*>&amp;&amp;</name>
            <content>
                <baseType ref="type.d952f9d9-4f9c-4238-af65-ceba7689fef3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2288f4ca-2781-4c08-8144-dd6392ccd395">
            <name>List&lt;ActionParser*>*</name>
            <content>
                <baseType ref="type.d952f9d9-4f9c-4238-af65-ceba7689fef3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.aba8472e-00e1-470c-9c4c-a6830603a364" specialization="true">
            <name>List&lt;Bucket&lt;Grammar*>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.ad3791c4-acdc-4e18-803c-87e46b8ad15d"/>
            </content>
        </type>
        <type derived="true" id="type.b0c54e56-d6e4-4122-8377-e196e89647d6">
            <name>List&lt;Bucket&lt;Grammar*>*>&amp;</name>
            <content>
                <baseType ref="type.aba8472e-00e1-470c-9c4c-a6830603a364"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.99d4e920-2e1b-4094-99e4-1b248e811899">
            <name>List&lt;Bucket&lt;Grammar*>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.aba8472e-00e1-470c-9c4c-a6830603a364"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a0727fc7-ed09-4731-82fc-cd03cd7cda83">
            <name>List&lt;Bucket&lt;Grammar*>*>*</name>
            <content>
                <baseType ref="type.aba8472e-00e1-470c-9c4c-a6830603a364"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.10711801-51a9-45ee-84b1-b162fd57e9b5" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.c4ec49f9-1545-4f27-98a1-8fc5374cd10a"/>
            </content>
        </type>
        <type derived="true" id="type.468a4641-f12f-4fac-b765-4b4177aff577">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.10711801-51a9-45ee-84b1-b162fd57e9b5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.30cf2e16-d83e-43d2-9f62-53eb3e140d48" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.0408eee1-4ffd-4030-9105-070a3bdcea4c"/>
            </content>
        </type>
        <type derived="true" id="type.e155a0d3-c68d-468b-944c-b6b077fb0e4f">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*>&amp;</name>
            <content>
                <baseType ref="type.30cf2e16-d83e-43d2-9f62-53eb3e140d48"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8a9c1e84-b19f-4baa-9779-cd04ab28d51a">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.30cf2e16-d83e-43d2-9f62-53eb3e140d48"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7315244c-6d96-4fdd-8e0d-d93f67e718cd">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*>*</name>
            <content>
                <baseType ref="type.30cf2e16-d83e-43d2-9f62-53eb3e140d48"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.dd3f0afe-0536-4288-af41-056677e8afe1" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.84177fdb-e78e-4297-ac3a-2d7d78bb7587"/>
            </content>
        </type>
        <type derived="true" id="type.698f4157-7dde-4889-b503-11161068e405">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*>&amp;</name>
            <content>
                <baseType ref="type.dd3f0afe-0536-4288-af41-056677e8afe1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.325745ca-1831-4e9e-9213-23655d45f785">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.dd3f0afe-0536-4288-af41-056677e8afe1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7d0d7746-835c-4de5-ab36-883cd5f3bf14">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*>*</name>
            <content>
                <baseType ref="type.dd3f0afe-0536-4288-af41-056677e8afe1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.b0c51aaf-df29-432d-81e7-8c4759415f2b" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.65e62c64-c738-4bcc-9c37-8210ac980fa2"/>
            </content>
        </type>
        <type derived="true" id="type.13bb1333-6a77-4e79-9e4b-daefde37e51d">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*>&amp;</name>
            <content>
                <baseType ref="type.b0c51aaf-df29-432d-81e7-8c4759415f2b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.63a37f3e-d6d0-43f9-84e8-a3af951bec90">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.b0c51aaf-df29-432d-81e7-8c4759415f2b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bec6c1e2-8a1a-4a1c-8087-6c9b8437dac6">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*>*</name>
            <content>
                <baseType ref="type.b0c51aaf-df29-432d-81e7-8c4759415f2b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.c1d9220d-ea84-4510-a831-0eb27fd4aec3" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.326cb0c9-25c5-44e5-b91c-1f1bc0708f3d"/>
            </content>
        </type>
        <type derived="true" id="type.347fe4e8-4917-484a-9560-44ce769c4316">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*>&amp;</name>
            <content>
                <baseType ref="type.c1d9220d-ea84-4510-a831-0eb27fd4aec3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a10eb1a0-b5fd-45f6-87f9-385028bea8cc">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c1d9220d-ea84-4510-a831-0eb27fd4aec3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.27ffe85f-e63c-4f3c-95e7-2d71e1c6e783">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*>*</name>
            <content>
                <baseType ref="type.c1d9220d-ea84-4510-a831-0eb27fd4aec3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.15214e9f-50dd-4d57-a4eb-6606128711b0" specialization="true">
            <name>List&lt;Bucket&lt;String&lt;uchar>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.39145495-6b14-4573-8a83-4ecd78f0caff"/>
            </content>
        </type>
        <type derived="true" id="type.af512be4-9779-47c2-8f83-f9a66c6d370f">
            <name>List&lt;Bucket&lt;String&lt;uchar>>*>&amp;</name>
            <content>
                <baseType ref="type.15214e9f-50dd-4d57-a4eb-6606128711b0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.049077dd-6b71-4721-bbab-e411ddf5b321">
            <name>List&lt;Bucket&lt;String&lt;uchar>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.15214e9f-50dd-4d57-a4eb-6606128711b0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0e9ccd1e-6411-4461-ba1f-b36c98a8cf51">
            <name>List&lt;Bucket&lt;String&lt;uchar>>*>*</name>
            <content>
                <baseType ref="type.15214e9f-50dd-4d57-a4eb-6606128711b0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4bbee38f-110b-4d10-bc93-9dcf2df9c2ce" specialization="true">
            <name>List&lt;Bucket&lt;T>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.187def8d-8e90-4b0a-add9-f09106520202"/>
            </content>
        </type>
        <type derived="true" id="type.25c5d1e2-596a-4d7f-88c4-1b5967074412">
            <name>List&lt;Bucket&lt;T>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4bbee38f-110b-4d10-bc93-9dcf2df9c2ce"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a782f7fd-5afc-47da-92d1-748f94bf8453" specialization="true">
            <name>List&lt;Bucket&lt;ValueType>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.8acef2ca-a4de-4966-80f0-57f202100e34"/>
            </content>
        </type>
        <type derived="true" id="type.ff12a4f0-7b76-498a-a324-0299dcee307a">
            <name>List&lt;Bucket&lt;ValueType>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.a782f7fd-5afc-47da-92d1-748f94bf8453"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.cc93c56e-04c6-4fac-a917-db2c5061bd84" specialization="true">
            <name>List&lt;Namespace*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
            </content>
        </type>
        <type derived="true" id="type.95a5eaa5-bc9f-4ba0-9621-c3a94377ecf8">
            <name>List&lt;Namespace*>&amp;</name>
            <content>
                <baseType ref="type.cc93c56e-04c6-4fac-a917-db2c5061bd84"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c94f52bc-582c-4748-85b9-27f586bf8bc3">
            <name>List&lt;Namespace*>&amp;&amp;</name>
            <content>
                <baseType ref="type.cc93c56e-04c6-4fac-a917-db2c5061bd84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.71b89779-9b5a-4eb9-af6c-216559d521e8">
            <name>List&lt;Namespace*>*</name>
            <content>
                <baseType ref="type.cc93c56e-04c6-4fac-a917-db2c5061bd84"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.eb384c62-c2ac-45c8-9840-7d06ed74380a" specialization="true">
            <name>List&lt;NonterminalParser*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.91cbca83-f260-4058-9c54-09059137b5e4"/>
            </content>
        </type>
        <type derived="true" id="type.02e49fca-f7c6-4120-b910-5c50843bfb17">
            <name>List&lt;NonterminalParser*>&amp;</name>
            <content>
                <baseType ref="type.eb384c62-c2ac-45c8-9840-7d06ed74380a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.28e7fb38-de27-42bf-925f-d17c4e464357">
            <name>List&lt;NonterminalParser*>&amp;&amp;</name>
            <content>
                <baseType ref="type.eb384c62-c2ac-45c8-9840-7d06ed74380a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6f5cb1f8-ae63-4694-90d8-ed34289c53bf">
            <name>List&lt;NonterminalParser*>*</name>
            <content>
                <baseType ref="type.eb384c62-c2ac-45c8-9840-7d06ed74380a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8073a0e9-fb8b-4ec3-8014-f101497e9e6f" specialization="true">
            <name>List&lt;RuleLink*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.085c7307-564a-4004-9bb6-d3d462467d33"/>
            </content>
        </type>
        <type derived="true" id="type.f4c21f77-cb07-44b7-b95e-93d58c13f611">
            <name>List&lt;RuleLink*>&amp;</name>
            <content>
                <baseType ref="type.8073a0e9-fb8b-4ec3-8014-f101497e9e6f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ef98b659-b0e7-4a26-8144-f1fdd12cbc6b">
            <name>List&lt;RuleLink*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8073a0e9-fb8b-4ec3-8014-f101497e9e6f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.df1addd7-c509-4d12-9fd8-d5ca66eab1bc">
            <name>List&lt;RuleLink*>*</name>
            <content>
                <baseType ref="type.8073a0e9-fb8b-4ec3-8014-f101497e9e6f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9368cd32-9562-4a67-aa1b-841245d1b125" specialization="true">
            <name>List&lt;RuleParser*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
            </content>
        </type>
        <type derived="true" id="type.f81a7861-d1d2-413a-b4a4-8a9e10d8f524">
            <name>List&lt;RuleParser*>&amp;</name>
            <content>
                <baseType ref="type.9368cd32-9562-4a67-aa1b-841245d1b125"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ef3c1d7b-a16c-4b29-be52-8a9d7c93c873">
            <name>List&lt;RuleParser*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9368cd32-9562-4a67-aa1b-841245d1b125"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.43788f43-ba5b-4074-b406-f2e4b5e68de2">
            <name>List&lt;RuleParser*>*</name>
            <content>
                <baseType ref="type.9368cd32-9562-4a67-aa1b-841245d1b125"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.a1dd6545-842e-455a-a568-1ccbe3fad759" specialization="true">
            <name>List&lt;String&lt;CharT>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
            </content>
        </type>
        <type derived="true" id="type.512ec15a-5caf-4e02-97a0-73269ed19345">
            <name>List&lt;String&lt;CharT>>&amp;&amp;</name>
            <content>
                <baseType ref="type.a1dd6545-842e-455a-a568-1ccbe3fad759"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.163f3853-9fa5-4cb3-be1c-c96911775488" specialization="true">
            <name>List&lt;System.Text.Parsing.AttrOrVar></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
            </content>
        </type>
        <type derived="true" id="type.7ae4ea3b-31ac-48c9-bc11-9fc17cd25c14">
            <name>List&lt;System.Text.Parsing.AttrOrVar>&amp;</name>
            <content>
                <baseType ref="type.163f3853-9fa5-4cb3-be1c-c96911775488"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.be2fd503-787e-4ef7-a33f-c5099510f84f">
            <name>List&lt;System.Text.Parsing.AttrOrVar>&amp;&amp;</name>
            <content>
                <baseType ref="type.163f3853-9fa5-4cb3-be1c-c96911775488"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e70a43a4-19b2-470b-99b8-7d4bfd6f6b85">
            <name>List&lt;System.Text.Parsing.AttrOrVar>*</name>
            <content>
                <baseType ref="type.163f3853-9fa5-4cb3-be1c-c96911775488"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.12209dc6-4a69-48db-94b1-3fbd95d50cc7" specialization="true">
            <name>List&lt;System.Text.Parsing.CharRange></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
            </content>
        </type>
        <type derived="true" id="type.fefb8c68-bb51-4c26-9a58-a357f60f4ea3">
            <name>List&lt;System.Text.Parsing.CharRange>&amp;</name>
            <content>
                <baseType ref="type.12209dc6-4a69-48db-94b1-3fbd95d50cc7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11fa5c19-5dff-4c56-9583-f7344499a2f2">
            <name>List&lt;System.Text.Parsing.CharRange>&amp;&amp;</name>
            <content>
                <baseType ref="type.12209dc6-4a69-48db-94b1-3fbd95d50cc7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.542f47ad-4c7b-4002-a875-b465bd05a156">
            <name>List&lt;System.Text.Parsing.CharRange>*</name>
            <content>
                <baseType ref="type.12209dc6-4a69-48db-94b1-3fbd95d50cc7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.69eb3c01-d1ef-4fdf-a4ec-3cad363d145a" specialization="true">
            <name>List&lt;System.Text.Parsing.RuleData></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
            </content>
        </type>
        <type derived="true" id="type.69872f45-5d15-4f42-8ccb-0100f22b5db9">
            <name>List&lt;System.Text.Parsing.RuleData>&amp;</name>
            <content>
                <baseType ref="type.69eb3c01-d1ef-4fdf-a4ec-3cad363d145a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.699f70be-b6cf-4adf-9b53-bc8b91dfed85">
            <name>List&lt;System.Text.Parsing.RuleData>&amp;&amp;</name>
            <content>
                <baseType ref="type.69eb3c01-d1ef-4fdf-a4ec-3cad363d145a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7fd628a9-c2e5-4a97-8c26-754be3ae6636">
            <name>List&lt;System.Text.Parsing.RuleData>*</name>
            <content>
                <baseType ref="type.69eb3c01-d1ef-4fdf-a4ec-3cad363d145a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="998b6c44-792d-4efd-ac23-12cdabf7a36f"/>
            </content>
        </type>
        <type derived="true" id="type.733c8d6c-038a-4a29-b43c-7290cc6e3463">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0ac8875c-45dd-433d-ae84-c73aae84fd70">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0f135e1d-5fc9-45c4-a03f-ebfef50be4f1">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.7424ce3b-e581-429a-93ed-24be04c68e1a" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
            </content>
        </type>
        <type derived="true" id="type.c1afc5c2-32d5-4d30-8e3c-c2117d8d8f8b">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>>&amp;&amp;</name>
            <content>
                <baseType ref="type.7424ce3b-e581-429a-93ed-24be04c68e1a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9293e032-c126-417c-8826-c6dd092a23be" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.Context>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
            </content>
        </type>
        <type derived="true" id="type.a60a93e6-9c4d-45b4-b7ce-089e965a19d5">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.Context>>&amp;</name>
            <content>
                <baseType ref="type.9293e032-c126-417c-8826-c6dd092a23be"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eff7279d-fd45-426d-a830-5897a934227d">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.Context>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9293e032-c126-417c-8826-c6dd092a23be"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f18c7804-d324-4983-af79-666d592f709d">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.Context>>*</name>
            <content>
                <baseType ref="type.9293e032-c126-417c-8826-c6dd092a23be"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.d3628896-cbc9-4b0f-881b-5ebbac82905d" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.Object>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
            </content>
        </type>
        <type derived="true" id="type.8a0e36bb-8a45-47f0-a1ec-aedb2cd5fd0c">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp;</name>
            <content>
                <baseType ref="type.d3628896-cbc9-4b0f-881b-5ebbac82905d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b9cabe4e-00c4-4699-a9f5-d70e84de7eaf">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp;&amp;</name>
            <content>
                <baseType ref="type.d3628896-cbc9-4b0f-881b-5ebbac82905d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9ee6f8cd-763f-44d5-bd3c-51156038daab">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.Object>>*</name>
            <content>
                <baseType ref="type.d3628896-cbc9-4b0f-881b-5ebbac82905d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.78c83cc4-333c-423a-ac2c-879b677de054" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
            </content>
        </type>
        <type derived="true" id="type.07693714-3208-42d9-82ca-cf283b4432f6">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>>&amp;</name>
            <content>
                <baseType ref="type.78c83cc4-333c-423a-ac2c-879b677de054"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.70f43648-796d-4996-8d61-fd2a91e2153b">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>>&amp;&amp;</name>
            <content>
                <baseType ref="type.78c83cc4-333c-423a-ac2c-879b677de054"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.971f1f4f-c7f3-482a-b5c7-15fbc9ddfec7">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>>*</name>
            <content>
                <baseType ref="type.78c83cc4-333c-423a-ac2c-879b677de054"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.a034d385-fce1-4a57-92aa-3d28f35483b1" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
            </content>
        </type>
        <type derived="true" id="type.faed431d-975f-4cd2-a32c-db028f2fab6f">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>>&amp;</name>
            <content>
                <baseType ref="type.a034d385-fce1-4a57-92aa-3d28f35483b1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2caa9baa-a82b-4603-9cc3-b50b514ae038">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>>&amp;&amp;</name>
            <content>
                <baseType ref="type.a034d385-fce1-4a57-92aa-3d28f35483b1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fd582d18-d5b0-4247-b9d8-dda954588160">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>>*</name>
            <content>
                <baseType ref="type.a034d385-fce1-4a57-92aa-3d28f35483b1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ListParser_6C5E029D107D595D5B50385D50A9B16ABEBE48E6">
            <name>ListParser</name>
        </type>
        <type derived="true" id="type.57f36d06-9f22-4dd4-a3dd-3edd78facbd2">
            <name>ListParser&amp;</name>
            <content>
                <baseType ref="class_ListParser_6C5E029D107D595D5B50385D50A9B16ABEBE48E6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5b828d8a-b81b-47cb-b689-d0034ef2021a">
            <name>ListParser*</name>
            <content>
                <baseType ref="class_ListParser_6C5E029D107D595D5B50385D50A9B16ABEBE48E6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eac95ceb-fb3f-4f71-a317-70a287905dc8">
            <name>Literal&amp;&amp;</name>
            <content>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1" specialization="true">
            <name>LockGuard&lt;Mtx></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="17f0a187-2da0-4e25-9e8c-a86eb1ce1f8f"/>
            </content>
        </type>
        <type derived="true" id="type.be9cb6cf-6877-4943-9d38-d71745b461d4">
            <name>LockGuard&lt;Mtx>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.fa4abbcc-d5c3-4d23-a6d1-a05311f67255" specialization="true">
            <name>LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.e0206c9a-b2bc-466c-acec-40a1d98de5c7">
            <name>LockGuard&lt;System.Threading.Mutex>&amp;&amp;</name>
            <content>
                <baseType ref="type.fa4abbcc-d5c3-4d23-a6d1-a05311f67255"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_LowerLetterParser_E9090D72F69FFF9253FCC31853EDA189052E5F70">
            <name>LowerLetterParser</name>
        </type>
        <type derived="true" id="type.af1e8b01-7bd2-4575-ab4c-65815f2e017f">
            <name>LowerLetterParser&amp;</name>
            <content>
                <baseType ref="class_LowerLetterParser_E9090D72F69FFF9253FCC31853EDA189052E5F70"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e83f1885-4c00-49ae-a590-0f175203f48b">
            <name>LowerLetterParser*</name>
            <content>
                <baseType ref="class_LowerLetterParser_E9090D72F69FFF9253FCC31853EDA189052E5F70"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.561169ec-b16a-4bae-8118-464adda46e08">
            <name>LvalueRef&amp;&amp;</name>
            <content>
                <baseType ref="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_MarkParser_B14EEC34C28AB3CECAE517086AD43EDFFAF8E52A">
            <name>MarkParser</name>
        </type>
        <type derived="true" id="type.9e501bfb-2a5e-422a-8786-ccdd7497b344">
            <name>MarkParser&amp;</name>
            <content>
                <baseType ref="class_MarkParser_B14EEC34C28AB3CECAE517086AD43EDFFAF8E52A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0eb176e3-ec07-45de-b1c5-7e644453cb8d">
            <name>MarkParser*</name>
            <content>
                <baseType ref="class_MarkParser_B14EEC34C28AB3CECAE517086AD43EDFFAF8E52A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E">
            <name>Match</name>
        </type>
        <type derived="true" id="type.5514ac33-fa40-45f4-99c2-e794c4493a6a">
            <name>Match&amp;</name>
            <content>
                <baseType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90eba3fe-2794-4811-901f-20856609ace9">
            <name>Match&amp;&amp;</name>
            <content>
                <baseType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.626a1779-db1d-48bc-8959-dbc0b46a5109">
            <name>Match*</name>
            <content>
                <baseType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_MathSymbolParser_0960D3ACEF2D8F2A35CDE8C263D1C178E92D0AB6">
            <name>MathSymbolParser</name>
        </type>
        <type derived="true" id="type.6f70efd8-c3d9-4aac-8bc7-c237e91338d9">
            <name>MathSymbolParser&amp;</name>
            <content>
                <baseType ref="class_MathSymbolParser_0960D3ACEF2D8F2A35CDE8C263D1C178E92D0AB6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.424b5c24-67e1-4714-bf21-d548228a9f29">
            <name>MathSymbolParser*</name>
            <content>
                <baseType ref="class_MathSymbolParser_0960D3ACEF2D8F2A35CDE8C263D1C178E92D0AB6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ModifierLetterParser_F521D6EB139B02380EEF8F896E33A367C02CBABD">
            <name>ModifierLetterParser</name>
        </type>
        <type derived="true" id="type.4b14105a-df54-4a51-abf9-4f64219329e3">
            <name>ModifierLetterParser&amp;</name>
            <content>
                <baseType ref="class_ModifierLetterParser_F521D6EB139B02380EEF8F896E33A367C02CBABD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b6bf3d26-44c4-4109-bb2c-cd928ef3fb8f">
            <name>ModifierLetterParser*</name>
            <content>
                <baseType ref="class_ModifierLetterParser_F521D6EB139B02380EEF8F896E33A367C02CBABD"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ModifierSymbolParser_33606880C86B88E8F1CDAB2FACCC0A695B112F3A">
            <name>ModifierSymbolParser</name>
        </type>
        <type derived="true" id="type.f570372a-e52f-4813-bfa4-a967f89c0a60">
            <name>ModifierSymbolParser&amp;</name>
            <content>
                <baseType ref="class_ModifierSymbolParser_33606880C86B88E8F1CDAB2FACCC0A695B112F3A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.82d8fa3e-9338-4dfb-9c0e-e7aac70bf7c5">
            <name>ModifierSymbolParser*</name>
            <content>
                <baseType ref="class_ModifierSymbolParser_33606880C86B88E8F1CDAB2FACCC0A695B112F3A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9af97e0d-45e9-4820-9fab-6940afbe57f5">
            <name>Mtx&amp;</name>
            <content>
                <baseType ref="17f0a187-2da0-4e25-9e8c-a86eb1ce1f8f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4">
            <name>Namespace</name>
        </type>
        <type derived="true" id="type.da30ecaa-d882-4b04-8edb-efc8c9aa1c65">
            <name>Namespace&amp;</name>
            <content>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed">
            <name>Namespace*</name>
            <content>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8a0cc8a4-adbf-497b-81f5-355eb7679e06">
            <name>Namespace*&amp;</name>
            <content>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6cc06cfc-b2d7-4f09-a4fe-8c8a98c933b9">
            <name>Namespace*&amp;&amp;</name>
            <content>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fe346bc5-8057-4b6f-9540-04aa5a8bc46e">
            <name>Namespace**</name>
            <content>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.36f90ce8-b868-4580-989d-5819a4d6f225">
            <name>Namespace**&amp;</name>
            <content>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e314289c-9569-435d-b9b3-52509aed474a">
            <name>Namespace**&amp;&amp;</name>
            <content>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3a042781-c029-488f-b944-dd5c2fa0979b">
            <name>Namespace***</name>
            <content>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d221115f-be9d-4b28-96c6-6d12eb26c16f">
            <name>New&amp;&amp;</name>
            <content>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_NonspacingMarkParser_77C0D960D80024D464FB412D04C55ACE03242DEE">
            <name>NonspacingMarkParser</name>
        </type>
        <type derived="true" id="type.8f384c2d-7f49-4363-93b4-8fa9d2561f79">
            <name>NonspacingMarkParser&amp;</name>
            <content>
                <baseType ref="class_NonspacingMarkParser_77C0D960D80024D464FB412D04C55ACE03242DEE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f548d3cb-e0d8-4d07-88e2-2f57b78312f1">
            <name>NonspacingMarkParser*</name>
            <content>
                <baseType ref="class_NonspacingMarkParser_77C0D960D80024D464FB412D04C55ACE03242DEE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348">
            <name>NonterminalParser</name>
        </type>
        <type derived="true" id="type.51055218-9737-4d84-8d1c-2de41ce4d6e1">
            <name>NonterminalParser&amp;</name>
            <content>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.91cbca83-f260-4058-9c54-09059137b5e4">
            <name>NonterminalParser*</name>
            <content>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.19942914-7073-4ccc-b396-a2c22875fd96">
            <name>NonterminalParser*&amp;</name>
            <content>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2cf3f1db-313f-444a-b5cb-c928a4b27744">
            <name>NonterminalParser*&amp;&amp;</name>
            <content>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3e2c08a2-a6a9-4bef-bd8d-25f9a27ba405">
            <name>NonterminalParser**</name>
            <content>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b9c88984-3532-48bb-87bd-08fd44b77252">
            <name>NonterminalParser**&amp;</name>
            <content>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b5800967-4005-4e53-a0ec-dc38251ffddc">
            <name>NonterminalParser**&amp;&amp;</name>
            <content>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.00a5ae26-341e-40b6-b091-a0d7a33affce">
            <name>NonterminalParser***</name>
            <content>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.168a0475-be22-443c-ab81-b30ad43306a9">
            <name>Not&amp;&amp;</name>
            <content>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_NumberParser_C6AC535F4CF08D081B4EF82D22F3328637E3FC7A">
            <name>NumberParser</name>
        </type>
        <type derived="true" id="type.b786d5eb-cdb7-43e4-a7fd-0dbfcf1ff0e7">
            <name>NumberParser&amp;</name>
            <content>
                <baseType ref="class_NumberParser_C6AC535F4CF08D081B4EF82D22F3328637E3FC7A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3866ee72-9d3c-4bf4-9e96-fe3394ca7624">
            <name>NumberParser*</name>
            <content>
                <baseType ref="class_NumberParser_C6AC535F4CF08D081B4EF82D22F3328637E3FC7A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66">
            <name>Object</name>
        </type>
        <type derived="true" id="type.2af246fd-e1bd-4a7b-8e4b-61f592220c14">
            <name>Object&amp;</name>
            <content>
                <baseType ref="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.974ddd33-6c28-4a3d-a539-5e1e9e44d438">
            <name>Object*</name>
            <content>
                <baseType ref="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.49b4c2ea-e44a-4261-bdf6-f08bfa9e1aa7">
            <name>Object*&amp;</name>
            <content>
                <baseType ref="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f8baea66-8cfe-4f04-9d7d-325ac0289ac7">
            <name>Object**</name>
            <content>
                <baseType ref="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_OpenPunctuationParser_D86559E7718C6E51274F05C4E573EDA35EF670B3">
            <name>OpenPunctuationParser</name>
        </type>
        <type derived="true" id="type.c43c33c3-82ab-4878-854d-c30eb041b5d5">
            <name>OpenPunctuationParser&amp;</name>
            <content>
                <baseType ref="class_OpenPunctuationParser_D86559E7718C6E51274F05C4E573EDA35EF670B3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bf1f1cdf-e29b-482a-a95d-da82d39bdda3">
            <name>OpenPunctuationParser*</name>
            <content>
                <baseType ref="class_OpenPunctuationParser_D86559E7718C6E51274F05C4E573EDA35EF670B3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A">
            <name>OptionalParser</name>
        </type>
        <type derived="true" id="type.d81d3e87-4aec-494b-ae6e-d2ff90e8cfaf">
            <name>OptionalParser&amp;</name>
            <content>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.be891412-99a8-4a23-bba2-f952c6989437">
            <name>OptionalParser&amp;&amp;</name>
            <content>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.97c34687-8a84-4441-bcd0-60b29368f247">
            <name>OptionalParser*</name>
            <content>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_OtherLetterParser_819A69E6334348DB437B88300F19EFE0E795AFA9">
            <name>OtherLetterParser</name>
        </type>
        <type derived="true" id="type.0f56a0e0-b7e8-4dfd-a681-1ec5e478fbfc">
            <name>OtherLetterParser&amp;</name>
            <content>
                <baseType ref="class_OtherLetterParser_819A69E6334348DB437B88300F19EFE0E795AFA9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4b886cfa-d746-4c90-8746-ce6fedaeabbf">
            <name>OtherLetterParser*</name>
            <content>
                <baseType ref="class_OtherLetterParser_819A69E6334348DB437B88300F19EFE0E795AFA9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_OtherNumberParser_5E44F04780E5AF76882D4398BCF95F19900B6F58">
            <name>OtherNumberParser</name>
        </type>
        <type derived="true" id="type.e4414450-6605-4ec0-b275-a0d07e6fc6ae">
            <name>OtherNumberParser&amp;</name>
            <content>
                <baseType ref="class_OtherNumberParser_5E44F04780E5AF76882D4398BCF95F19900B6F58"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ef9150fe-261f-457d-849c-a8cc10fd459d">
            <name>OtherNumberParser*</name>
            <content>
                <baseType ref="class_OtherNumberParser_5E44F04780E5AF76882D4398BCF95F19900B6F58"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_OtherParser_24F37841D60C93B62B7FDD5DFEFF977254540B60">
            <name>OtherParser</name>
        </type>
        <type derived="true" id="type.d0872f26-6aa2-4c78-8cee-edc1ea745a8d">
            <name>OtherParser&amp;</name>
            <content>
                <baseType ref="class_OtherParser_24F37841D60C93B62B7FDD5DFEFF977254540B60"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.07047382-46ac-401d-a446-b65d0d80a641">
            <name>OtherParser*</name>
            <content>
                <baseType ref="class_OtherParser_24F37841D60C93B62B7FDD5DFEFF977254540B60"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_OtherPunctuationParser_642E6FBEFE02269CFF5F054BE3C0A5F152B99813">
            <name>OtherPunctuationParser</name>
        </type>
        <type derived="true" id="type.96fc7efc-dd32-460c-b2bf-ed81161fcb96">
            <name>OtherPunctuationParser&amp;</name>
            <content>
                <baseType ref="class_OtherPunctuationParser_642E6FBEFE02269CFF5F054BE3C0A5F152B99813"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5886e57d-2f8b-4ecc-8191-c5f9f4689bf7">
            <name>OtherPunctuationParser*</name>
            <content>
                <baseType ref="class_OtherPunctuationParser_642E6FBEFE02269CFF5F054BE3C0A5F152B99813"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_OtherSymbolParser_A5097353A1C3851E3352A7223FF3BF4131CC203D">
            <name>OtherSymbolParser</name>
        </type>
        <type derived="true" id="type.5d0442a8-9cff-45e5-8f10-d9277f22d640">
            <name>OtherSymbolParser&amp;</name>
            <content>
                <baseType ref="class_OtherSymbolParser_A5097353A1C3851E3352A7223FF3BF4131CC203D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d9b696f9-b3e8-4c41-b3ef-20d594765d63">
            <name>OtherSymbolParser*</name>
            <content>
                <baseType ref="class_OtherSymbolParser_A5097353A1C3851E3352A7223FF3BF4131CC203D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.70e30942-eb13-4516-a5e9-f3bc833d662a" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.d3de4bc2-8e97-49ca-bb00-3799303b41a0"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type derived="true" id="type.46bb01d2-35d0-4f2f-b25f-20c4a28cd668">
            <name>Pair&lt;HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.70e30942-eb13-4516-a5e9-f3bc833d662a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5866a6c2-5f91-46c4-9302-df41fd9e42a7">
            <name>Pair&lt;HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.70e30942-eb13-4516-a5e9-f3bc833d662a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.85d8c62f-4606-40bc-a7d8-42543eafa8b3">
            <name>Pair&lt;HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>, bool>*</name>
            <content>
                <baseType ref="type.70e30942-eb13-4516-a5e9-f3bc833d662a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.2d019ce9-3f1e-43d9-9d09-796f491c0ed2" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.3dfaee5c-06e9-404d-b4df-b7e4204c912c"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type derived="true" id="type.91aa9b18-df66-42ce-94d9-073cf3d2d373">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.2d019ce9-3f1e-43d9-9d09-796f491c0ed2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.95d94fff-458b-4804-a36e-bb908eb58f91">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.2d019ce9-3f1e-43d9-9d09-796f491c0ed2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d07f204a-0231-4541-914f-92bf4144fb60">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.2d019ce9-3f1e-43d9-9d09-796f491c0ed2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.096dbe7f-c373-4da1-a42f-2b8c527820f2" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.3fd4fd11-315c-46a1-9812-8fb8a140fc83"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type derived="true" id="type.708311f4-6e37-4ad4-9913-2be9b0fc08d2">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.096dbe7f-c373-4da1-a42f-2b8c527820f2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4aa6bcab-6241-4743-a7e9-bd2e479aa214">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.096dbe7f-c373-4da1-a42f-2b8c527820f2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2aa15c45-284e-47b5-88c1-c4f219f62b37">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.096dbe7f-c373-4da1-a42f-2b8c527820f2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.aca05d84-9932-48da-9bcf-d7f4345da02a" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9d9d4fa9-8244-43a6-8217-2c71b4abe240"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type derived="true" id="type.714054bc-f537-43b9-b665-e52d8c86f375">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.aca05d84-9932-48da-9bcf-d7f4345da02a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90f76ddd-c39e-4441-aa8c-a55d7e2da755">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.aca05d84-9932-48da-9bcf-d7f4345da02a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.59a005a4-75e1-4761-a770-9948680b31b2">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.aca05d84-9932-48da-9bcf-d7f4345da02a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.0951c156-3e69-4c28-9405-38b46b130776" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.1c7c0d67-3fca-41b2-9c3e-2002a3357cb4"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type derived="true" id="type.09e5f0b4-230c-428a-9db6-d19f4583faf5">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.0951c156-3e69-4c28-9405-38b46b130776"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.13c699f7-b723-48b8-a0ee-b88287a963cc">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.0951c156-3e69-4c28-9405-38b46b130776"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8787179d-0e94-4515-bd7e-64d3a4529c42">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.0951c156-3e69-4c28-9405-38b46b130776"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9c7fe00b-0f7c-4070-9bc4-37f4303512e2" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.38036b23-1991-4b78-a0c8-2d67ac034833"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type id="type.97cdb615-a47f-411e-96f2-f23d81cd951e" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.3c1139a5-781d-4122-8871-071666a474e1"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type id="type.9c7fe00b-0f7c-4070-9bc4-37f4303512e2" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.38036b23-1991-4b78-a0c8-2d67ac034833"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type derived="true" id="type.fe9c2519-7284-45ae-ad16-88d28550f3d9">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9c7fe00b-0f7c-4070-9bc4-37f4303512e2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.db2575a9-de00-458c-899a-28f15adfdf55">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.97cdb615-a47f-411e-96f2-f23d81cd951e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fe9c2519-7284-45ae-ad16-88d28550f3d9">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9c7fe00b-0f7c-4070-9bc4-37f4303512e2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b7e2648b-127d-418d-9d75-d5e57ebf242a">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.9c7fe00b-0f7c-4070-9bc4-37f4303512e2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ed3a8846-364a-44a2-a4e5-7d4f6c881e95">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.9c7fe00b-0f7c-4070-9bc4-37f4303512e2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f146f8e3-8114-4b85-a399-27d1d46173a9">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.97cdb615-a47f-411e-96f2-f23d81cd951e"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ed3a8846-364a-44a2-a4e5-7d4f6c881e95">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.9c7fe00b-0f7c-4070-9bc4-37f4303512e2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.7f61b40c-c589-4738-8c43-d0997c97366d" specialization="true">
            <name>Pair&lt;String&lt;uchar>, Grammar*></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
            </content>
        </type>
        <type derived="true" id="type.6f59d6d6-fbff-49b9-8e92-8fec29a407fa">
            <name>Pair&lt;String&lt;uchar>, Grammar*>&amp;</name>
            <content>
                <baseType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b8937419-3e84-424e-bf12-2f7012209acd">
            <name>Pair&lt;String&lt;uchar>, Grammar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eaab1fd4-afed-49c0-82ec-c0b0ee30d3f4">
            <name>Pair&lt;String&lt;uchar>, Grammar*>*</name>
            <content>
                <baseType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36" specialization="true">
            <name>Pair&lt;String&lt;uchar>, Namespace*></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
            </content>
        </type>
        <type derived="true" id="type.e235ebd7-1669-45e2-97b8-59c7327a7b3c">
            <name>Pair&lt;String&lt;uchar>, Namespace*>&amp;</name>
            <content>
                <baseType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.66ef18ab-4625-4baf-afac-3da67e692f2f">
            <name>Pair&lt;String&lt;uchar>, Namespace*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ac320c1d-5647-4d5d-be3a-c736e47b5d4a">
            <name>Pair&lt;String&lt;uchar>, Namespace*>*</name>
            <content>
                <baseType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.1a71bc78-2d55-4232-9064-277bad81e2b4" specialization="true">
            <name>Pair&lt;String&lt;uchar>, ParsingObject*></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.cd2b767d-81fd-400f-a8de-ad916f3e3357"/>
            </content>
        </type>
        <type derived="true" id="type.ad984a53-5459-4df0-ba47-62ac5fd6f4eb">
            <name>Pair&lt;String&lt;uchar>, ParsingObject*>&amp;</name>
            <content>
                <baseType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7ba9d7c0-ecfc-4b57-bbdf-e368aa9ad169">
            <name>Pair&lt;String&lt;uchar>, ParsingObject*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6b2360a9-f90e-4aae-a499-58253b93e3bf">
            <name>Pair&lt;String&lt;uchar>, ParsingObject*>*</name>
            <content>
                <baseType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6" specialization="true">
            <name>Pair&lt;String&lt;uchar>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.6afc8371-8bf1-4465-9e16-e80cb9616633">
            <name>Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eddcf19b-2ba1-4825-9796-d27b3f86ba42">
            <name>Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e9a9657a-99d8-419d-abad-23a63645eca3">
            <name>Pair&lt;String&lt;uchar>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9" specialization="true">
            <name>Pair&lt;T, U></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="44d71f6d-e4f6-475c-b58f-d89b068d5bf3"/>
                <argumentType ref="5b598b4e-706a-400b-ac2f-6299b3dcb323"/>
            </content>
        </type>
        <type id="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9" specialization="true">
            <name>Pair&lt;T, U></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="170940f2-876b-462a-af93-f8878fb19cf2"/>
                <argumentType ref="2df605e5-b653-4b8e-ae34-764906a561f9"/>
            </content>
        </type>
        <type id="class_ParagraphSeparatorParser_9F58A4F5735238FB34B93B7A180B0EC20131F987">
            <name>ParagraphSeparatorParser</name>
        </type>
        <type derived="true" id="type.76427ec8-7ad9-4a6b-8e60-8083b70ed20b">
            <name>ParagraphSeparatorParser&amp;</name>
            <content>
                <baseType ref="class_ParagraphSeparatorParser_9F58A4F5735238FB34B93B7A180B0EC20131F987"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.792bb03d-0bd5-4528-a4bf-20a81cb0201a">
            <name>ParagraphSeparatorParser*</name>
            <content>
                <baseType ref="class_ParagraphSeparatorParser_9F58A4F5735238FB34B93B7A180B0EC20131F987"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D">
            <name>Parser</name>
        </type>
        <type derived="true" id="type.1b31de71-3b15-4936-a0a2-97d02c00216a">
            <name>Parser&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a5b3f3df-a396-4628-80ba-45b5984af1ba">
            <name>Parser&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0aeb935c-435f-4486-b242-fb21c6b7b5c9">
            <name>Parser&amp;&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.761cc9b4-5437-4aaa-9033-46dca03f69e1">
            <name>Parser*</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e17eda4b-76d7-48ec-914b-1aea2d669379">
            <name>Parser*</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ace58151-6b3a-48b5-baa7-3957fede1a16">
            <name>Parser*&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ac48131a-11a3-4d58-9f5e-afb74d5805a3">
            <name>Parser*&amp;&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d667147a-9189-4944-ac1c-311f9fda1642">
            <name>Parser**</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="37dc5721-3977-479f-ac14-288ec050ec54">
            <name>ParsingAction</name>
        </type>
        <type derived="true" id="type.8a2cdf57-10f7-44fc-9c48-6f7b3b5496b0">
            <name>ParsingAction&amp;</name>
            <content>
                <baseType ref="37dc5721-3977-479f-ac14-288ec050ec54"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.56ebff44-b7ea-46dc-8993-7109268c2389">
            <name>ParsingAction&amp;&amp;</name>
            <content>
                <baseType ref="37dc5721-3977-479f-ac14-288ec050ec54"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.df937fe5-a218-486c-9438-9d2517d5880d">
            <name>ParsingAction*</name>
            <content>
                <baseType ref="37dc5721-3977-479f-ac14-288ec050ec54"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B">
            <name>ParsingData</name>
        </type>
        <type derived="true" id="type.f32567f5-edf1-4fc0-ae40-15f4b0e91579">
            <name>ParsingData&amp;</name>
            <content>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4f475177-6695-40b4-b212-0f1c3112e344">
            <name>ParsingData&amp;&amp;</name>
            <content>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.25c3202f-b604-4f69-8ed8-0cb0c592fa3f">
            <name>ParsingData*</name>
            <content>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1a971ef8-86a8-4be6-bd8c-ce39ac6c8796">
            <name>ParsingData*&amp;</name>
            <content>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dc3bbe1a-6177-4d43-bc45-025e5c4e630d">
            <name>ParsingData**</name>
            <content>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87">
            <name>ParsingDomain</name>
        </type>
        <type derived="true" id="type.6a1030ca-0bd9-4558-acf4-5bcea61fe0b4">
            <name>ParsingDomain&amp;</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4db7cea8-c273-471e-a117-8767bff4e4a4">
            <name>ParsingDomain&amp;</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6a1030ca-0bd9-4558-acf4-5bcea61fe0b4">
            <name>ParsingDomain&amp;</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.07ad07cf-b4bd-4e28-827a-5ee26a9500ec">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.de7ef6fa-4b99-41a1-8d2d-5f5986f2e96e">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a4816901-d296-4df0-abe7-09d1b47ec4ea">
            <name>ParsingDomain*&amp;</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ce3fb1f4-1a2e-49d7-abcc-0b3a5f70637f">
            <name>ParsingDomain**</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ParsingDomainRepository_6B37F4A004B12A4113D51526D06BF8A1881556E4">
            <name>ParsingDomainRepository</name>
        </type>
        <type derived="true" id="type.6028226b-46f2-44ec-b2cc-87fad745e0fc">
            <name>ParsingDomainRepository&amp;</name>
            <content>
                <baseType ref="class_ParsingDomainRepository_6B37F4A004B12A4113D51526D06BF8A1881556E4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.03e62d40-df81-4a88-9ebc-dfb3d63ce904">
            <name>ParsingDomainRepository*</name>
            <content>
                <baseType ref="class_ParsingDomainRepository_6B37F4A004B12A4113D51526D06BF8A1881556E4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.33f63553-376a-4e45-a68d-2b811f2223a8">
            <name>ParsingDomainRepository*&amp;</name>
            <content>
                <baseType ref="class_ParsingDomainRepository_6B37F4A004B12A4113D51526D06BF8A1881556E4"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4818a5ee-830b-4ab8-8b58-6746c4cac23c">
            <name>ParsingDomainRepository**</name>
            <content>
                <baseType ref="class_ParsingDomainRepository_6B37F4A004B12A4113D51526D06BF8A1881556E4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396">
            <name>ParsingException</name>
        </type>
        <type derived="true" id="type.4b31abf0-fc3f-4976-a266-222180395a1a">
            <name>ParsingException&amp;</name>
            <content>
                <baseType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9aeb97fa-7aa3-4d03-96f5-fb79bb9e4f2d">
            <name>ParsingException&amp;&amp;</name>
            <content>
                <baseType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2ac71ad0-8166-4f71-b40f-784d43d8b5a8">
            <name>ParsingException*</name>
            <content>
                <baseType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1faaa369-863f-4a1c-b1a9-51aecb5a7fb4">
            <name>ParsingException*&amp;</name>
            <content>
                <baseType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f11f109d-ef57-42de-ab71-473d16e467bc">
            <name>ParsingException**</name>
            <content>
                <baseType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34">
            <name>ParsingObject</name>
        </type>
        <type derived="true" id="type.ac5cf9c6-c1cf-4346-8c22-a6aeaae2ec2f">
            <name>ParsingObject&amp;</name>
            <content>
                <baseType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bca0758b-9956-4546-8864-02b19f4a2f2f">
            <name>ParsingObject&amp;&amp;</name>
            <content>
                <baseType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cd2b767d-81fd-400f-a8de-ad916f3e3357">
            <name>ParsingObject*</name>
            <content>
                <baseType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1f261c8c-8c67-4a1d-9d27-1dbd94d2616c">
            <name>ParsingObject*&amp;</name>
            <content>
                <baseType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0dc2c46a-b551-474b-ad13-8740afab85cf">
            <name>ParsingObject*&amp;&amp;</name>
            <content>
                <baseType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a5ec9fd5-d779-406a-9cb7-c069c05dfc0c">
            <name>ParsingObject**</name>
            <content>
                <baseType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ba51ef51-4e57-45e1-9663-cf1452c53871">
            <name>Pointer&amp;&amp;</name>
            <content>
                <baseType ref="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502">
            <name>PositiveParser</name>
        </type>
        <type derived="true" id="type.709ac1f3-e365-4145-b507-42e9781c47f3">
            <name>PositiveParser&amp;</name>
            <content>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5b573e69-a233-4fc3-ba25-52f85a174635">
            <name>PositiveParser&amp;&amp;</name>
            <content>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1a56a2f3-f97d-4994-9839-d706b9b350c4">
            <name>PositiveParser*</name>
            <content>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="8a8c3416-9875-44c1-989c-a914b658e94b">
            <name>PostCall</name>
        </type>
        <type derived="true" id="type.3aed1c50-1a34-4d84-8209-736a9f3d96ed">
            <name>PostCall&amp;</name>
            <content>
                <baseType ref="8a8c3416-9875-44c1-989c-a914b658e94b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b5621fb1-456d-4e0c-9915-a03d59715db9">
            <name>PostCall&amp;&amp;</name>
            <content>
                <baseType ref="8a8c3416-9875-44c1-989c-a914b658e94b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d581fe77-4e9f-48c8-bbe7-45793f03fdf7">
            <name>PostCall*</name>
            <content>
                <baseType ref="8a8c3416-9875-44c1-989c-a914b658e94b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.db360614-7c93-4e54-ac13-8897acdffebf">
            <name>PostfixDecrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.aec0a96d-b773-46c5-af47-a6edd9e7afbe">
            <name>PostfixIncrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="df57030a-b7b4-454f-a0e5-0b81e12f2266">
            <name>PreCall</name>
        </type>
        <type derived="true" id="type.d4f41a87-ec9c-45c2-a7ac-5862aa6b1499">
            <name>PreCall&amp;</name>
            <content>
                <baseType ref="df57030a-b7b4-454f-a0e5-0b81e12f2266"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.84c7a670-8037-4c17-89d8-a62bec7749d0">
            <name>PreCall&amp;&amp;</name>
            <content>
                <baseType ref="df57030a-b7b4-454f-a0e5-0b81e12f2266"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6066e7e5-6c5c-432b-a944-d6c8448d4ca6">
            <name>PreCall*</name>
            <content>
                <baseType ref="df57030a-b7b4-454f-a0e5-0b81e12f2266"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b9a6cfb6-79fd-4a11-9b8d-eb692edb332c">
            <name>PrefixDecrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a65c082f-06c0-4bdc-a706-dfb5e0f29adc">
            <name>PrefixIncrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_PrivateUseParser_C4511180B4C5389C10E1979630653AC168E71F95">
            <name>PrivateUseParser</name>
        </type>
        <type derived="true" id="type.b8cb30ca-c72f-4a05-bafa-8c03916de01a">
            <name>PrivateUseParser&amp;</name>
            <content>
                <baseType ref="class_PrivateUseParser_C4511180B4C5389C10E1979630653AC168E71F95"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7d420763-7034-4b3b-b0f7-da83a6bc8a05">
            <name>PrivateUseParser*</name>
            <content>
                <baseType ref="class_PrivateUseParser_C4511180B4C5389C10E1979630653AC168E71F95"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PunctuationParser_CFAC6556C1168A91712DB882C5D1B9DB5F5237BE">
            <name>PunctuationParser</name>
        </type>
        <type derived="true" id="type.a51b1edc-8f97-41ef-bc21-1bf67a108507">
            <name>PunctuationParser&amp;</name>
            <content>
                <baseType ref="class_PunctuationParser_CFAC6556C1168A91712DB882C5D1B9DB5F5237BE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.17e1868f-687d-416a-a6f2-151221dac7e6">
            <name>PunctuationParser*</name>
            <content>
                <baseType ref="class_PunctuationParser_CFAC6556C1168A91712DB882C5D1B9DB5F5237BE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.6d051cb0-f19b-4e53-84b3-138ff3fce7a9" specialization="true">
            <name>RandomAccessIter&lt;ActionParser*, ActionParser*&amp;, ActionParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3bcd23cc-75a6-42a6-9c58-eca7f3c363c8"/>
                <argumentType ref="type.aad1e39a-890d-4605-bcc6-71eec59a881d"/>
                <argumentType ref="type.ee89728f-a074-4f08-9873-435ca7aef1eb"/>
            </content>
        </type>
        <type derived="true" id="type.edc39db3-b9cc-430d-92e9-085fa2901a10">
            <name>RandomAccessIter&lt;ActionParser*, ActionParser*&amp;, ActionParser**>&amp;</name>
            <content>
                <baseType ref="type.6d051cb0-f19b-4e53-84b3-138ff3fce7a9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f06bed0e-4409-4f48-936f-7f831d258782">
            <name>RandomAccessIter&lt;ActionParser*, ActionParser*&amp;, ActionParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.6d051cb0-f19b-4e53-84b3-138ff3fce7a9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.10ef4d9b-2c85-48c5-9a8c-7b0f0902cf56">
            <name>RandomAccessIter&lt;ActionParser*, ActionParser*&amp;, ActionParser**>*</name>
            <content>
                <baseType ref="type.6d051cb0-f19b-4e53-84b3-138ff3fce7a9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.c74152a8-30fd-4207-a351-4bf014ace742" specialization="true">
            <name>RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3bcd23cc-75a6-42a6-9c58-eca7f3c363c8"/>
                <argumentType ref="type.d638fa61-f6f6-4d79-93c7-cfb6b064fc5a"/>
                <argumentType ref="type.ade0af11-223c-44c7-b7c8-14188c1f756e"/>
            </content>
        </type>
        <type derived="true" id="type.7c720906-6926-4705-98ed-2fcd313d5878">
            <name>RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**>&amp;</name>
            <content>
                <baseType ref="type.c74152a8-30fd-4207-a351-4bf014ace742"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c490309f-889a-4b68-bf0d-9436867c071e">
            <name>RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.c74152a8-30fd-4207-a351-4bf014ace742"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.587ac4fa-0a79-4b21-934d-7ae1daf4f03e">
            <name>RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**>*</name>
            <content>
                <baseType ref="type.c74152a8-30fd-4207-a351-4bf014ace742"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.fcddf120-4256-4ec4-9962-9f5c16e2ba99" specialization="true">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.930a06a6-07f0-4507-af6d-38f9c5212186"/>
                <argumentType ref="type.0854487d-3552-46e7-adfe-0c701f104d67"/>
                <argumentType ref="type.52acbdc6-be0f-41e9-b790-51967ccf33d4"/>
            </content>
        </type>
        <type derived="true" id="type.4b2d04b6-ca76-4fcf-a6f3-3ac9d9efe2f6">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**>&amp;&amp;</name>
            <content>
                <baseType ref="type.fcddf120-4256-4ec4-9962-9f5c16e2ba99"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.cff7adb6-5712-4d6d-9081-08aced9a992f" specialization="true">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e4064d7b-41b6-418b-9c8c-6e020817c5da"/>
                <argumentType ref="type.c27de41d-66f1-4b40-bc60-20613446f63e"/>
                <argumentType ref="type.623c3530-8cc6-4fec-960f-dbcf8ef78c41"/>
            </content>
        </type>
        <type derived="true" id="type.cbfd4d5d-22ff-4400-bb20-5855176152aa">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.cff7adb6-5712-4d6d-9081-08aced9a992f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.d7011730-5dba-48df-b114-ee73204a58f9" specialization="true">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8f845359-a82a-4442-9ba7-d60a5347ce6b"/>
                <argumentType ref="type.d0aa53a7-9159-492e-9441-3fd9267e66ca"/>
                <argumentType ref="type.3ebf1ebc-fb17-48e5-9635-007d687c14f5"/>
            </content>
        </type>
        <type derived="true" id="type.9751b4ba-febb-40b1-bbb3-fab2f34e53e6">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**>&amp;&amp;</name>
            <content>
                <baseType ref="type.d7011730-5dba-48df-b114-ee73204a58f9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.dfae8521-e19e-430b-8b9a-fa26aefc8a5d" specialization="true">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.cf0d3a58-d179-483c-8b42-f70840af1c5d"/>
                <argumentType ref="type.7ba68b07-71df-4fca-95d4-4945d718870f"/>
                <argumentType ref="type.1c07d9f3-0385-4024-beaa-25b15932846d"/>
            </content>
        </type>
        <type derived="true" id="type.c4cd4395-5085-4f15-8d27-16fa18a36b81">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.dfae8521-e19e-430b-8b9a-fa26aefc8a5d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.c8c3e0ec-6552-4012-9744-f49d16203205" specialization="true">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.81843ff4-3d69-4bf7-a238-d779f04d3ad5"/>
                <argumentType ref="type.7b047d8f-ba81-4d36-bd7b-264d37818922"/>
                <argumentType ref="type.4706779b-65ee-46b7-a109-0cd7c4e288b8"/>
            </content>
        </type>
        <type derived="true" id="type.46969f48-93bc-4b21-8253-f066d5834e90">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**>&amp;&amp;</name>
            <content>
                <baseType ref="type.c8c3e0ec-6552-4012-9744-f49d16203205"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.e90ae4a7-a3e4-4daa-beee-d8c183ce2a0c" specialization="true">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.c27500e9-72f8-4e80-9a1b-a97af5787a27"/>
                <argumentType ref="type.a861f32e-3aad-459c-9b6b-c40844da9135"/>
                <argumentType ref="type.d86f2183-ab98-4a97-a183-be7bd8ee065c"/>
            </content>
        </type>
        <type derived="true" id="type.7319f089-ec83-4e6a-beac-b6acfd007369">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**>&amp;&amp;</name>
            <content>
                <baseType ref="type.e90ae4a7-a3e4-4daa-beee-d8c183ce2a0c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.82f46afc-32b6-424f-928e-6e5374243848" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.ad3791c4-acdc-4e18-803c-87e46b8ad15d"/>
                <argumentType ref="type.9bfbd839-11cf-4cb0-8d8d-e16b2bbfe313"/>
                <argumentType ref="type.5890f76c-2ee4-44dc-81be-f2a995620199"/>
            </content>
        </type>
        <type derived="true" id="type.093ea453-12f1-4393-aa98-f309d752248e">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**>&amp;</name>
            <content>
                <baseType ref="type.82f46afc-32b6-424f-928e-6e5374243848"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.14269c25-eddb-4e3c-b982-fe4b661e18a3">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.82f46afc-32b6-424f-928e-6e5374243848"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.823907c5-2e62-430b-8e08-451ebc5d8c12">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**>*</name>
            <content>
                <baseType ref="type.82f46afc-32b6-424f-928e-6e5374243848"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.e2f742b4-2873-42f0-b1d9-54ab3520e850" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.ad3791c4-acdc-4e18-803c-87e46b8ad15d"/>
                <argumentType ref="type.d7df63b0-c82a-4773-a8a0-7e3941e3196a"/>
                <argumentType ref="type.2f25dc0c-2efb-4062-8fe6-452bc72e9164"/>
            </content>
        </type>
        <type derived="true" id="type.e058928e-6572-46d0-b87e-71123b86b4bf">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**>&amp;</name>
            <content>
                <baseType ref="type.e2f742b4-2873-42f0-b1d9-54ab3520e850"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4e8a09f8-795f-497c-a111-b8c1057ba2c8">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.e2f742b4-2873-42f0-b1d9-54ab3520e850"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.648fcf80-7d7f-4abd-8d5a-60b4c9955303">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**>*</name>
            <content>
                <baseType ref="type.e2f742b4-2873-42f0-b1d9-54ab3520e850"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.f3a2a3a3-f1d9-4166-af79-a6d2eb0f4f71" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.6ba54a31-322e-4765-91ce-cf6b62b5a0c9"/>
                <argumentType ref="type.fd792736-ab04-4941-a6a2-346e9afd2d9f"/>
                <argumentType ref="type.6439e12f-85c7-4bdb-a347-27b2b1356f03"/>
            </content>
        </type>
        <type id="type.9efe58bb-77ac-45e4-87eb-e852ef8c073a" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.c4ec49f9-1545-4f27-98a1-8fc5374cd10a"/>
                <argumentType ref="type.74156a6d-40f1-4908-a368-ab8d1a573691"/>
                <argumentType ref="type.019e739e-4085-4370-ac53-489ae2386c3e"/>
            </content>
        </type>
        <type derived="true" id="type.de6dbe7b-92ce-4dfe-934e-0ef7a7dffe11">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.f3a2a3a3-f1d9-4166-af79-a6d2eb0f4f71"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e72e39ee-d545-4711-be43-e9c493cb2df7">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9efe58bb-77ac-45e4-87eb-e852ef8c073a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.0ace0e80-4b4d-408e-94f4-7e88ff32728c" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.6ba54a31-322e-4765-91ce-cf6b62b5a0c9"/>
                <argumentType ref="type.bc64ec6c-f716-406e-9a6e-6fc462dd1992"/>
                <argumentType ref="type.96c13bca-2814-40b3-b612-829f33e0ad4b"/>
            </content>
        </type>
        <type id="type.c0813236-bde2-4aa3-89ac-c665daad3299" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.c4ec49f9-1545-4f27-98a1-8fc5374cd10a"/>
                <argumentType ref="type.07a888c5-345d-412c-a58d-ba4d3cc7483e"/>
                <argumentType ref="type.b3a13940-a8dc-4fbd-b793-203591f5af6c"/>
            </content>
        </type>
        <type id="type.0ace0e80-4b4d-408e-94f4-7e88ff32728c" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.6ba54a31-322e-4765-91ce-cf6b62b5a0c9"/>
                <argumentType ref="type.bc64ec6c-f716-406e-9a6e-6fc462dd1992"/>
                <argumentType ref="type.96c13bca-2814-40b3-b612-829f33e0ad4b"/>
            </content>
        </type>
        <type derived="true" id="type.235cb658-cd60-4c02-86dd-faf2252c32f2">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.0ace0e80-4b4d-408e-94f4-7e88ff32728c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.73edc8b4-f2cf-48b4-ba19-f0e6d3c633f1">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.c0813236-bde2-4aa3-89ac-c665daad3299"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.cd70928a-28d2-4892-8ed6-633eb74a0d07" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.80d53d7a-948d-4216-98c3-2dfe79d335bf"/>
                <argumentType ref="type.9d5a5587-5b7d-48b2-911c-0c46ba2d330d"/>
                <argumentType ref="type.40a138d6-2442-45f6-968c-4d3d21ddf1f4"/>
            </content>
        </type>
        <type derived="true" id="type.4cdf046c-5368-427c-ac4d-4b6999a15f50">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.cd70928a-28d2-4892-8ed6-633eb74a0d07"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a949ae30-abb4-46b0-8a56-98c9de58cc29" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.80d53d7a-948d-4216-98c3-2dfe79d335bf"/>
                <argumentType ref="type.59dcad08-49a8-40c7-adc4-1c0d549cefe7"/>
                <argumentType ref="type.6b5f4112-2492-45ab-8b3a-a2440b8b8f06"/>
            </content>
        </type>
        <type derived="true" id="type.95650b96-5dbd-4aaa-9a01-cc2a5d895b94">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.a949ae30-abb4-46b0-8a56-98c9de58cc29"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.292f6c91-8613-4105-acf4-2994da4887db" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f2574b87-e8e3-46de-9d10-dcfa1b2b63fd"/>
                <argumentType ref="type.cb5bcc8c-0dc5-4fcd-8f2d-2b4fe8c7edf8"/>
                <argumentType ref="type.1c0d0ca0-be22-4505-af49-be4bab3b36ac"/>
            </content>
        </type>
        <type derived="true" id="type.73efea78-e1f4-4e43-b15f-b165da8e4944">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.292f6c91-8613-4105-acf4-2994da4887db"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.fa92e807-05bc-48f8-8271-f9c6722a474f" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f2574b87-e8e3-46de-9d10-dcfa1b2b63fd"/>
                <argumentType ref="type.48092098-37a7-4ca3-a0fe-fc30cf21a2a2"/>
                <argumentType ref="type.41175915-10a4-4333-8132-a6b701279f13"/>
            </content>
        </type>
        <type derived="true" id="type.85313d8a-7048-4884-9f59-4347d904e383">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.fa92e807-05bc-48f8-8271-f9c6722a474f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.13d789ef-9c72-489d-91b2-42c164de2702" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.87c2f730-b033-4c1b-813e-21f12b9114b1"/>
                <argumentType ref="type.7b403906-0990-4601-ade7-b218b1e16579"/>
                <argumentType ref="type.e981281c-a819-4dcb-9949-0d47886c9b74"/>
            </content>
        </type>
        <type derived="true" id="type.1702ec5a-1369-4c16-a808-4b98685346f2">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.13d789ef-9c72-489d-91b2-42c164de2702"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.90f19112-dae6-4068-9ae8-8289865945dc" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.87c2f730-b033-4c1b-813e-21f12b9114b1"/>
                <argumentType ref="type.181d9ac0-608e-42ec-86a4-3ee4fa0969a6"/>
                <argumentType ref="type.a1fb5c02-b9ed-460a-9e3a-03ca6bdc496f"/>
            </content>
        </type>
        <type derived="true" id="type.0ae0e6a5-5553-4c6a-9eaa-1d217bc7e795">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.90f19112-dae6-4068-9ae8-8289865945dc"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.17a0b3cd-62bf-4f2d-97be-559a1c036ded" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3b84435c-ed91-428f-970c-02f6cf164c50"/>
                <argumentType ref="type.0f35b18c-55fc-4f5f-9102-abf3dbb5613b"/>
                <argumentType ref="type.0c7e66c4-e179-4864-84b7-de8241e6cf41"/>
            </content>
        </type>
        <type derived="true" id="type.aa5cc359-9f98-46f6-be66-4f26e1d7110b">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.17a0b3cd-62bf-4f2d-97be-559a1c036ded"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8720c39b-c563-41c1-a334-a0064efb6514" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3b84435c-ed91-428f-970c-02f6cf164c50"/>
                <argumentType ref="type.869cc334-fd3e-4fb9-925d-5ad7c4b24595"/>
                <argumentType ref="type.16ea45a7-b47d-4de9-a539-179b4ae857ba"/>
            </content>
        </type>
        <type derived="true" id="type.7ed48d9c-fd69-49ef-b3be-5ab8ff2d34a3">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8720c39b-c563-41c1-a334-a0064efb6514"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5f3bc993-8960-48b5-b90e-b85c6cdf0c97" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2d5881ba-ad8b-43eb-8f9d-4acc864fee2c"/>
                <argumentType ref="type.aac609e7-b7be-45f7-9ceb-5b79e4f7ab0a"/>
                <argumentType ref="type.894c4e37-79a2-44b6-903f-dd6fe44b9f9d"/>
            </content>
        </type>
        <type derived="true" id="type.1909ac7b-3e7e-4d3c-8f65-41b88f38a5cd">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5f3bc993-8960-48b5-b90e-b85c6cdf0c97"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8c3bf2f4-fe07-4b44-a6a4-30316401e82c" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2d5881ba-ad8b-43eb-8f9d-4acc864fee2c"/>
                <argumentType ref="type.09fbb04d-910c-4575-94a1-ec993bd95e14"/>
                <argumentType ref="type.c0bdedf5-e089-4971-8fc6-a591c88d9e08"/>
            </content>
        </type>
        <type derived="true" id="type.71c628e3-0bc4-4d9e-96da-051382c49353">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8c3bf2f4-fe07-4b44-a6a4-30316401e82c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.38632b47-51e7-4561-8adf-e6ba5d274b28" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5b372742-e83c-4dd1-9a33-56f92201cac7"/>
                <argumentType ref="type.81862372-2421-4a30-801d-66f29b5147b3"/>
                <argumentType ref="type.300533c2-a6a1-409a-b792-0823425090fe"/>
            </content>
        </type>
        <type derived="true" id="type.3b1e60c4-787e-4cb8-9ee8-97a18d614b40">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.38632b47-51e7-4561-8adf-e6ba5d274b28"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.e4a295da-3128-46b9-9e1a-43b55a9dc978" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5b372742-e83c-4dd1-9a33-56f92201cac7"/>
                <argumentType ref="type.553619da-8236-4d9c-8f21-0f0ba98abedc"/>
                <argumentType ref="type.bb234915-9a9f-489e-bf80-ccdebd04f946"/>
            </content>
        </type>
        <type derived="true" id="type.1c3f75be-f90f-4bee-8813-c611f5a83f5b">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.e4a295da-3128-46b9-9e1a-43b55a9dc978"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.17d05809-0085-4ce6-8d19-68e959e6834d" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a7d8da29-e996-4387-a705-70bf06d94ed1"/>
                <argumentType ref="type.06ccbedd-a60a-43df-8890-6f373a0fe22e"/>
                <argumentType ref="type.1332450c-8d05-428d-b586-11063d2ad57f"/>
            </content>
        </type>
        <type derived="true" id="type.6956724b-5b60-441c-88e5-faf51352258c">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.17d05809-0085-4ce6-8d19-68e959e6834d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4e10e2d8-3d62-4eee-83cf-bc83981f97a7" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a7d8da29-e996-4387-a705-70bf06d94ed1"/>
                <argumentType ref="type.9106a28a-5b3f-40e1-912c-da0083b460bd"/>
                <argumentType ref="type.1691cb97-0c2d-4cef-9fca-ca2171664825"/>
            </content>
        </type>
        <type derived="true" id="type.f06f69a5-7bde-4305-86ea-fe6f9256d1d4">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4e10e2d8-3d62-4eee-83cf-bc83981f97a7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.43e5ce6d-35c8-4188-9171-e3d97bcc8d0e" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a53521ab-bde5-4a65-b773-398cf33240c2"/>
                <argumentType ref="type.07f78cbf-5ebe-4268-8569-737c82c283ae"/>
                <argumentType ref="type.4a3e8fb2-cafe-488a-9780-b6870aca4f79"/>
            </content>
        </type>
        <type derived="true" id="type.54b3dbfb-cbd2-44d7-b22a-02f0d5c674ed">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.43e5ce6d-35c8-4188-9171-e3d97bcc8d0e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.152f7378-5435-4288-81e1-331a5cb35114" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a53521ab-bde5-4a65-b773-398cf33240c2"/>
                <argumentType ref="type.873942f6-e8e2-4a1e-865c-3ebff47f9af8"/>
                <argumentType ref="type.48936098-345d-4186-b937-bc8d281ebe90"/>
            </content>
        </type>
        <type derived="true" id="type.c6631db7-3af0-4bb9-b177-750fb4a87d64">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.152f7378-5435-4288-81e1-331a5cb35114"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.2959b8a8-d2f5-4801-b603-fe0328e48f44" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.52d0c278-ada7-41c5-a59b-db38a5d2c23f"/>
                <argumentType ref="type.bab1340e-e7a0-426b-83c4-b1463254ac58"/>
                <argumentType ref="type.b5bfdaf4-8cd6-465d-a0ca-3e5af2b61893"/>
            </content>
        </type>
        <type derived="true" id="type.123aec77-4ac2-4058-9b09-ff414eb70630">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.2959b8a8-d2f5-4801-b603-fe0328e48f44"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.980f6f63-eb69-495b-a7a7-df91ba316250" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.52d0c278-ada7-41c5-a59b-db38a5d2c23f"/>
                <argumentType ref="type.b6381326-710f-4e60-9555-ea58516d1e96"/>
                <argumentType ref="type.e72d593c-e3be-44ab-b4ef-4e78f6bec47d"/>
            </content>
        </type>
        <type derived="true" id="type.bf482100-bc1d-44ca-a09d-383f2fe4cb21">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.980f6f63-eb69-495b-a7a7-df91ba316250"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.151cd66f-35fd-4ace-a1f8-a849eb95d59a" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.0408eee1-4ffd-4030-9105-070a3bdcea4c"/>
                <argumentType ref="type.1be5a88d-28e7-4721-bc3e-d603099874df"/>
                <argumentType ref="type.194d48e3-7bcd-44b9-8511-71376ade2e81"/>
            </content>
        </type>
        <type derived="true" id="type.9be0d80e-a0da-4cbd-9fb6-9da981a85a00">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;</name>
            <content>
                <baseType ref="type.151cd66f-35fd-4ace-a1f8-a849eb95d59a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.605ca73a-b7f3-4487-96c9-541f5262d692">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.151cd66f-35fd-4ace-a1f8-a849eb95d59a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.56c3e5df-8632-4a2f-b044-74ed482e5718">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>*</name>
            <content>
                <baseType ref="type.151cd66f-35fd-4ace-a1f8-a849eb95d59a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.67f3fcc3-3443-49bc-a0ca-df7e6f5fb409" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.0408eee1-4ffd-4030-9105-070a3bdcea4c"/>
                <argumentType ref="type.82059846-e31c-414b-8249-6561ab15c017"/>
                <argumentType ref="type.0328e296-3449-4d44-aac7-445c3438d7ad"/>
            </content>
        </type>
        <type derived="true" id="type.12c61551-9a99-4925-8f5c-0e9e5caf5cd3">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;</name>
            <content>
                <baseType ref="type.67f3fcc3-3443-49bc-a0ca-df7e6f5fb409"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.02c3ea37-c5d3-4b9f-be27-7362c6bb8421">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.67f3fcc3-3443-49bc-a0ca-df7e6f5fb409"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ec4e77fe-7030-4278-b08f-e18df78f2f33">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>*</name>
            <content>
                <baseType ref="type.67f3fcc3-3443-49bc-a0ca-df7e6f5fb409"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.ebd7f1cb-a697-4843-86c4-ea3a52e149e8" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.84177fdb-e78e-4297-ac3a-2d7d78bb7587"/>
                <argumentType ref="type.6ce4b8c9-1c45-490c-b874-6efdf02ee22b"/>
                <argumentType ref="type.33cd64d6-5604-4513-8db4-9007b9b15f72"/>
            </content>
        </type>
        <type derived="true" id="type.5b1c4b45-c024-40ee-82b7-2521df222465">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;</name>
            <content>
                <baseType ref="type.ebd7f1cb-a697-4843-86c4-ea3a52e149e8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b3b82eab-bb88-46a6-8fa2-bb9469bc632a">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.ebd7f1cb-a697-4843-86c4-ea3a52e149e8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d6d1d5d0-96d6-43ee-bbf7-53eb5366be1f">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>*</name>
            <content>
                <baseType ref="type.ebd7f1cb-a697-4843-86c4-ea3a52e149e8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.23d694ce-56fb-46f0-8012-10d5d0b3c73c" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.84177fdb-e78e-4297-ac3a-2d7d78bb7587"/>
                <argumentType ref="type.00d66461-47ef-4923-9d64-766914ebd02c"/>
                <argumentType ref="type.52add885-3eb7-467b-9a37-17f11bab6c9d"/>
            </content>
        </type>
        <type derived="true" id="type.8c008afa-e7bf-4e55-8e6d-7837ee8abc20">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;</name>
            <content>
                <baseType ref="type.23d694ce-56fb-46f0-8012-10d5d0b3c73c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4ba281a4-8072-4c17-829d-8cc66d0cf4d7">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.23d694ce-56fb-46f0-8012-10d5d0b3c73c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f2f593bd-41dc-4dd6-93bc-40b56b7ab67d">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>*</name>
            <content>
                <baseType ref="type.23d694ce-56fb-46f0-8012-10d5d0b3c73c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9df40d5c-c232-420b-8f36-96c45888a166" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.65e62c64-c738-4bcc-9c37-8210ac980fa2"/>
                <argumentType ref="type.2d3b253d-2dc2-4e92-b407-35611af5abe5"/>
                <argumentType ref="type.ac2089ae-355f-454b-9c86-44cbb7590360"/>
            </content>
        </type>
        <type derived="true" id="type.3c2e29a0-c54f-4219-a069-ca4a5fb79476">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;</name>
            <content>
                <baseType ref="type.9df40d5c-c232-420b-8f36-96c45888a166"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f3bd8655-7bef-46b1-8f7a-50795c6dc481">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9df40d5c-c232-420b-8f36-96c45888a166"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b6d66abe-4a11-4bea-995d-98835e715c45">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>*</name>
            <content>
                <baseType ref="type.9df40d5c-c232-420b-8f36-96c45888a166"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.00fbeb23-a739-42c9-94e2-1a9f22d1e849" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.65e62c64-c738-4bcc-9c37-8210ac980fa2"/>
                <argumentType ref="type.14774786-c45e-430d-8df0-e61d474c903a"/>
                <argumentType ref="type.faf3bc5f-4548-4a3c-97e8-ac55d94180eb"/>
            </content>
        </type>
        <type derived="true" id="type.1b1f8f67-6d48-462b-8c1d-c1d5b19a76b9">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;</name>
            <content>
                <baseType ref="type.00fbeb23-a739-42c9-94e2-1a9f22d1e849"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9992c1ca-01f5-40e1-b527-9bcbd8dc200b">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.00fbeb23-a739-42c9-94e2-1a9f22d1e849"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bdf29203-a3f1-484b-9a55-3bd2dbafbf05">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>*</name>
            <content>
                <baseType ref="type.00fbeb23-a739-42c9-94e2-1a9f22d1e849"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.912668f9-d62f-44e6-9519-3c8a48605d7d" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.326cb0c9-25c5-44e5-b91c-1f1bc0708f3d"/>
                <argumentType ref="type.68ae8581-35f9-4ad9-a8ff-dcdcec9d1e5c"/>
                <argumentType ref="type.983701e4-3fc9-4bf9-88c7-bd11b3eb597f"/>
            </content>
        </type>
        <type derived="true" id="type.e0452f18-874f-4ad2-8063-3c5226a54ac1">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;</name>
            <content>
                <baseType ref="type.912668f9-d62f-44e6-9519-3c8a48605d7d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e9c7d6f8-aea4-44ae-af0a-8f4ebcf4b5bc">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.912668f9-d62f-44e6-9519-3c8a48605d7d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8c874e87-10df-431c-b57a-d75b2e444d97">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>*</name>
            <content>
                <baseType ref="type.912668f9-d62f-44e6-9519-3c8a48605d7d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.fcd2f95b-b27f-4fc9-84c6-00383eb0f08c" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.326cb0c9-25c5-44e5-b91c-1f1bc0708f3d"/>
                <argumentType ref="type.6585a89d-5bf2-498f-9d93-c900e46901c4"/>
                <argumentType ref="type.2cd3fa3e-90b9-46fa-bc90-8977d0d3a438"/>
            </content>
        </type>
        <type derived="true" id="type.598db13b-afa8-45d5-aab3-938adf0a1034">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;</name>
            <content>
                <baseType ref="type.fcd2f95b-b27f-4fc9-84c6-00383eb0f08c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0290a6fa-323f-4eb4-870c-a4c1dceb919b">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.fcd2f95b-b27f-4fc9-84c6-00383eb0f08c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.608216de-608b-4f32-8847-0ec7662d1787">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>*</name>
            <content>
                <baseType ref="type.fcd2f95b-b27f-4fc9-84c6-00383eb0f08c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.cfe53aff-3947-47c7-b730-8d1d38a4b034" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.0fa92d72-125e-4c1c-92cf-67b896ac6e90"/>
                <argumentType ref="type.62bb334f-5241-4846-8878-035ed59373bc"/>
                <argumentType ref="type.970ad439-0d0f-4ff0-b0b4-47dfd93b052b"/>
            </content>
        </type>
        <type derived="true" id="type.3800c5b5-d771-4e00-b2d4-587ae899413b">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.cfe53aff-3947-47c7-b730-8d1d38a4b034"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.414bfd9a-2a63-4f2c-8ce5-d2f4bfda0bdd" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.0fa92d72-125e-4c1c-92cf-67b896ac6e90"/>
                <argumentType ref="type.77f6f315-ebf8-4744-b16f-8681080b8c5a"/>
                <argumentType ref="type.1ae2945d-148f-4043-b9d6-ef8b3ddc0f99"/>
            </content>
        </type>
        <type derived="true" id="type.7ed073e5-173d-48fe-bd63-ba8f74b89d00">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.414bfd9a-2a63-4f2c-8ce5-d2f4bfda0bdd"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.188b29e1-23db-4bea-9b06-e754e6d350c0" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f00b47f5-a60e-4c80-9315-fa0ae2d1c2d1"/>
                <argumentType ref="type.7c4fab81-3a9f-4aec-9c21-cc4ad2257ff2"/>
                <argumentType ref="type.5fa4283a-7cb0-4576-a931-57635ba3c5bf"/>
            </content>
        </type>
        <type derived="true" id="type.6acb8907-b697-46b5-8651-590ab88a683d">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.188b29e1-23db-4bea-9b06-e754e6d350c0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.838e1dc5-49a2-47c4-aafe-3ad74aa0ec46" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f00b47f5-a60e-4c80-9315-fa0ae2d1c2d1"/>
                <argumentType ref="type.c9a86756-d504-4bc7-a124-5d0511a1c9a4"/>
                <argumentType ref="type.f88af620-e7d7-421a-90c4-e25541c9d373"/>
            </content>
        </type>
        <type derived="true" id="type.024bd5b6-770a-45f7-958d-1df2b290e88f">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.838e1dc5-49a2-47c4-aafe-3ad74aa0ec46"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a58f3026-1a8e-45ec-8a99-226066d0f6d4" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9739e135-0116-42d0-b8bb-f38ebfbd7ac7"/>
                <argumentType ref="type.26595e12-4b77-4178-af99-cbd214c20add"/>
                <argumentType ref="type.b2099bb4-5ba2-4a3c-9e49-53d4042ec82a"/>
            </content>
        </type>
        <type derived="true" id="type.3a0e99e6-b715-453b-84e0-01e46c9fdf5e">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.a58f3026-1a8e-45ec-8a99-226066d0f6d4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.c29ced04-7a44-4cd2-8ca2-c451324f52cf" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9739e135-0116-42d0-b8bb-f38ebfbd7ac7"/>
                <argumentType ref="type.55bc90bc-8055-412b-8216-be850f9047c9"/>
                <argumentType ref="type.66268fc5-49c3-4926-bcfa-e6b5a792e029"/>
            </content>
        </type>
        <type derived="true" id="type.55e5ff4d-e25b-4f34-a80c-a9e8cc2be682">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.c29ced04-7a44-4cd2-8ca2-c451324f52cf"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.7bd36f61-452d-43e1-ab66-37a31351823c" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f42fc4ef-b0f9-4ff5-83d0-0179c18b832f"/>
                <argumentType ref="type.a13d9935-d8d9-4b96-bebf-a87c9bf32f30"/>
                <argumentType ref="type.3c3a90a1-0786-4343-aa6f-1b7c74ae3db5"/>
            </content>
        </type>
        <type derived="true" id="type.7a1eb7da-4428-4b0c-a42a-d79bdac44a46">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.7bd36f61-452d-43e1-ab66-37a31351823c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.cb387829-546c-4990-9440-978dff7427dc" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f42fc4ef-b0f9-4ff5-83d0-0179c18b832f"/>
                <argumentType ref="type.a5788d74-48db-4ea9-8d45-4d1daa041702"/>
                <argumentType ref="type.4f2c8ce4-9343-4f52-b627-bc2774024b2b"/>
            </content>
        </type>
        <type derived="true" id="type.f13b092c-6286-4279-961b-7ea2302982bd">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.cb387829-546c-4990-9440-978dff7427dc"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.7bdbf816-c632-45b8-9f34-23b0cbbbeb2b" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e876e162-ab4e-4058-8bbb-867eb5313a7e"/>
                <argumentType ref="type.24059305-9a46-4a55-8f77-c299b1105df6"/>
                <argumentType ref="type.f5f6f06e-a3ad-4adc-91c1-a8348ae694d0"/>
            </content>
        </type>
        <type derived="true" id="type.0f68ec5e-31d6-462e-98fc-2c82775ac31d">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.7bdbf816-c632-45b8-9f34-23b0cbbbeb2b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.40511840-5b13-44c0-b8a0-18f4d667a026" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e876e162-ab4e-4058-8bbb-867eb5313a7e"/>
                <argumentType ref="type.195ee093-3127-4d2a-bfae-48481471a95e"/>
                <argumentType ref="type.794bc4b4-352e-4ce8-8e4a-c352826eaab2"/>
            </content>
        </type>
        <type derived="true" id="type.2a6f5663-212a-4a10-9ce1-1b690aeb8bdb">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.40511840-5b13-44c0-b8a0-18f4d667a026"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.097dddbb-918e-4b14-b94b-a4607b429ea5" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.ac8adbf1-2dd5-403c-adb3-6a98add7d050"/>
                <argumentType ref="type.abc2b593-eb7d-4160-90b2-3f89e33b0938"/>
                <argumentType ref="type.63ddf129-0408-4857-9215-ac28c3b5a44a"/>
            </content>
        </type>
        <type derived="true" id="type.0a1abde9-affa-4925-b81b-a8ec480458d4">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.097dddbb-918e-4b14-b94b-a4607b429ea5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.84699c60-1e04-4972-b440-bf611fd5e653" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.ac8adbf1-2dd5-403c-adb3-6a98add7d050"/>
                <argumentType ref="type.3a54d67a-1f69-41fe-98ad-873eb9de72e1"/>
                <argumentType ref="type.b08612b1-7b6b-45d1-af06-75add4bc3217"/>
            </content>
        </type>
        <type derived="true" id="type.f124b7ac-eb48-4e8e-bc82-77174fc56f98">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.84699c60-1e04-4972-b440-bf611fd5e653"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.fc049920-0ccf-4854-b444-15aa78af03d6" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9545fd33-bf6b-4f5f-8ae8-f9f17f3fc288"/>
                <argumentType ref="type.11f2b658-ba63-4ad1-bcd0-28eb4050764e"/>
                <argumentType ref="type.1e6a0b41-cb80-42ba-99d9-442a7bf300f0"/>
            </content>
        </type>
        <type derived="true" id="type.fe24d3a3-7235-4c1f-b2b4-1925ea00314c">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.fc049920-0ccf-4854-b444-15aa78af03d6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.f7180c7b-5516-445d-8c2b-73efe9a0439f" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9545fd33-bf6b-4f5f-8ae8-f9f17f3fc288"/>
                <argumentType ref="type.97405acc-1603-4dd5-be2e-06c4d68f8f5e"/>
                <argumentType ref="type.d695fbe0-efae-4a79-8b12-3827639e7669"/>
            </content>
        </type>
        <type derived="true" id="type.fddcb812-2ed9-44e3-a6ad-7bf1475487e3">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.f7180c7b-5516-445d-8c2b-73efe9a0439f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.d50187f3-bf64-43ea-99f6-ae3046d0c9c9" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1350076d-126f-4519-9332-41c06b713844"/>
                <argumentType ref="type.d1284522-9406-4d7e-9674-dbad597805b8"/>
                <argumentType ref="type.0689868d-6e7e-4d65-afc0-49d707f68d76"/>
            </content>
        </type>
        <type derived="true" id="type.296a3967-eb66-4b9a-8bc0-2a8db54bd424">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.d50187f3-bf64-43ea-99f6-ae3046d0c9c9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.0942d978-6e96-4ed9-be62-bb50e580e02e" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1350076d-126f-4519-9332-41c06b713844"/>
                <argumentType ref="type.3833841c-3ad9-46bf-af24-b1dd11d05b53"/>
                <argumentType ref="type.1e5ce353-813a-474a-890b-1c3cdb489ac6"/>
            </content>
        </type>
        <type derived="true" id="type.c640d819-e93f-4bdb-abbe-902af7274483">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.0942d978-6e96-4ed9-be62-bb50e580e02e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.50167742-f2a6-4215-a2d5-98b0ca606b57" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.852fb2d2-fe04-4987-83c9-e1ee871659ae"/>
                <argumentType ref="type.a2c23b67-519b-4e5a-bb9b-a46d5bb46fa0"/>
                <argumentType ref="type.13b20aab-4264-485b-bdca-be32e11e68f6"/>
            </content>
        </type>
        <type derived="true" id="type.34c7b785-8eef-4e80-81a4-734fde81228a">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.50167742-f2a6-4215-a2d5-98b0ca606b57"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.2bd2d509-1079-4ce0-b1a9-86892d14bb75" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.852fb2d2-fe04-4987-83c9-e1ee871659ae"/>
                <argumentType ref="type.0b189da8-b936-4432-953d-0263435d4145"/>
                <argumentType ref="type.fbadfc1b-d9e2-4cd1-b5cf-7e741478cfa7"/>
            </content>
        </type>
        <type derived="true" id="type.f85885a3-9774-49ef-a044-121ac541b4a4">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.2bd2d509-1079-4ce0-b1a9-86892d14bb75"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.3deea8f5-f326-4b8a-81a4-3006628548e5" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.39145495-6b14-4573-8a83-4ecd78f0caff"/>
                <argumentType ref="type.27b1ce5c-33c2-40a9-9aac-55f3600efbae"/>
                <argumentType ref="type.b8a69733-d5df-48d3-ac95-4cf02d188201"/>
            </content>
        </type>
        <type derived="true" id="type.303c4dd8-aad2-432c-95a5-6e8cc04d35e8">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**>&amp;</name>
            <content>
                <baseType ref="type.3deea8f5-f326-4b8a-81a4-3006628548e5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0498d30e-4967-4f32-bf54-d093902d02da">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.3deea8f5-f326-4b8a-81a4-3006628548e5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b0ec3aec-5086-4a69-88f6-de35f5949824">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**>*</name>
            <content>
                <baseType ref="type.3deea8f5-f326-4b8a-81a4-3006628548e5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.f6a78a5f-22e7-4af9-ac13-4c9f51320f91" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.39145495-6b14-4573-8a83-4ecd78f0caff"/>
                <argumentType ref="type.280276f0-4cab-45bd-b5cc-8383cd03080a"/>
                <argumentType ref="type.7f70300d-22c4-4eed-8d4b-3c75767fbde9"/>
            </content>
        </type>
        <type derived="true" id="type.3b123133-8ac4-4146-99d5-664786d6d856">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**>&amp;</name>
            <content>
                <baseType ref="type.f6a78a5f-22e7-4af9-ac13-4c9f51320f91"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cd2d7dff-e399-4ada-bbff-768b7277a7eb">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.f6a78a5f-22e7-4af9-ac13-4c9f51320f91"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f4baee3a-b456-42ea-98e5-733adb8305d3">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**>*</name>
            <content>
                <baseType ref="type.f6a78a5f-22e7-4af9-ac13-4c9f51320f91"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.dd453251-6d37-4a78-a248-d2c811c1e0ab" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b2109fb1-72e6-43e0-b48d-e1308e9517e8"/>
                <argumentType ref="type.dbb28db8-2d13-41d5-9f4c-3ecc531f3aa2"/>
                <argumentType ref="type.68213dc2-d404-464a-947b-ea44961401ba"/>
            </content>
        </type>
        <type id="type.3230275b-d81f-4a4e-8d69-f766142a48e9" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.187def8d-8e90-4b0a-add9-f09106520202"/>
                <argumentType ref="type.8c770d19-fbd0-4b0a-908e-d544053030f0"/>
                <argumentType ref="type.470b39df-11fe-4da4-bf7b-d0497dfb0a40"/>
            </content>
        </type>
        <type id="type.dd453251-6d37-4a78-a248-d2c811c1e0ab" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b2109fb1-72e6-43e0-b48d-e1308e9517e8"/>
                <argumentType ref="type.dbb28db8-2d13-41d5-9f4c-3ecc531f3aa2"/>
                <argumentType ref="type.68213dc2-d404-464a-947b-ea44961401ba"/>
            </content>
        </type>
        <type derived="true" id="type.a9462fdb-a5c4-4cca-a42c-a1c5f43e75e2">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.3230275b-d81f-4a4e-8d69-f766142a48e9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f5bec07b-5bf8-4ba3-b2b0-7e139b2cff13">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.dd453251-6d37-4a78-a248-d2c811c1e0ab"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.90f35962-3976-4ace-a6e8-a1673f222e01" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b2109fb1-72e6-43e0-b48d-e1308e9517e8"/>
                <argumentType ref="type.6f2890e0-47e9-4c21-b823-f301925a97e1"/>
                <argumentType ref="type.0ae60864-198f-4471-b9fa-7db572f29ad5"/>
            </content>
        </type>
        <type id="type.658b3bdd-f2f8-45b6-b22b-f412073b33af" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.187def8d-8e90-4b0a-add9-f09106520202"/>
                <argumentType ref="type.62496e91-711c-4aab-adab-b01aae4a13b4"/>
                <argumentType ref="type.80420961-ee34-4930-bc6b-fea52a8698a3"/>
            </content>
        </type>
        <type derived="true" id="type.ccb28638-312f-4784-ae73-f63f355bb3ea">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.658b3bdd-f2f8-45b6-b22b-f412073b33af"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.296b64e2-8604-4987-90a9-e9d3d38b9df3">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.90f35962-3976-4ace-a6e8-a1673f222e01"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.637eb634-3860-4e9b-9dff-388a7da3c235" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8acef2ca-a4de-4966-80f0-57f202100e34"/>
                <argumentType ref="type.e28b5404-e2c7-4f7f-a193-ae59e732ebb7"/>
                <argumentType ref="type.7052d636-a85c-4118-8112-0a9148883041"/>
            </content>
        </type>
        <type derived="true" id="type.4da62a08-8b2a-48c6-ac0d-1b4c9b553b38">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.637eb634-3860-4e9b-9dff-388a7da3c235"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.b4b4e472-f9b3-4a9e-9d05-f7f80d810550" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8acef2ca-a4de-4966-80f0-57f202100e34"/>
                <argumentType ref="type.52e4b1e9-9489-4c58-ba85-95d47a81fa1b"/>
                <argumentType ref="type.d88bfd49-dd3e-425b-8275-c64be8581268"/>
            </content>
        </type>
        <type derived="true" id="type.74c7c96d-1a9b-4518-9913-ebfac98004db">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.b4b4e472-f9b3-4a9e-9d05-f7f80d810550"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF" specialization="true">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="419405e7-9331-4574-971a-7ba37ca8bfcf"/>
                <argumentType ref="type.c3cb4f0f-c89e-4f4b-8366-3ea9ee438771"/>
                <argumentType ref="type.7928f35e-baab-47a2-8711-2de985ee2690"/>
            </content>
        </type>
        <type derived="true" id="type.1c79260d-eadf-4cc7-9db0-63f0f2ddf7c3">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.56afce4c-dfe8-42e3-a6fe-8580c661c3b7">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0592f3de-8801-4168-8ae8-4f4fbdcf941f">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9586618d-bd73-46a2-897c-83b0eef2a6c8">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6d3cddcc-b980-4106-bf95-50ff9cdf7498">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.46f858f6-e66a-4a79-8e17-5ef3968622c4">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8822fe69-33a3-43a3-961c-5970db227209">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966" specialization="true">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="71e28082-daad-49ca-ae5a-58f901a23893"/>
                <argumentType ref="type.60e12667-629e-44cc-a810-fd9f993409ce"/>
                <argumentType ref="type.fdd186d9-a700-4369-ae85-58d59a1d92d7"/>
            </content>
        </type>
        <type derived="true" id="type.4326f157-f96d-4632-a23f-0ffa75a7b741">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.53b33d23-39da-4a33-b2b0-1ddef03118cf">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d128e409-3dcf-418b-859c-87bcc9514061">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9b2d5740-b523-45ec-99cf-3d5c0ff3875c">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0b8615eb-b3f0-4c36-b093-61620f554229">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.235cb2d4-a99b-42af-9450-2adb6e11ab06">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ddb830e4-4a02-4d51-9f50-d48cd0a40a41">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.56300690-1313-41b5-926d-8f00f9a9f4d2" specialization="true">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.dd878add-efd9-4c76-a011-36060cf2fcca"/>
                <argumentType ref="type.d52b4251-14c1-42c5-bb60-ce67f9790b0c"/>
                <argumentType ref="type.3571d126-ae92-4338-bff3-e2f3d38d24bb"/>
            </content>
        </type>
        <type derived="true" id="type.6f27312a-b41e-4488-a4f6-0aed31de4f9f">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**>&amp;&amp;</name>
            <content>
                <baseType ref="type.56300690-1313-41b5-926d-8f00f9a9f4d2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.bfa5530f-3ba1-4893-9418-4831e466b56f" specialization="true">
            <name>RandomAccessIter&lt;Namespace*, Namespace*&amp;, Namespace**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                <argumentType ref="type.8a0cc8a4-adbf-497b-81f5-355eb7679e06"/>
                <argumentType ref="type.fe346bc5-8057-4b6f-9540-04aa5a8bc46e"/>
            </content>
        </type>
        <type derived="true" id="type.f601f3f3-656a-41c6-bb0b-279936b6a591">
            <name>RandomAccessIter&lt;Namespace*, Namespace*&amp;, Namespace**>&amp;</name>
            <content>
                <baseType ref="type.bfa5530f-3ba1-4893-9418-4831e466b56f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.473e91b1-393d-4854-a3cc-ccbc32c57849">
            <name>RandomAccessIter&lt;Namespace*, Namespace*&amp;, Namespace**>&amp;&amp;</name>
            <content>
                <baseType ref="type.bfa5530f-3ba1-4893-9418-4831e466b56f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.090c924f-2bd7-4521-8091-62df286a5cfb">
            <name>RandomAccessIter&lt;Namespace*, Namespace*&amp;, Namespace**>*</name>
            <content>
                <baseType ref="type.bfa5530f-3ba1-4893-9418-4831e466b56f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.0e0a73a0-b6fa-468f-b269-3a1546ff9dda" specialization="true">
            <name>RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
                <argumentType ref="type.88eed211-7675-42dd-8210-5c24898a0c0d"/>
                <argumentType ref="type.d04fa0d8-17d8-4893-bf07-312cfb3a5fab"/>
            </content>
        </type>
        <type derived="true" id="type.973db0bb-c0eb-4098-92af-4d6f1ff779f5">
            <name>RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**>&amp;</name>
            <content>
                <baseType ref="type.0e0a73a0-b6fa-468f-b269-3a1546ff9dda"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f7b94b1d-ae2a-46cd-ae74-0f31e23f1cff">
            <name>RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**>&amp;&amp;</name>
            <content>
                <baseType ref="type.0e0a73a0-b6fa-468f-b269-3a1546ff9dda"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c8907a89-c0d5-4b27-b0ac-d5ece4e5c8a5">
            <name>RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**>*</name>
            <content>
                <baseType ref="type.0e0a73a0-b6fa-468f-b269-3a1546ff9dda"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.ca3c9652-2b4f-417e-b7a5-673033e26e24" specialization="true">
            <name>RandomAccessIter&lt;NonterminalParser*, NonterminalParser*&amp;, NonterminalParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.91cbca83-f260-4058-9c54-09059137b5e4"/>
                <argumentType ref="type.19942914-7073-4ccc-b396-a2c22875fd96"/>
                <argumentType ref="type.3e2c08a2-a6a9-4bef-bd8d-25f9a27ba405"/>
            </content>
        </type>
        <type derived="true" id="type.fc7a26f1-380b-497b-8d0d-305b6fe8cf47">
            <name>RandomAccessIter&lt;NonterminalParser*, NonterminalParser*&amp;, NonterminalParser**>&amp;</name>
            <content>
                <baseType ref="type.ca3c9652-2b4f-417e-b7a5-673033e26e24"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8372af9f-27b0-4cdb-bc6d-96b1215a6b37">
            <name>RandomAccessIter&lt;NonterminalParser*, NonterminalParser*&amp;, NonterminalParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.ca3c9652-2b4f-417e-b7a5-673033e26e24"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fa758639-c957-49bf-ad8a-97e0cd85b816">
            <name>RandomAccessIter&lt;NonterminalParser*, NonterminalParser*&amp;, NonterminalParser**>*</name>
            <content>
                <baseType ref="type.ca3c9652-2b4f-417e-b7a5-673033e26e24"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.ed68a8ed-fd56-4054-ad9c-2067977463a1" specialization="true">
            <name>RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.91cbca83-f260-4058-9c54-09059137b5e4"/>
                <argumentType ref="type.81eec93a-ad29-4add-9663-ecf02764d8ef"/>
                <argumentType ref="type.ca76f8d7-ba7c-4132-845c-257ba0f626a5"/>
            </content>
        </type>
        <type derived="true" id="type.b489c393-8d92-4eec-805d-7de83c8201b5">
            <name>RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**>&amp;</name>
            <content>
                <baseType ref="type.ed68a8ed-fd56-4054-ad9c-2067977463a1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dabf4d17-f394-4fe2-b29f-ea27e7394368">
            <name>RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.ed68a8ed-fd56-4054-ad9c-2067977463a1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8219770f-e13d-4b8f-b2d5-26539faac2fd">
            <name>RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**>*</name>
            <content>
                <baseType ref="type.ed68a8ed-fd56-4054-ad9c-2067977463a1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.20152770-683e-46e8-81d2-35eda0e2ffa4" specialization="true">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e630721c-0538-48f6-891a-8914ee7f1e2a"/>
                <argumentType ref="type.089db9d8-48ce-4529-a813-ce2dd1788ada"/>
                <argumentType ref="type.0e29e3ce-e749-485f-801b-f15647e08f76"/>
            </content>
        </type>
        <type derived="true" id="type.8d3af45b-d3de-4498-8a78-4bd2507a2358">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.20152770-683e-46e8-81d2-35eda0e2ffa4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.3c07d21d-d1db-4057-99ec-5d178e7d460d" specialization="true">
            <name>RandomAccessIter&lt;Pair&lt;int, String&lt;char>>, Pair&lt;int, String&lt;char>>&amp;, Pair&lt;int, String&lt;char>>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e5db27f3-6800-47ab-8da5-9d3b9d7ebe45"/>
                <argumentType ref="type.c5bada96-06cd-462c-b113-a8a6544acc0a"/>
                <argumentType ref="type.e2813932-673d-4135-9a2b-585ae99013a4"/>
            </content>
        </type>
        <type derived="true" id="type.4b9065dc-a470-44c9-ab66-7448dd1eea53">
            <name>RandomAccessIter&lt;Pair&lt;int, String&lt;char>>, Pair&lt;int, String&lt;char>>&amp;, Pair&lt;int, String&lt;char>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3c07d21d-d1db-4057-99ec-5d178e7d460d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5e1dd887-81c3-47af-a591-2a7a7e6d9f6b" specialization="true">
            <name>RandomAccessIter&lt;RuleLink*, RuleLink*&amp;, RuleLink**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.085c7307-564a-4004-9bb6-d3d462467d33"/>
                <argumentType ref="type.e4514e73-555f-47bd-818b-2696c58e2931"/>
                <argumentType ref="type.0de2a567-d99a-436a-b4b9-5f66a3d3fcd0"/>
            </content>
        </type>
        <type derived="true" id="type.77f187e8-f955-44b6-86fe-402402c9a24a">
            <name>RandomAccessIter&lt;RuleLink*, RuleLink*&amp;, RuleLink**>&amp;</name>
            <content>
                <baseType ref="type.5e1dd887-81c3-47af-a591-2a7a7e6d9f6b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.56354596-8d3a-454f-961a-69ad7daff004">
            <name>RandomAccessIter&lt;RuleLink*, RuleLink*&amp;, RuleLink**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5e1dd887-81c3-47af-a591-2a7a7e6d9f6b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9c283837-e4f9-4327-b95d-35e04e6f1379">
            <name>RandomAccessIter&lt;RuleLink*, RuleLink*&amp;, RuleLink**>*</name>
            <content>
                <baseType ref="type.5e1dd887-81c3-47af-a591-2a7a7e6d9f6b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.1967697f-8722-48fe-bb20-cbf650ed0a76" specialization="true">
            <name>RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.085c7307-564a-4004-9bb6-d3d462467d33"/>
                <argumentType ref="type.2ca5b171-48d2-4f62-b16c-3108d0c5ea9d"/>
                <argumentType ref="type.bff13346-ee9c-4e30-b68a-9498225af72e"/>
            </content>
        </type>
        <type derived="true" id="type.0da4f650-a155-47d6-a192-308f37973769">
            <name>RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**>&amp;</name>
            <content>
                <baseType ref="type.1967697f-8722-48fe-bb20-cbf650ed0a76"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.89cd1226-107d-4b9f-b613-a937981091e5">
            <name>RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**>&amp;&amp;</name>
            <content>
                <baseType ref="type.1967697f-8722-48fe-bb20-cbf650ed0a76"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c5392370-ecc4-4bfd-86a1-7d606da17eab">
            <name>RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**>*</name>
            <content>
                <baseType ref="type.1967697f-8722-48fe-bb20-cbf650ed0a76"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.d6ecdb60-0d82-4ada-b610-f227765796e5" specialization="true">
            <name>RandomAccessIter&lt;RuleParser*, RuleParser*&amp;, RuleParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                <argumentType ref="type.8813a19b-b731-492e-b13f-cf96791f2d3c"/>
                <argumentType ref="type.98c4376a-153d-41b7-a715-2a0e5dc1da17"/>
            </content>
        </type>
        <type derived="true" id="type.753f2597-9917-4409-adea-01782e001637">
            <name>RandomAccessIter&lt;RuleParser*, RuleParser*&amp;, RuleParser**>&amp;</name>
            <content>
                <baseType ref="type.d6ecdb60-0d82-4ada-b610-f227765796e5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.33c56a06-a504-42c9-895b-0bcb04612099">
            <name>RandomAccessIter&lt;RuleParser*, RuleParser*&amp;, RuleParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.d6ecdb60-0d82-4ada-b610-f227765796e5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a04f3a37-8477-4a8b-9905-40a6ade13159">
            <name>RandomAccessIter&lt;RuleParser*, RuleParser*&amp;, RuleParser**>*</name>
            <content>
                <baseType ref="type.d6ecdb60-0d82-4ada-b610-f227765796e5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.6a622339-99f6-4240-b38a-a55c06a27dd2" specialization="true">
            <name>RandomAccessIter&lt;RuleParser*, const RuleParser*&amp;, const RuleParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.bbd77701-3f99-4f47-9120-30362de0531d"/>
                <argumentType ref="type.78d1b41f-54a4-4e35-a33e-0fdd12f3d9d5"/>
                <argumentType ref="type.ee662fe2-645e-4eb8-bc1e-194cd62092ce"/>
            </content>
        </type>
        <type derived="true" id="type.d5ce78ac-b134-4620-8256-490030730aff">
            <name>RandomAccessIter&lt;RuleParser*, const RuleParser*&amp;, const RuleParser**>&amp;</name>
            <content>
                <baseType ref="type.6a622339-99f6-4240-b38a-a55c06a27dd2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5c160d93-145d-4d23-b247-3faae2f6cdd3">
            <name>RandomAccessIter&lt;RuleParser*, const RuleParser*&amp;, const RuleParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.6a622339-99f6-4240-b38a-a55c06a27dd2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9a0887ee-eaea-4996-b6f0-ecb89db16c67">
            <name>RandomAccessIter&lt;RuleParser*, const RuleParser*&amp;, const RuleParser**>*</name>
            <content>
                <baseType ref="type.6a622339-99f6-4240-b38a-a55c06a27dd2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.ceb84fa6-c42a-4468-9ff8-767aa1b16706" specialization="true">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e03a0bc7-d246-4cf4-9848-cf29ffebee94"/>
                <argumentType ref="type.a6dda7ef-14ac-483a-a353-da413777dda3"/>
                <argumentType ref="type.a34c8220-0ee4-4612-a5eb-fe9e0c28315b"/>
            </content>
        </type>
        <type derived="true" id="type.512ae88c-9fa1-4763-9560-684cae1ef36c">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**>&amp;&amp;</name>
            <content>
                <baseType ref="type.ceb84fa6-c42a-4468-9ff8-767aa1b16706"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.1dca3bfd-cf05-4080-b083-79d0af05571e" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.6c0869e9-f9ee-4168-aac2-54776296141b"/>
                <argumentType ref="type.7d8c77b5-4a95-4413-a0b2-ebabc5cae3e2"/>
            </content>
        </type>
        <type id="type.fc6b4307-ce58-43ef-a8d7-6c19bef2123d" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.d4113053-b440-44ac-9f97-d3438852187c"/>
                <argumentType ref="type.10f00b22-a6be-487a-9fdf-fe55d1055af5"/>
            </content>
        </type>
        <type id="type.909ff4bd-0e57-4b73-85cc-64a8ce6805ab" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5fa3ca84-d725-459d-ad06-76a86c2f8065"/>
                <argumentType ref="type.99a779d6-f5b7-4444-a705-dd3ba612a8df"/>
            </content>
        </type>
        <type id="type.b6f9bc35-e777-444e-9f0b-969d5ece97f5" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.abceca1b-4a5b-4b12-be3e-67a769dd57c3"/>
                <argumentType ref="type.848f8ec3-fd34-4c3c-b27e-14fb4d2c07b4"/>
            </content>
        </type>
        <type id="type.55040c2d-2120-47bd-b0ee-c6d18137af04" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.263e93aa-308d-41c4-9871-8a478436f10e"/>
                <argumentType ref="type.a2476928-a21d-4ebb-8117-e6533b432411"/>
            </content>
        </type>
        <type id="type.c5eb1e31-7297-41ae-a37c-cf14bf1e3776" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.3634480c-49e0-4fcf-8b51-29bb8dad91ab"/>
                <argumentType ref="type.0367a3ea-7027-4143-84e3-4c74c4147323"/>
            </content>
        </type>
        <type id="type.c1bbf78c-1692-4ebe-95dc-2ffcb3aa4ec8" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.c6c1bb7c-daf9-4ae7-9995-c2fcb393ebec"/>
                <argumentType ref="type.09ab00c2-f0c8-4584-a924-bf16cd5c853e"/>
            </content>
        </type>
        <type derived="true" id="type.13ce3392-3fa7-4545-a41f-0b741f7979b5">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c5eb1e31-7297-41ae-a37c-cf14bf1e3776"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c6fdf847-8a7b-4959-8902-845926fa0da4">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.55040c2d-2120-47bd-b0ee-c6d18137af04"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6ab53ccc-5f12-498a-8a96-81e847869d8e">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1dca3bfd-cf05-4080-b083-79d0af05571e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f38de8e3-dec8-4ac8-9df0-9d872b70ef46">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.b6f9bc35-e777-444e-9f0b-969d5ece97f5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.aa8cf2b9-4730-4c3a-b93c-cec21a0a6278">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.909ff4bd-0e57-4b73-85cc-64a8ce6805ab"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.398a507b-8c88-48c7-9894-906a0c485396">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c1bbf78c-1692-4ebe-95dc-2ffcb3aa4ec8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.32ddd4fa-e91a-450c-b25e-b52ec3bc7422">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.fc6b4307-ce58-43ef-a8d7-6c19bef2123d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4006d7ea-e8c5-463d-ae59-8ab756d425a2" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5385220e-d3f7-4322-860f-391551dffcc8"/>
                <argumentType ref="type.c950a443-b650-4521-b92b-18740be8cc09"/>
            </content>
        </type>
        <type id="type.751d3cec-26db-4ef3-bc62-33162cb6507c" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.0f698987-b5c1-402e-9a09-c31f9dddb5c4"/>
                <argumentType ref="type.b99b68e7-fe4f-4799-adef-b52fe28bb7bc"/>
            </content>
        </type>
        <type id="type.44eb20d9-df42-437d-b012-250653e4ae77" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.cb300d2e-9050-49e2-9c3e-124ec80ffe07"/>
                <argumentType ref="type.a96df6a6-601c-40ac-a541-a53cd15e600e"/>
            </content>
        </type>
        <type id="type.4cafdc88-9678-42de-874e-07cfe9a15eca" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8824b1b2-54b5-4be3-9de5-889dcf9797da"/>
                <argumentType ref="type.f6bec379-7df5-4b46-9697-238035c34497"/>
            </content>
        </type>
        <type id="type.920f768c-985a-4533-97e4-5593d5e04b09" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.571c4144-4c3a-4cda-b62e-680fbf98cfb1"/>
                <argumentType ref="type.1220b8ee-d964-479f-b120-08f827761522"/>
            </content>
        </type>
        <type id="type.4500b4c9-ef3d-4cf6-aaa7-83e3cd99be4d" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.e16d8e8f-f20d-4426-93ce-632b3e425451"/>
                <argumentType ref="type.21fa00b5-bba3-4a8a-b11a-03a41c3d28ba"/>
            </content>
        </type>
        <type id="type.7da98461-7383-4e8c-98b5-da08501eef50" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.47e5cb95-1bf3-4577-a4c1-bafb94a129d8"/>
                <argumentType ref="type.c21c6b71-c368-47f0-a7f2-06e8a053f124"/>
            </content>
        </type>
        <type id="type.44eb20d9-df42-437d-b012-250653e4ae77" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.cb300d2e-9050-49e2-9c3e-124ec80ffe07"/>
                <argumentType ref="type.a96df6a6-601c-40ac-a541-a53cd15e600e"/>
            </content>
        </type>
        <type derived="true" id="type.4885a70b-acdd-4727-9282-82879d45b315">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4500b4c9-ef3d-4cf6-aaa7-83e3cd99be4d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dda7eb02-9cb3-4261-a2de-d8915014ec58">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.7da98461-7383-4e8c-98b5-da08501eef50"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e01cfbaa-393a-48dc-83f3-6239d08829f4">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.44eb20d9-df42-437d-b012-250653e4ae77"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.00ee0992-a845-4f0e-b760-eb5bed4b5bd7">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.751d3cec-26db-4ef3-bc62-33162cb6507c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4ac06573-c930-472e-a389-d4fe533f423e">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4cafdc88-9678-42de-874e-07cfe9a15eca"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.31ce08e9-a2b9-4027-ac20-6160e636c042">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.920f768c-985a-4533-97e4-5593d5e04b09"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.36b841cd-32bb-466e-b699-41de7248cfb9">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4006d7ea-e8c5-463d-ae59-8ab756d425a2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8ac49d56-9202-4f8b-8c4f-e9663a7f95c7" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a08e7b96-65b1-4902-bc7e-40a22e01d134"/>
                <argumentType ref="type.33287d25-daea-44ab-bdbf-ade78d5ac4b0"/>
                <argumentType ref="type.4edca87b-1c8f-42b1-912d-c9a66d4a6182"/>
            </content>
        </type>
        <type derived="true" id="type.928ade14-1c01-4b8a-a89a-6296c90d00b9">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8ac49d56-9202-4f8b-8c4f-e9663a7f95c7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.b088b242-0c93-434b-8531-a74f49ecf8b4" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a08e7b96-65b1-4902-bc7e-40a22e01d134"/>
                <argumentType ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                <argumentType ref="type.a70a39d6-f5dc-4289-adf7-85a592691875"/>
            </content>
        </type>
        <type derived="true" id="type.5889823f-3c73-466d-87be-f6b1bb1b5107">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.b088b242-0c93-434b-8531-a74f49ecf8b4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.30cf626f-4f92-4f6f-95a1-13dd99939dcb" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.83915a56-dc2f-4773-8a98-6f9537ba1712"/>
                <argumentType ref="type.828bdeb7-f02d-4b39-99e9-63cf85590097"/>
            </content>
        </type>
        <type derived="true" id="type.96ef2ff0-1c9b-411b-be72-a97af08467b9">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.30cf626f-4f92-4f6f-95a1-13dd99939dcb"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.f054ace4-b3bd-4d45-be28-f4b5f1406de6" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                <argumentType ref="type.0b4ccc59-a858-4693-80b5-d810cdd3010e"/>
            </content>
        </type>
        <type derived="true" id="type.8bee5e5b-6000-4c2c-aa27-4df0ccd1fdd0">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.f054ace4-b3bd-4d45-be28-f4b5f1406de6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.336f8a84-e1b2-493e-a54e-72ec1b1211b1" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a72919e3-177c-45f9-a36d-5e06c976d24e"/>
                <argumentType ref="type.a1a006f6-15e1-486f-b3d5-2e5b4ad8f67e"/>
                <argumentType ref="type.71ffc5d7-f623-44eb-8b92-de1f6ae4cb35"/>
            </content>
        </type>
        <type derived="true" id="type.b90b5615-c7b6-4391-b006-6f16a6abbcad">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.336f8a84-e1b2-493e-a54e-72ec1b1211b1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.58a8f2a8-eeb4-40da-a31a-c3e89bb8983d" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a72919e3-177c-45f9-a36d-5e06c976d24e"/>
                <argumentType ref="type.936accba-5025-41ac-8a2c-9c0af569fe0d"/>
                <argumentType ref="type.53edebba-2f55-4e12-be16-95a896289b0f"/>
            </content>
        </type>
        <type derived="true" id="type.f4818d10-7e0c-4a1e-9b7e-e529dcaf3751">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.58a8f2a8-eeb4-40da-a31a-c3e89bb8983d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.deca1b1e-f47b-44db-862f-16718b02f771" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, AttrOrVar&amp;, AttrOrVar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <argumentType ref="type.63a88dc6-508a-467e-a8a9-22de27a8d020"/>
                <argumentType ref="type.54190d53-ec69-4fae-bc02-55615907cb08"/>
            </content>
        </type>
        <type derived="true" id="type.f075fe69-06ed-4b3c-97ff-bd9f4146543b">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, AttrOrVar&amp;, AttrOrVar*>&amp;</name>
            <content>
                <baseType ref="type.deca1b1e-f47b-44db-862f-16718b02f771"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5c66a3da-bd24-4afc-954e-45f8012acc67">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, AttrOrVar&amp;, AttrOrVar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.deca1b1e-f47b-44db-862f-16718b02f771"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.851a53bf-cc4c-4ccd-95d7-d5f7c5964dd6">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, AttrOrVar&amp;, AttrOrVar*>*</name>
            <content>
                <baseType ref="type.deca1b1e-f47b-44db-862f-16718b02f771"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.f6e44b60-965e-4e58-8b87-7f9c7fa5fedc" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <argumentType ref="type.ce9091e2-9fc0-40c7-8aa9-a25a6c92dfbb"/>
                <argumentType ref="type.225a24b7-6207-44e4-b5c2-2fc0fcfc0171"/>
            </content>
        </type>
        <type derived="true" id="type.9ab048e5-5d86-484d-b0ff-8f5c150a0ca9">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*>&amp;</name>
            <content>
                <baseType ref="type.f6e44b60-965e-4e58-8b87-7f9c7fa5fedc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a69a7fcf-c02e-409f-b72f-62e050f4eb3f">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.f6e44b60-965e-4e58-8b87-7f9c7fa5fedc"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ba64fdf6-5569-4dd8-9b2d-2fb3951b37a8">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*>*</name>
            <content>
                <baseType ref="type.f6e44b60-965e-4e58-8b87-7f9c7fa5fedc"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.a4951cbd-a157-474c-9eaf-083306800340" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <argumentType ref="type.3a94c86b-1dff-490f-bf80-7658f6286460"/>
                <argumentType ref="type.ae93d3c2-1f9b-4c16-a8fb-2126d42ff6f4"/>
            </content>
        </type>
        <type derived="true" id="type.7713edf6-0187-4627-aba7-1a822c323c7e">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*>&amp;</name>
            <content>
                <baseType ref="type.a4951cbd-a157-474c-9eaf-083306800340"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e07ad71b-5aa7-4d46-9172-a0c94bd091e3">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*>&amp;&amp;</name>
            <content>
                <baseType ref="type.a4951cbd-a157-474c-9eaf-083306800340"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11e84e15-9066-4b27-b634-0241edf5e78f">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*>*</name>
            <content>
                <baseType ref="type.a4951cbd-a157-474c-9eaf-083306800340"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.84a4a50d-172e-496c-b4aa-d27478831faa" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <argumentType ref="type.7a02da95-3622-442a-a2bc-ed5d66cd0507"/>
                <argumentType ref="type.03d5b075-21a9-4d5e-a0f6-eb7018d5e74e"/>
            </content>
        </type>
        <type derived="true" id="type.59303153-a8e0-4505-a1c2-89d32920d2ad">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*>&amp;</name>
            <content>
                <baseType ref="type.84a4a50d-172e-496c-b4aa-d27478831faa"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f4de82de-c2ac-4590-9a52-63fd34698ee7">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*>&amp;&amp;</name>
            <content>
                <baseType ref="type.84a4a50d-172e-496c-b4aa-d27478831faa"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6549c006-4da9-491d-a1cf-820b8c59f33b">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*>*</name>
            <content>
                <baseType ref="type.84a4a50d-172e-496c-b4aa-d27478831faa"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.64a46a18-9a67-4d71-b585-8d13941cc45b" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <argumentType ref="type.c95d4474-de49-4381-b0f0-7e4b63511652"/>
                <argumentType ref="type.9a73c30f-f5ef-47cf-b111-e571bac8f83c"/>
            </content>
        </type>
        <type derived="true" id="type.5d49b2d5-8b5c-45de-8388-d0824c5bad3a">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*>&amp;</name>
            <content>
                <baseType ref="type.64a46a18-9a67-4d71-b585-8d13941cc45b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.37eeb751-d5a3-4f6f-846b-b788ae094da7">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*>&amp;&amp;</name>
            <content>
                <baseType ref="type.64a46a18-9a67-4d71-b585-8d13941cc45b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9567d834-bd02-42c2-bd93-0c1b1083d550">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*>*</name>
            <content>
                <baseType ref="type.64a46a18-9a67-4d71-b585-8d13941cc45b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.0acdf257-6c35-4191-b5eb-e1f1b96fa907" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <argumentType ref="type.5edd640a-343c-465f-98dd-8151e56c0518"/>
                <argumentType ref="type.7b6385ad-33e3-46d4-8571-88f0f9b3fe07"/>
            </content>
        </type>
        <type derived="true" id="type.81d23f93-b9ee-4275-8074-e1490f69c93c">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*>&amp;</name>
            <content>
                <baseType ref="type.0acdf257-6c35-4191-b5eb-e1f1b96fa907"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9958fa27-1a58-45ac-8c52-efd2c7b72469">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*>&amp;&amp;</name>
            <content>
                <baseType ref="type.0acdf257-6c35-4191-b5eb-e1f1b96fa907"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b9d515ba-2843-4ef3-8ef5-76df481dda7c">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*>*</name>
            <content>
                <baseType ref="type.0acdf257-6c35-4191-b5eb-e1f1b96fa907"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.7d3a1a73-6edd-4adb-86bc-3bffaecc25a5" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.fb622aeb-20be-4cfe-80a1-29ae70b97c8d"/>
                <argumentType ref="type.3534e919-0493-428e-9b24-b246cca22ec4"/>
            </content>
        </type>
        <type derived="true" id="type.2197020b-3417-43bd-85e8-dcac977cf667">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.7d3a1a73-6edd-4adb-86bc-3bffaecc25a5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.b96f47e6-8b44-4055-bf74-cacae1f3a7b3" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.8669ba2e-0f80-4256-9c45-e6a4095a0935"/>
                <argumentType ref="type.8e69eed5-9d29-41f1-9808-ec84811da2a3"/>
            </content>
        </type>
        <type derived="true" id="type.227b5f78-d3c4-4e1c-97bd-48e8531ae3eb">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.b96f47e6-8b44-4055-bf74-cacae1f3a7b3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="b73491b3-6175-4318-b1f3-8a287f8c28b4"/>
                <argumentType ref="fe57d89e-a6ee-437e-8a5d-07983da1617f"/>
                <argumentType ref="81a87582-fdc6-4f44-8c72-dc8f1db8e059"/>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="b511c96d-6f30-4e8e-ab36-7cb4849b3ae5"/>
                <argumentType ref="3dce7409-03b1-4bfa-8495-4cd26153e92c"/>
                <argumentType ref="70b76b59-7497-497a-abee-2ac8d398afbb"/>
            </content>
        </type>
        <type derived="true" id="type.61781d5e-8b85-41de-b8fb-dc73f5cf81e7">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ea51286b-c22c-4868-9a25-f665fc992365">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d2b91b19-10f0-4719-ae63-c26f014320a4">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9b7f9158-3a61-4364-90c4-28ec7ebee53e">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.10b716ac-9e04-4bdd-83d7-85867483d20a">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.579ccf59-df50-4fcc-9851-908201d5df89">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.673fc60c-a569-46a0-9b0f-3f6970a50af8">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7" specialization="true">
            <name>RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="0f34f4c2-4d14-45c9-b195-48bcf0c13b9a"/>
                <argumentType ref="type.c246bb62-cb55-4a8d-b03c-a59bad3cfb6c"/>
                <argumentType ref="type.c08cd109-1cf9-45d8-8bbe-074eecb96312"/>
            </content>
        </type>
        <type derived="true" id="type.c5fa41bc-3f78-4698-983f-c63d54595a0f">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c7ff1d82-9fc1-49b4-a125-04c181a2fe92">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9bd740a2-d84a-40d9-9328-a187e77930dc">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2d1c20f2-a2f4-43f5-95e5-e3d37e51ffcd">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eb71b180-1814-4202-8cca-0dec89822713">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892" specialization="true">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="998b6c44-792d-4efd-ac23-12cdabf7a36f"/>
                <argumentType ref="type.28c9b432-67dc-48c3-a816-6412875a1398"/>
                <argumentType ref="type.f9184aa0-ddf0-4e4b-b0ba-4a1f99e62a5e"/>
            </content>
        </type>
        <type derived="true" id="type.a24f68f5-6bc9-4920-ace4-86bda91712b9">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bae52485-9152-4377-ba14-69f8c4f7c4e8">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d61642af-0cbc-4fce-b5a5-165d877ae3a2">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3d4e9206-33a1-49fa-a7b3-8653d1e90520">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.828d4aa1-098c-4729-b180-5e5cbdf7704e">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.e1ccb1e1-d394-4de1-ba76-f3e1bf8e885d" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <argumentType ref="type.738e39ba-fdca-4bff-995f-3cb3911b97a5"/>
                <argumentType ref="type.7c892d00-ba9f-45b4-9455-e9ca6eee944b"/>
            </content>
        </type>
        <type derived="true" id="type.44519e11-fe24-4d3b-b970-b130eb10510f">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.e1ccb1e1-d394-4de1-ba76-f3e1bf8e885d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.f9d2f949-60b5-4e12-b767-2d4a5d6dc7cc" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <argumentType ref="type.792aee5c-8b65-4a14-8342-9cd02c2abef6"/>
                <argumentType ref="type.c912a4cd-b984-4e91-889d-c913f1e2704d"/>
            </content>
        </type>
        <type derived="true" id="type.2cbe2bd6-bff9-4c89-96fc-a0831fe8535d">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.f9d2f949-60b5-4e12-b767-2d4a5d6dc7cc"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.c1de1d63-ead9-489c-9fd2-24b79cb0c4bb" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <argumentType ref="type.74cc03cc-0b68-4634-8c29-3b254383d975"/>
                <argumentType ref="type.e0180e27-c0ff-41b7-9bd9-ef492856f097"/>
            </content>
        </type>
        <type derived="true" id="type.abaec8fd-c1e3-4b18-befa-37cfa7f26457">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c1de1d63-ead9-489c-9fd2-24b79cb0c4bb"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.6a435e11-26db-4587-991c-a0be5d85f564" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <argumentType ref="type.5381a953-dbf4-4fe3-90d6-8792d8961160"/>
                <argumentType ref="type.caf077ce-41b4-4b91-a8ea-28c96cf85f05"/>
            </content>
        </type>
        <type derived="true" id="type.652140b8-6916-4593-bb08-764d37844dc8">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.6a435e11-26db-4587-991c-a0be5d85f564"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.6097fd94-5088-4897-8792-5cbf8de06963" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, UniquePtr&lt;System.Text.Parsing.Context>&amp;, UniquePtr&lt;System.Text.Parsing.Context>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                <argumentType ref="type.9df091aa-c5d4-4acb-9b1c-e76e55aee38c"/>
                <argumentType ref="type.661dc334-3f32-46e9-81ab-324042bd2692"/>
            </content>
        </type>
        <type derived="true" id="type.e3ee3f4c-3a20-4f22-a54b-70fdd46f3f3d">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, UniquePtr&lt;System.Text.Parsing.Context>&amp;, UniquePtr&lt;System.Text.Parsing.Context>*>&amp;</name>
            <content>
                <baseType ref="type.6097fd94-5088-4897-8792-5cbf8de06963"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9ab8d295-e710-4e6d-85ce-74cbb18b2e28">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, UniquePtr&lt;System.Text.Parsing.Context>&amp;, UniquePtr&lt;System.Text.Parsing.Context>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.6097fd94-5088-4897-8792-5cbf8de06963"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.61334d4e-7077-42a8-9ae6-c567b5ee2f4f">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, UniquePtr&lt;System.Text.Parsing.Context>&amp;, UniquePtr&lt;System.Text.Parsing.Context>*>*</name>
            <content>
                <baseType ref="type.6097fd94-5088-4897-8792-5cbf8de06963"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.448808a4-4db0-4a8b-be96-69c5dfda024f" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                <argumentType ref="type.bb3c1f28-0c19-4350-92ec-6a5fae43894c"/>
                <argumentType ref="type.2fa54ab2-6be6-4a52-96f2-93bb297fd036"/>
            </content>
        </type>
        <type derived="true" id="type.c2f42f86-99b2-4ef6-bdef-462324fa7be4">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*>&amp;</name>
            <content>
                <baseType ref="type.448808a4-4db0-4a8b-be96-69c5dfda024f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3c17b9b1-7d24-412f-9d0a-600eae509a01">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.448808a4-4db0-4a8b-be96-69c5dfda024f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4ffe180e-73e8-4651-84e9-d0e9d3904345">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*>*</name>
            <content>
                <baseType ref="type.448808a4-4db0-4a8b-be96-69c5dfda024f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9ec402d5-6f32-4bd7-b48d-e1354fcd46f4" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, UniquePtr&lt;System.Text.Parsing.Object>&amp;, UniquePtr&lt;System.Text.Parsing.Object>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
                <argumentType ref="type.d614e173-2253-43c7-9b28-86a6b2c2242c"/>
                <argumentType ref="type.fcf69734-4054-4b1c-a454-9864ef4159cb"/>
            </content>
        </type>
        <type derived="true" id="type.3c3b4534-d4f4-4938-91f6-b24e284b8bf9">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, UniquePtr&lt;System.Text.Parsing.Object>&amp;, UniquePtr&lt;System.Text.Parsing.Object>*>&amp;</name>
            <content>
                <baseType ref="type.9ec402d5-6f32-4bd7-b48d-e1354fcd46f4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.df629d9b-2af4-4b8c-95eb-5385bbee9934">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, UniquePtr&lt;System.Text.Parsing.Object>&amp;, UniquePtr&lt;System.Text.Parsing.Object>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9ec402d5-6f32-4bd7-b48d-e1354fcd46f4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b47207e6-118b-41ad-a691-aee0ef7b0f89">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, UniquePtr&lt;System.Text.Parsing.Object>&amp;, UniquePtr&lt;System.Text.Parsing.Object>*>*</name>
            <content>
                <baseType ref="type.9ec402d5-6f32-4bd7-b48d-e1354fcd46f4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.848d2abc-4a99-4533-be95-5f53b5890a62" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
                <argumentType ref="type.58849317-6708-401e-9012-12b2e6d8aa98"/>
                <argumentType ref="type.e2b71e1c-5810-4e66-9860-e56539286074"/>
            </content>
        </type>
        <type derived="true" id="type.6e8a6d35-7a42-48a6-b481-58ce69365deb">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*>&amp;</name>
            <content>
                <baseType ref="type.848d2abc-4a99-4533-be95-5f53b5890a62"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4c7d6712-695e-4c77-aeb0-b38d9157d379">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.848d2abc-4a99-4533-be95-5f53b5890a62"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.327e94c8-d9d7-45ed-9985-be626d42eab4">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*>*</name>
            <content>
                <baseType ref="type.848d2abc-4a99-4533-be95-5f53b5890a62"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.83a0c706-e8a0-4161-a9af-48a3e2e68c5e" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
                <argumentType ref="type.b1e807b2-ed14-4992-95c5-427629b08b3e"/>
                <argumentType ref="type.e2d67a83-967f-4233-ac84-5694d4b4a0a5"/>
            </content>
        </type>
        <type derived="true" id="type.bb52ad2e-22c3-47fe-9005-0b238b412d3e">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;</name>
            <content>
                <baseType ref="type.83a0c706-e8a0-4161-a9af-48a3e2e68c5e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2ab3f98d-1968-481b-98ff-b8952de04073">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.83a0c706-e8a0-4161-a9af-48a3e2e68c5e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.07b0a2c1-9859-4c5c-b717-3407753dc1f1">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>*</name>
            <content>
                <baseType ref="type.83a0c706-e8a0-4161-a9af-48a3e2e68c5e"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.6dca435d-771a-4ccb-9489-6e05fc497cfc" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
                <argumentType ref="type.7635a681-7d97-45cc-84a3-4c1255f83b03"/>
                <argumentType ref="type.83f16ce2-1e9b-494b-beb8-dd0af2fb82e2"/>
            </content>
        </type>
        <type derived="true" id="type.d53f3439-8427-47a0-8743-0499e5c81c63">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;</name>
            <content>
                <baseType ref="type.6dca435d-771a-4ccb-9489-6e05fc497cfc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a107d4ab-109a-40f4-8093-685802cbc559">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.6dca435d-771a-4ccb-9489-6e05fc497cfc"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0bac04c9-6882-4413-8bca-5a97a3fad930">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>*</name>
            <content>
                <baseType ref="type.6dca435d-771a-4ccb-9489-6e05fc497cfc"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.d48772dd-0677-4d42-b880-cca36b834b60" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
                <argumentType ref="type.526780c4-1b1f-4e29-bdcc-c4f903594d9e"/>
                <argumentType ref="type.0e313b38-61e9-462c-add7-7f5c7687cb83"/>
            </content>
        </type>
        <type derived="true" id="type.b1231db8-9492-4922-97dc-63d84f7570f3">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;</name>
            <content>
                <baseType ref="type.d48772dd-0677-4d42-b880-cca36b834b60"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.53e51092-a1f0-476e-a4c9-e42136f8aaf8">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.d48772dd-0677-4d42-b880-cca36b834b60"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.18f1473c-f35f-40e6-8e91-8f588dc1a1e1">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*>*</name>
            <content>
                <baseType ref="type.d48772dd-0677-4d42-b880-cca36b834b60"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.d9067360-f960-4c51-bfea-8ca9721ecc62" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
                <argumentType ref="type.9a718e75-4120-4520-b286-c8668f315ec0"/>
                <argumentType ref="type.66bd0164-6ece-40b4-9ae6-b55d53455e92"/>
            </content>
        </type>
        <type derived="true" id="type.0ba8dda2-b7f6-4165-811a-83545f4039fa">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;</name>
            <content>
                <baseType ref="type.d9067360-f960-4c51-bfea-8ca9721ecc62"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.20f4c428-4585-40c8-9ad9-2d13bf2e1101">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.d9067360-f960-4c51-bfea-8ca9721ecc62"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.805fcd42-5cba-49bc-9575-7497e79fbf6b">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*>*</name>
            <content>
                <baseType ref="type.d9067360-f960-4c51-bfea-8ca9721ecc62"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.07161293-3e49-44e1-ba2d-463823d4504e" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.82a7ce48-8c91-4fae-b926-ee8280c01d32"/>
                <argumentType ref="type.05f51ddf-5b76-49fe-ba52-6742707d4d64"/>
                <argumentType ref="type.7f91322e-ded3-4428-bce1-9bd5fe32aa5d"/>
            </content>
        </type>
        <type derived="true" id="type.3ff72985-fe2f-4787-8786-6027067d11bf">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.07161293-3e49-44e1-ba2d-463823d4504e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.70586512-8ee5-41d8-b4dc-c69de18f6969" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.82a7ce48-8c91-4fae-b926-ee8280c01d32"/>
                <argumentType ref="type.f079b2be-daae-4b20-8886-441fead45e8f"/>
                <argumentType ref="type.129f82a3-1736-4739-a349-3d30e88222f4"/>
            </content>
        </type>
        <type derived="true" id="type.6326fcea-965c-4f70-a7b2-832175ba2140">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.70586512-8ee5-41d8-b4dc-c69de18f6969"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.f94f208b-4764-41cc-bbdd-c2155fb4e158" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.c3c0ec33-14c8-4fb8-ae35-4010f6faa1ec"/>
                <argumentType ref="type.e92bc2ef-6c04-44c3-a1db-4d439b91ffa5"/>
                <argumentType ref="type.718ae592-8356-488a-805e-4719bf3ff989"/>
            </content>
        </type>
        <type derived="true" id="type.6d04ab5f-318d-4a1d-acd9-90e981ad1523">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.f94f208b-4764-41cc-bbdd-c2155fb4e158"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a0a690fe-789d-4a89-82cc-92339b3bdf6e" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.c3c0ec33-14c8-4fb8-ae35-4010f6faa1ec"/>
                <argumentType ref="type.9cfcf592-b06f-489f-ac72-6050a5b6d704"/>
                <argumentType ref="type.ccf7e7b7-6368-454d-bcee-50ee273e8d8b"/>
            </content>
        </type>
        <type derived="true" id="type.86568fb5-08a8-44cb-93f4-e37c327093e3">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.a0a690fe-789d-4a89-82cc-92339b3bdf6e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.52cf85cc-e283-4837-9b47-1a50e51d2bf7" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.86c4fa33-2f07-4ccf-a453-8e9a4b208a20"/>
                <argumentType ref="type.422ac400-0a9c-4a25-bab6-4cf3cb5f0ea2"/>
                <argumentType ref="type.ceb4f4a4-4daf-42ae-991a-01463f40b664"/>
            </content>
        </type>
        <type derived="true" id="type.3dc166cc-c9dc-462e-bd2c-090639afba2e">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.52cf85cc-e283-4837-9b47-1a50e51d2bf7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a2be5ab1-1e8c-4e4b-9563-0e542e765738" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.86c4fa33-2f07-4ccf-a453-8e9a4b208a20"/>
                <argumentType ref="type.78b96a0e-7ebf-4c74-9a3d-0f428e2dcf18"/>
                <argumentType ref="type.f3aecaa3-8575-4e92-8fb6-1075c5610d6f"/>
            </content>
        </type>
        <type derived="true" id="type.5fefb8fc-2c11-4ddb-b4ea-f881e115d22e">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.a2be5ab1-1e8c-4e4b-9563-0e542e765738"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9d4f0944-665a-42c9-b9ef-d4fc74bfe356" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3c1d73bb-b21d-4a92-b26b-44b1b1638b07"/>
                <argumentType ref="type.74c374fb-6502-498a-b85d-32304be5b704"/>
                <argumentType ref="type.ea8823c2-cd78-4443-8975-a6a9e50e21b5"/>
            </content>
        </type>
        <type derived="true" id="type.d408d65a-7c52-4953-80e2-32328fd8e2c5">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9d4f0944-665a-42c9-b9ef-d4fc74bfe356"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.340d5a92-95dc-449f-9ec2-332fa1d7c368" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3c1d73bb-b21d-4a92-b26b-44b1b1638b07"/>
                <argumentType ref="type.a5a966f1-f389-4605-9317-35b656fa00bf"/>
                <argumentType ref="type.c2de911a-4d4e-4bfe-9b24-f4e00fb612b4"/>
            </content>
        </type>
        <type derived="true" id="type.9f1fe4db-feab-4963-bbf6-9e06bdd744c8">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.340d5a92-95dc-449f-9ec2-332fa1d7c368"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.571aa3fb-dfc5-4720-bcda-17b9315b1f38" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <argumentType ref="type.5803a2fa-6873-4257-a17d-cc6c1921ab21"/>
                <argumentType ref="type.c202b93d-64e7-4f08-bc70-18517cd6f28d"/>
            </content>
        </type>
        <type id="type.962ef60c-9f91-4590-b241-44236946549f" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <argumentType ref="type.5803a2fa-6873-4257-a17d-cc6c1921ab21"/>
                <argumentType ref="type.c202b93d-64e7-4f08-bc70-18517cd6f28d"/>
            </content>
        </type>
        <type id="type.0b47a266-7bff-4a37-9687-70c882395cba" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <argumentType ref="type.5803a2fa-6873-4257-a17d-cc6c1921ab21"/>
                <argumentType ref="type.c202b93d-64e7-4f08-bc70-18517cd6f28d"/>
            </content>
        </type>
        <type id="type.4979c8f5-01b7-4a5e-83d8-6644711b77f7" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <argumentType ref="type.5803a2fa-6873-4257-a17d-cc6c1921ab21"/>
                <argumentType ref="type.c202b93d-64e7-4f08-bc70-18517cd6f28d"/>
            </content>
        </type>
        <type id="type.962ef60c-9f91-4590-b241-44236946549f" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <argumentType ref="type.5803a2fa-6873-4257-a17d-cc6c1921ab21"/>
                <argumentType ref="type.c202b93d-64e7-4f08-bc70-18517cd6f28d"/>
            </content>
        </type>
        <type derived="true" id="type.0737ca45-cce5-4674-8d2c-b723092513c0">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.962ef60c-9f91-4590-b241-44236946549f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bf919c3f-b3d4-4939-9111-272b8b8a5773">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.4979c8f5-01b7-4a5e-83d8-6644711b77f7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.106955b4-ef7a-41e8-bd54-638abd3bf878">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4979c8f5-01b7-4a5e-83d8-6644711b77f7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.396b6756-504a-4e69-a5de-7e11dc1be57a">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.962ef60c-9f91-4590-b241-44236946549f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cb498b25-9415-451a-9379-1306f56800d7">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.571aa3fb-dfc5-4720-bcda-17b9315b1f38"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d78c8d97-a8cc-45fc-a4c0-1b4aa0d0c911">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.0b47a266-7bff-4a37-9687-70c882395cba"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.74552523-3748-46c9-b1d8-1a822e77dd2f">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.962ef60c-9f91-4590-b241-44236946549f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9d158570-aa7a-4806-bf8d-00213eff0200">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.4979c8f5-01b7-4a5e-83d8-6644711b77f7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.064337eb-c8c5-4f01-bb46-2ca4577311b9" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
                <argumentType ref="type.a5f9b8d6-a29e-4664-a5b2-652899892b0e"/>
                <argumentType ref="type.b92d286c-8e44-4266-9c29-61e88a9c83fe"/>
            </content>
        </type>
        <type id="type.d6d0778b-3d31-46bd-955a-f524f74afab3" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
                <argumentType ref="type.a5f9b8d6-a29e-4664-a5b2-652899892b0e"/>
                <argumentType ref="type.b92d286c-8e44-4266-9c29-61e88a9c83fe"/>
            </content>
        </type>
        <type id="type.08dae469-1cb0-4cb2-8968-9a454275a84c" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
                <argumentType ref="type.a5f9b8d6-a29e-4664-a5b2-652899892b0e"/>
                <argumentType ref="type.b92d286c-8e44-4266-9c29-61e88a9c83fe"/>
            </content>
        </type>
        <type derived="true" id="type.5e17d4be-f183-4f4c-b37b-40445b8c3f24">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.d6d0778b-3d31-46bd-955a-f524f74afab3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6ea95ed4-da2a-433b-98ce-857c80b5be0c">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.08dae469-1cb0-4cb2-8968-9a454275a84c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.08f23816-aa6a-403b-82ba-ea43465bef02">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.d6d0778b-3d31-46bd-955a-f524f74afab3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.83d06dc7-fd07-4177-b9a2-cc32c37342b2">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.08dae469-1cb0-4cb2-8968-9a454275a84c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fae8538f-6065-48d2-a809-3dd927792711">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.064337eb-c8c5-4f01-bb46-2ca4577311b9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d38340a6-c7b6-4b92-b965-133087ef6357">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.08dae469-1cb0-4cb2-8968-9a454275a84c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6faec167-f433-43a2-8c1a-a7d9f6c314b2">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.d6d0778b-3d31-46bd-955a-f524f74afab3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <argumentType ref="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d"/>
                <argumentType ref="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db"/>
            </content>
        </type>
        <type id="type.f3b9f26d-281b-49b4-8ed6-80d32d026901" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <argumentType ref="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d"/>
                <argumentType ref="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db"/>
            </content>
        </type>
        <type id="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <argumentType ref="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d"/>
                <argumentType ref="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db"/>
            </content>
        </type>
        <type id="type.c4cf4371-2180-4136-887c-9f0f7e162f18" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <argumentType ref="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d"/>
                <argumentType ref="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db"/>
            </content>
        </type>
        <type id="type.3925540b-76bd-4c0a-b32c-6ca40363ee87" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <argumentType ref="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d"/>
                <argumentType ref="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db"/>
            </content>
        </type>
        <type derived="true" id="type.1678cb9b-a90d-455f-b220-733a184a1518">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.3925540b-76bd-4c0a-b32c-6ca40363ee87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.73e4f5ca-9f6a-46d6-845d-236996a26a6b">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.f3b9f26d-281b-49b4-8ed6-80d32d026901"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5c90a3b2-1cfe-4745-b365-7b91952fdb06">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3925540b-76bd-4c0a-b32c-6ca40363ee87"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1e33f4ea-5c11-410e-a231-62aae10e6d7b">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c4cf4371-2180-4136-887c-9f0f7e162f18"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c0342df0-97dc-401c-93f3-e53c53635564">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.64877664-d3bc-48f6-85ca-00135b9b49e2">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.f3b9f26d-281b-49b4-8ed6-80d32d026901"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.746ccdef-aada-418a-8344-5bc68d2cc2d5">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.3925540b-76bd-4c0a-b32c-6ca40363ee87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e6efce59-e2bf-4212-9374-0e7f7dfec404">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.f3b9f26d-281b-49b4-8ed6-80d32d026901"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.cf5f8fe3-b3c3-451f-924a-7cbf431842b7" specialization="true">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <argumentType ref="type.aae31367-b95c-41be-8133-9f94082d8533"/>
                <argumentType ref="type.4784dce6-44b5-4aa0-99c5-7073ea47897f"/>
            </content>
        </type>
        <type derived="true" id="type.e3c57cc0-ab20-4ecc-8c30-c2055196e180">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.cf5f8fe3-b3c3-451f-924a-7cbf431842b7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.74ff6975-b537-4ba9-ac63-9854bb0ee102" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <argumentType ref="type.c1524672-2d01-49f8-9d70-c1c1521aa6fb"/>
                <argumentType ref="type.ca60f6dd-9436-476f-af7a-f8f55989d9d9"/>
            </content>
        </type>
        <type id="type.8a2242c4-ca12-4adc-9404-96c5188d329f" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <argumentType ref="type.c1524672-2d01-49f8-9d70-c1c1521aa6fb"/>
                <argumentType ref="type.ca60f6dd-9436-476f-af7a-f8f55989d9d9"/>
            </content>
        </type>
        <type id="type.734c263d-5c08-4674-bf78-59a352e9bf4b" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <argumentType ref="type.c1524672-2d01-49f8-9d70-c1c1521aa6fb"/>
                <argumentType ref="type.ca60f6dd-9436-476f-af7a-f8f55989d9d9"/>
            </content>
        </type>
        <type id="type.6bb64b4d-e982-4e1a-8885-309a97c6bb8b" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <argumentType ref="type.c1524672-2d01-49f8-9d70-c1c1521aa6fb"/>
                <argumentType ref="type.ca60f6dd-9436-476f-af7a-f8f55989d9d9"/>
            </content>
        </type>
        <type derived="true" id="type.e0344f01-0d6e-43de-875c-7759dbccb52c">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.734c263d-5c08-4674-bf78-59a352e9bf4b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5e87c07f-f8df-45e4-aaf5-041d750d28b3">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.74ff6975-b537-4ba9-ac63-9854bb0ee102"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.651e29e6-e417-4603-ba9f-ff7a7acddfe9">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.6bb64b4d-e982-4e1a-8885-309a97c6bb8b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a18942d0-e5c2-4b87-8e31-0bd1c38d0ec5">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.734c263d-5c08-4674-bf78-59a352e9bf4b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.56f6f482-6043-4579-9058-e50c4ed1926f">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.74ff6975-b537-4ba9-ac63-9854bb0ee102"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.035ba226-2b0c-4a06-8c93-a26435981f5e">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8a2242c4-ca12-4adc-9404-96c5188d329f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c22bb68a-acbf-4339-b5aa-bb2aaa94c32f">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.74ff6975-b537-4ba9-ac63-9854bb0ee102"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8229c429-61f4-4f12-a358-606f61ac7bbf">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.734c263d-5c08-4674-bf78-59a352e9bf4b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c22bb68a-acbf-4339-b5aa-bb2aaa94c32f">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.74ff6975-b537-4ba9-ac63-9854bb0ee102"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.de6ba713-dfca-4f35-8dfa-dd04f6439d91" specialization="true">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.99fdb6cf-9f3e-4ff5-8dd9-c1e7c090ddcf"/>
                <argumentType ref="type.8ee426e5-a7e6-45a9-82cc-c652499f5f7b"/>
            </content>
        </type>
        <type derived="true" id="type.6f754054-f1e7-42dc-88e3-1b2cf5ca31c0">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.de6ba713-dfca-4f35-8dfa-dd04f6439d91"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.85dc008f-a9d7-45ad-9d72-7df4009b23c4" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.b810c316-c824-48cc-861f-c2150ba51f2c"/>
                <argumentType ref="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b"/>
            </content>
        </type>
        <type id="type.0cd2271a-5038-4157-9d7e-bef66413589b" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.b810c316-c824-48cc-861f-c2150ba51f2c"/>
                <argumentType ref="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b"/>
            </content>
        </type>
        <type id="type.81659c12-47b4-48f5-b41e-861765cae548" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.b810c316-c824-48cc-861f-c2150ba51f2c"/>
                <argumentType ref="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b"/>
            </content>
        </type>
        <type id="type.7dd27802-63ef-4ab9-80ad-163cfa48ae74" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.b810c316-c824-48cc-861f-c2150ba51f2c"/>
                <argumentType ref="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b"/>
            </content>
        </type>
        <type id="type.85dc008f-a9d7-45ad-9d72-7df4009b23c4" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.b810c316-c824-48cc-861f-c2150ba51f2c"/>
                <argumentType ref="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b"/>
            </content>
        </type>
        <type derived="true" id="type.d79d83ef-a5c5-4b76-9e90-17f1d902e5cf">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.0cd2271a-5038-4157-9d7e-bef66413589b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d34152d3-6c5a-435a-87e2-96c78eb58dcb">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.85dc008f-a9d7-45ad-9d72-7df4009b23c4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.40a59444-2a1d-4df5-8813-a641aaa87000">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.0cd2271a-5038-4157-9d7e-bef66413589b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4013f27d-0e5a-4d7c-9ac7-a8759fc0b7b1">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.7dd27802-63ef-4ab9-80ad-163cfa48ae74"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fd0b8584-65ae-41d8-aa2e-29b5984956c6">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.81659c12-47b4-48f5-b41e-861765cae548"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.73289a17-f1b1-4444-b5aa-2c503d2c0856">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.85dc008f-a9d7-45ad-9d72-7df4009b23c4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.54ae1f09-9e10-4191-8896-763ec7451143">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.85dc008f-a9d7-45ad-9d72-7df4009b23c4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e931b40a-b3c8-4df8-a8f8-0e3e3bef0e10">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.0cd2271a-5038-4157-9d7e-bef66413589b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.54ae1f09-9e10-4191-8896-763ec7451143">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.85dc008f-a9d7-45ad-9d72-7df4009b23c4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.02047d61-9ac1-43c1-b285-cc672573161d" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <argumentType ref="type.a0763378-c245-47b1-a07e-877c5a2d11c4"/>
                <argumentType ref="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d"/>
            </content>
        </type>
        <type id="type.5bd621fc-de5a-43ad-8372-953e4c5066f5" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <argumentType ref="type.a0763378-c245-47b1-a07e-877c5a2d11c4"/>
                <argumentType ref="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d"/>
            </content>
        </type>
        <type id="type.5d8b780b-7629-4dd2-a3cc-2698ecedbf23" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <argumentType ref="type.a0763378-c245-47b1-a07e-877c5a2d11c4"/>
                <argumentType ref="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d"/>
            </content>
        </type>
        <type id="type.90c583c2-24d7-4918-a052-1e088d599ad6" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <argumentType ref="type.a0763378-c245-47b1-a07e-877c5a2d11c4"/>
                <argumentType ref="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d"/>
            </content>
        </type>
        <type id="type.5d8b780b-7629-4dd2-a3cc-2698ecedbf23" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <argumentType ref="type.a0763378-c245-47b1-a07e-877c5a2d11c4"/>
                <argumentType ref="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d"/>
            </content>
        </type>
        <type derived="true" id="type.c97bae04-0966-4d05-9217-632c318e91d3">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.90c583c2-24d7-4918-a052-1e088d599ad6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.be4b52c1-1ec1-4461-8ce0-9502e7e16ffb">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.5d8b780b-7629-4dd2-a3cc-2698ecedbf23"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.63037fc3-908d-4fc4-ba2b-8e12195c8fee">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.90c583c2-24d7-4918-a052-1e088d599ad6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.70ec9369-62d2-4f12-b77a-d68539e03ab7">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5bd621fc-de5a-43ad-8372-953e4c5066f5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5f1dc174-e3a0-4694-8341-0fb241c30d81">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5d8b780b-7629-4dd2-a3cc-2698ecedbf23"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0c2cdf93-5722-489a-b3fd-9723699c6274">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.02047d61-9ac1-43c1-b285-cc672573161d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7b87774c-fd38-4979-bb69-28d0ce19c1b1">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.90c583c2-24d7-4918-a052-1e088d599ad6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee637983-37b0-4fae-80a5-207e3fe5820e">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.5d8b780b-7629-4dd2-a3cc-2698ecedbf23"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_RangeParser_A1D22AC11434C18DF491491487AA4116C3494013">
            <name>RangeParser</name>
        </type>
        <type derived="true" id="type.6d2ef368-c713-439c-b470-a268b92a3796">
            <name>RangeParser&amp;</name>
            <content>
                <baseType ref="class_RangeParser_A1D22AC11434C18DF491491487AA4116C3494013"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fcf0ebdc-bf84-4dbb-9df4-3e8dc20d802c">
            <name>RangeParser*</name>
            <content>
                <baseType ref="class_RangeParser_A1D22AC11434C18DF491491487AA4116C3494013"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047" specialization="true">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="c356b906-935c-4db5-ad50-df08eac7fe9b"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <argumentType ref="30eb3124-dd17-48e4-9517-20afa3b5a096"/>
            </content>
        </type>
        <type derived="true" id="type.292c3d83-5436-4d36-b25e-30c28a6846b2">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2" specialization="true">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="1daf5449-c489-4187-a295-de5653bae066"/>
                <argumentType ref="ca547d64-9ba8-498d-a818-12ae5b051551"/>
                <argumentType ref="1f3ea6aa-e182-46d3-9c07-478a92ddadd8"/>
                <argumentType ref="b616248a-0278-49aa-a70b-b812b6341ebc"/>
            </content>
        </type>
        <type derived="true" id="type.1d1cf949-d74f-480a-a988-52dd6d7cf0be">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3" specialization="true">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="d42bcce5-0f47-4bdd-89d3-3d2fb005e781"/>
                <argumentType ref="d42bcce5-0f47-4bdd-89d3-3d2fb005e781"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="32f2f27a-dbdc-4c0f-9987-3412ac5edac3"/>
            </content>
        </type>
        <type derived="true" id="type.ccc9b52c-76bd-4d9c-9803-88045bdc41e1">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7f938200-dbe5-4c77-8c43-ebc515b625dc">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5c8e1b65-3ce1-44ba-a4ca-0909d851a65e">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d8f1df84-1e55-47f5-bca4-d97a23f60053">
            <name>RedBlackTreeNodeBase&amp;&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6a09ecfc-9cd0-49d5-86b8-cb50e49008e0">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.78ea67a1-80fd-4a6a-aad7-5fce6192e6fe">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.48598452-33b7-4de8-b4d3-e010c4793e69" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9faf9ed2-54fe-4c94-92ea-210e387f3857"/>
                <argumentType ref="type.f288d6f7-973b-4be5-8637-db4387198ba7"/>
            </content>
        </type>
        <type id="type.ec0e2697-650d-43e0-85a8-b6bb943ac580" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.c156caa4-cb0e-4cff-8d1d-93061a4f8deb"/>
                <argumentType ref="type.44774a06-cf9c-48ba-a6b3-67d510e66de7"/>
            </content>
        </type>
        <type id="type.62748167-e889-40e9-92dd-fa4d145a8fb8" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.dc0c4d3a-00f7-450d-a1ef-fc862259eae2"/>
                <argumentType ref="type.a96d3e92-bbf0-4302-86d7-a2365bd30f51"/>
            </content>
        </type>
        <type id="type.ec0e2697-650d-43e0-85a8-b6bb943ac580" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.c156caa4-cb0e-4cff-8d1d-93061a4f8deb"/>
                <argumentType ref="type.44774a06-cf9c-48ba-a6b3-67d510e66de7"/>
            </content>
        </type>
        <type derived="true" id="type.cdacb55d-ea10-4af6-9f46-661377440e88">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.ec0e2697-650d-43e0-85a8-b6bb943ac580"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8e7e4ca0-dc84-412b-bdcc-53c96140fe3e">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.48598452-33b7-4de8-b4d3-e010c4793e69"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.63a502a5-ad10-4836-9a9e-505f31f0cc7c">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.62748167-e889-40e9-92dd-fa4d145a8fb8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.12a83642-6f92-4f5b-84f0-5e5a477cbd76" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.3dd629ab-4dfe-4540-8c26-a14f395fff20"/>
                <argumentType ref="type.a6230600-b8ed-4dbd-b8c5-077c9422e9d6"/>
            </content>
        </type>
        <type id="type.0705c860-550d-4f1f-91cf-f64da856493f" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9f2f6add-9510-4f6b-a828-946842f6d181"/>
                <argumentType ref="type.9fe211fe-ce33-41bb-9954-ce5cf1a59b0a"/>
            </content>
        </type>
        <type id="type.12a83642-6f92-4f5b-84f0-5e5a477cbd76" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.3dd629ab-4dfe-4540-8c26-a14f395fff20"/>
                <argumentType ref="type.a6230600-b8ed-4dbd-b8c5-077c9422e9d6"/>
            </content>
        </type>
        <type id="type.8a04089a-6d0c-4c93-bd2f-ae489887ce7b" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.4443f853-1a47-44cc-aa75-23d663fb36a6"/>
                <argumentType ref="type.d3dc10d7-75d1-42c8-b220-6c995ad39258"/>
            </content>
        </type>
        <type derived="true" id="type.d5a84e84-e905-40a2-913f-0369c4fcfd22">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.0705c860-550d-4f1f-91cf-f64da856493f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0cf75ba7-eace-4777-b2e2-faff21dace05">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8a04089a-6d0c-4c93-bd2f-ae489887ce7b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.33c2ece1-c50a-486d-a776-93d1a7a5e23c">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.12a83642-6f92-4f5b-84f0-5e5a477cbd76"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="14936fad-cf2b-477c-aa67-34fc3a7882a9"/>
                <argumentType ref="0f923ad2-d628-422e-bc82-6eaa34ad0f17"/>
                <argumentType ref="00275d7d-5bbd-4569-a81c-593d95b58f35"/>
            </content>
        </type>
        <type derived="true" id="type.5fe61287-a8d0-4fbe-9c00-539f586bd98d">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c6e36acc-cc39-4ffb-bbac-152e895d7f7c">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="190b6d95-4d69-4c74-89c7-e88f06befa80"/>
                <argumentType ref="type.76c606a5-918c-495e-bf41-538a79907771"/>
                <argumentType ref="type.b48dd5fb-ef81-4040-ae96-10431da96c22"/>
            </content>
        </type>
        <type derived="true" id="type.7705a57f-140a-4e6e-b07e-1793b42c6c72">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c4085ee0-bb4f-4785-a513-5c00f4222ac0">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0517d023-cec8-4f4d-93a7-9352bcdf5528">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="f5c95eb1-6538-4812-b417-597cabfcb47a"/>
                <argumentType ref="type.449009fa-ed39-4c69-bf4e-613969f93598"/>
                <argumentType ref="type.02f7f18d-57dc-49bd-b736-d9da8a80da9c"/>
            </content>
        </type>
        <type derived="true" id="type.6934d400-95b2-4dba-836c-f08516881e5d">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.86714968-fb8a-4a60-aa85-19d75a728604">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7bb71959-4821-42aa-836e-4f9b41d072d5">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="ca547d64-9ba8-498d-a818-12ae5b051551"/>
                <argumentType ref="type.c119eb20-864a-4fc6-b67d-f96c28603767"/>
                <argumentType ref="type.77ffa32f-8751-4c86-bb70-2d496f6e3600"/>
            </content>
        </type>
        <type derived="true" id="type.90cc398a-0fc8-45d1-9a90-ea02cd149947">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="ca547d64-9ba8-498d-a818-12ae5b051551"/>
                <argumentType ref="type.8714f1f6-e115-40a9-a98e-5ff45b6a6a2c"/>
                <argumentType ref="type.bd646006-2414-41b6-94f0-2f198b6b4893"/>
            </content>
        </type>
        <type derived="true" id="type.b775c25a-d92d-4139-93c1-74b05b05c4f7">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.e46fb9a3-9c76-4992-ae78-2f75ee45178a" specialization="true">
            <name>Rel&lt;Grammar*></name>
            <content>
                <primaryType ref="class_Rel_Argument_7D9E8CBD9DE1923659C6D2DE6978CE428B973071"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
            </content>
        </type>
        <type derived="true" id="type.5a1951c3-470e-4226-91e5-621581e9c974">
            <name>Rel&lt;Grammar*>&amp;</name>
            <content>
                <baseType ref="type.e46fb9a3-9c76-4992-ae78-2f75ee45178a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2dbac811-50df-4cb3-a6bd-cf3eb659595d">
            <name>Rel&lt;Grammar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.e46fb9a3-9c76-4992-ae78-2f75ee45178a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.47da2ff5-9080-4172-928d-0020cf9921c0">
            <name>Rel&lt;Grammar*>*</name>
            <content>
                <baseType ref="type.e46fb9a3-9c76-4992-ae78-2f75ee45178a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.82611156-2d60-4374-91f7-8434f424fcc0" specialization="true">
            <name>Rel&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Rel_Argument_7D9E8CBD9DE1923659C6D2DE6978CE428B973071"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.13aed1c0-fe97-4ee8-8664-bb461b8134bd">
            <name>Rel&lt;String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.82611156-2d60-4374-91f7-8434f424fcc0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6016e2cd-db25-4462-8801-f93f42c4a8a3">
            <name>Rel&lt;String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.82611156-2d60-4374-91f7-8434f424fcc0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f3f9acb5-3df9-4256-830d-f634e6f40674">
            <name>Rel&lt;String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.82611156-2d60-4374-91f7-8434f424fcc0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c81f769e-45d2-4751-8ec1-b2f67bca7747">
            <name>ReturnStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A">
            <name>RuleData</name>
        </type>
        <type derived="true" id="type.c95d4474-de49-4381-b0f0-7e4b63511652">
            <name>RuleData&amp;</name>
            <content>
                <baseType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8095807a-67ad-4dc4-8251-a14d98c23109">
            <name>RuleData&amp;&amp;</name>
            <content>
                <baseType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9a73c30f-f5ef-47cf-b111-e571bac8f83c">
            <name>RuleData*</name>
            <content>
                <baseType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b2daf1af-23bf-4b10-ba83-98696ab0cdc0">
            <name>RuleData*&amp;</name>
            <content>
                <baseType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1985469b-8318-4453-93b8-2f8c2c8faefe">
            <name>RuleData**</name>
            <content>
                <baseType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702">
            <name>RuleLink</name>
        </type>
        <type derived="true" id="type.3a217868-bdcb-4f9a-85a1-bfcf3a81fbe3">
            <name>RuleLink&amp;</name>
            <content>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.085c7307-564a-4004-9bb6-d3d462467d33">
            <name>RuleLink*</name>
            <content>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e4514e73-555f-47bd-818b-2696c58e2931">
            <name>RuleLink*&amp;</name>
            <content>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.28ddd401-cf54-4182-9172-56ea44f54e16">
            <name>RuleLink*&amp;&amp;</name>
            <content>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0de2a567-d99a-436a-b4b9-5f66a3d3fcd0">
            <name>RuleLink**</name>
            <content>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e340cac1-c39c-4a51-a0a5-5aceaccd1402">
            <name>RuleLink**&amp;</name>
            <content>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cf7b03d0-04d6-4ce2-8acd-2b50665c9bdd">
            <name>RuleLink**&amp;&amp;</name>
            <content>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b2a0b3e8-dcc5-4792-bb45-86b48e74c83f">
            <name>RuleLink***</name>
            <content>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969">
            <name>RuleParser</name>
        </type>
        <type derived="true" id="type.9d88513b-9425-401d-9e70-2d75019148b8">
            <name>RuleParser&amp;</name>
            <content>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bbd77701-3f99-4f47-9120-30362de0531d">
            <name>RuleParser*</name>
            <content>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8813a19b-b731-492e-b13f-cf96791f2d3c">
            <name>RuleParser*&amp;</name>
            <content>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5a7ec38f-3dcf-45b4-b252-fe3f1de2697f">
            <name>RuleParser*&amp;&amp;</name>
            <content>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.98c4376a-153d-41b7-a715-2a0e5dc1da17">
            <name>RuleParser**</name>
            <content>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7ef80db6-e8d9-412f-9b25-bd92f9befd60">
            <name>RuleParser**&amp;</name>
            <content>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3a96e411-6173-46a6-a9ff-43d4d490c79b">
            <name>RuleParser**&amp;&amp;</name>
            <content>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2a64bfe5-a9ad-45e9-b8ab-892f6c734919">
            <name>RuleParser***</name>
            <content>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dcf96f1d-820a-43b0-8746-f939bc330697">
            <name>RvalueRef&amp;&amp;</name>
            <content>
                <baseType ref="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A">
            <name>Scanner</name>
        </type>
        <type derived="true" id="type.f66fb1bb-b28d-4e18-b3eb-2dc8b9f2ae85">
            <name>Scanner&amp;</name>
            <content>
                <baseType ref="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3412ce04-a683-4e55-aedc-1ea2781b9c95">
            <name>Scanner*</name>
            <content>
                <baseType ref="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.aed0ffbe-9aa0-486f-ac9e-1ba9d3a765d7">
            <name>Scanner*&amp;</name>
            <content>
                <baseType ref="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6bd225c6-1a3b-4cc2-8a6e-d696ad4ea357">
            <name>Scanner**</name>
            <content>
                <baseType ref="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021">
            <name>Scope</name>
        </type>
        <type derived="true" id="type.3397ae97-84f9-42c5-8eb7-d3445bfc6f45">
            <name>Scope&amp;</name>
            <content>
                <baseType ref="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9129464f-62bd-40b8-8b5d-6af615844497">
            <name>Scope*</name>
            <content>
                <baseType ref="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5316c258-7f4f-40ff-b09e-4d258c1ac4e1">
            <name>Scope*&amp;</name>
            <content>
                <baseType ref="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a7094fd8-510a-483c-b21d-6d02a7055110">
            <name>Scope*&amp;&amp;</name>
            <content>
                <baseType ref="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.77d1b432-dddf-4610-a725-716eeacce2e5">
            <name>Scope**</name>
            <content>
                <baseType ref="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.168b5d2d-2332-461b-9019-32680f46e467" specialization="true">
            <name>SelectFirst&lt;String&lt;uchar>, Grammar*></name>
            <content>
                <primaryType ref="class_SelectFirst_T_U_5C7DFA11E2AE3BB651846960A70B00A231DD5282"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
            </content>
        </type>
        <type derived="true" id="type.e8466c0d-f76b-46ea-992b-398f769742d9">
            <name>SelectFirst&lt;String&lt;uchar>, Grammar*>&amp;</name>
            <content>
                <baseType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.73c4eafe-3448-4956-abe6-17ae86fb57c1">
            <name>SelectFirst&lt;String&lt;uchar>, Grammar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7719b866-c18b-4381-8faf-3b1c3c9e1204">
            <name>SelectFirst&lt;String&lt;uchar>, Grammar*>*</name>
            <content>
                <baseType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c2e5ba81-0ca8-46b4-8ba7-e12727895f86">
            <name>SelectFirst&lt;String&lt;uchar>, Grammar*>*&amp;</name>
            <content>
                <baseType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e1f481b2-a097-4ff4-8118-845750e399bd">
            <name>SelectFirst&lt;String&lt;uchar>, Grammar*>**</name>
            <content>
                <baseType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c" specialization="true">
            <name>SelectFirst&lt;String&lt;uchar>, Namespace*></name>
            <content>
                <primaryType ref="class_SelectFirst_T_U_5C7DFA11E2AE3BB651846960A70B00A231DD5282"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
            </content>
        </type>
        <type derived="true" id="type.d33c5423-ce8f-4557-b656-ab472e13b084">
            <name>SelectFirst&lt;String&lt;uchar>, Namespace*>&amp;</name>
            <content>
                <baseType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee32612d-19af-40c4-8d6a-477282a7ce5a">
            <name>SelectFirst&lt;String&lt;uchar>, Namespace*>&amp;&amp;</name>
            <content>
                <baseType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6c6580ee-fb9d-49d6-857c-5ea2ed3ae00d">
            <name>SelectFirst&lt;String&lt;uchar>, Namespace*>*</name>
            <content>
                <baseType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1d0e600d-c653-48c4-a936-842dc24d1480">
            <name>SelectFirst&lt;String&lt;uchar>, Namespace*>*&amp;</name>
            <content>
                <baseType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.47edf67a-04c6-4d73-90e0-3233e40be3fd">
            <name>SelectFirst&lt;String&lt;uchar>, Namespace*>**</name>
            <content>
                <baseType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac" specialization="true">
            <name>SelectFirst&lt;String&lt;uchar>, ParsingObject*></name>
            <content>
                <primaryType ref="class_SelectFirst_T_U_5C7DFA11E2AE3BB651846960A70B00A231DD5282"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.cd2b767d-81fd-400f-a8de-ad916f3e3357"/>
            </content>
        </type>
        <type derived="true" id="type.82dd356b-a6c8-4629-9664-6bb122090df7">
            <name>SelectFirst&lt;String&lt;uchar>, ParsingObject*>&amp;</name>
            <content>
                <baseType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee2654aa-9966-49c1-a017-0d613978fb28">
            <name>SelectFirst&lt;String&lt;uchar>, ParsingObject*>&amp;&amp;</name>
            <content>
                <baseType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4f1a3b94-967f-4332-a4ff-3136bd4b73df">
            <name>SelectFirst&lt;String&lt;uchar>, ParsingObject*>*</name>
            <content>
                <baseType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8b5ef62e-4769-4147-89dc-760c7df2ba79">
            <name>SelectFirst&lt;String&lt;uchar>, ParsingObject*>*&amp;</name>
            <content>
                <baseType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.760bb9df-c33d-4571-9268-4658434ba48f">
            <name>SelectFirst&lt;String&lt;uchar>, ParsingObject*>**</name>
            <content>
                <baseType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.43b66fef-0570-4fce-a804-1a8b6e883860" specialization="true">
            <name>SelectFirst&lt;String&lt;uchar>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_SelectFirst_T_U_5C7DFA11E2AE3BB651846960A70B00A231DD5282"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.90f8a3b9-c3ba-4db2-882a-dce525526d7e">
            <name>SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.010711e4-9993-47f0-abb9-c14b13a3c4df">
            <name>SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5deed9be-7452-413a-9cc2-8610393d8dd5">
            <name>SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7019cf27-c8e1-4c82-8f51-04893297ef9f">
            <name>SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>*&amp;</name>
            <content>
                <baseType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.363cc876-ed64-4eb2-a1a7-1b9236056555">
            <name>SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>**</name>
            <content>
                <baseType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SeparatorParser_94FDB93F8087C6949DA2645502E77D1B5F3ADE81">
            <name>SeparatorParser</name>
        </type>
        <type derived="true" id="type.b7cb3fe5-e6fc-45f7-8848-81d38f4d16c4">
            <name>SeparatorParser&amp;</name>
            <content>
                <baseType ref="class_SeparatorParser_94FDB93F8087C6949DA2645502E77D1B5F3ADE81"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7eee6b5f-9321-4e7c-852f-413d4e3f354b">
            <name>SeparatorParser*</name>
            <content>
                <baseType ref="class_SeparatorParser_94FDB93F8087C6949DA2645502E77D1B5F3ADE81"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SequenceParser_AEF4FE3271FA60C88397ECB05526C1D6A4FA3E01">
            <name>SequenceParser</name>
        </type>
        <type derived="true" id="type.52952c35-7029-49cd-b0a1-750698d112e8">
            <name>SequenceParser&amp;</name>
            <content>
                <baseType ref="class_SequenceParser_AEF4FE3271FA60C88397ECB05526C1D6A4FA3E01"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ce7faf24-3928-477b-8d72-dea1e4605c65">
            <name>SequenceParser*</name>
            <content>
                <baseType ref="class_SequenceParser_AEF4FE3271FA60C88397ECB05526C1D6A4FA3E01"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076" specialization="true">
            <name>SharedCount&lt;T></name>
            <content>
                <primaryType ref="class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <argumentType ref="aab8b166-6791-47ff-8961-cc4fc41834b0"/>
            </content>
        </type>
        <type derived="true" id="type.69819ca7-5403-41dc-b35a-ce2e4a9ad2a7">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1da00ae2-4439-4662-b56d-befec335afd1">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1dddf45f-265c-4943-a389-e8256b3f9641">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.de11d01c-5c10-4c57-a1b8-843d06c0bc11">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d8b23b32-ab4b-49b9-b400-e79c5e2bd08a">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F" specialization="true">
            <name>SharedPtr&lt;T></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="57e7ec3e-3f56-4249-a9b5-85a0d4d4f4ab"/>
            </content>
        </type>
        <type derived="true" id="type.a7e24723-6abc-4c89-acde-58aad575382a">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7a8523c6-8e11-4ede-aa95-a92923ec1d4b">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d54c1aff-99fc-4c4d-b2db-1dad008debe9">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4469c97d-74a7-4687-bdab-c4c0e98e868c">
            <name>SizeOf&amp;&amp;</name>
            <content>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_SpaceParser_6418127CA0B0CB09FC5DF96A2B28D5B6741FDF5A">
            <name>SpaceParser</name>
        </type>
        <type derived="true" id="type.029f2a40-5c81-4632-a99e-932d126dd4be">
            <name>SpaceParser&amp;</name>
            <content>
                <baseType ref="class_SpaceParser_6418127CA0B0CB09FC5DF96A2B28D5B6741FDF5A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.741d1608-3a16-41f8-963d-3a0c1e4afda9">
            <name>SpaceParser*</name>
            <content>
                <baseType ref="class_SpaceParser_6418127CA0B0CB09FC5DF96A2B28D5B6741FDF5A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SpaceSeparatorParser_2A483B13630174EAB1AEE4FA77E62872AF94C471">
            <name>SpaceSeparatorParser</name>
        </type>
        <type derived="true" id="type.a286eb1b-71dd-4fa5-a17b-070cfbce6993">
            <name>SpaceSeparatorParser&amp;</name>
            <content>
                <baseType ref="class_SpaceSeparatorParser_2A483B13630174EAB1AEE4FA77E62872AF94C471"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.abf284db-89ba-4192-9887-119a0ef4c9e5">
            <name>SpaceSeparatorParser*</name>
            <content>
                <baseType ref="class_SpaceSeparatorParser_2A483B13630174EAB1AEE4FA77E62872AF94C471"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SpacingMarkParser_3AD4A1C6C577E4206A0EBC5373871C84DFE9E122">
            <name>SpacingMarkParser</name>
        </type>
        <type derived="true" id="type.78a3271e-2455-4dd9-8321-ebb5cdf36872">
            <name>SpacingMarkParser&amp;</name>
            <content>
                <baseType ref="class_SpacingMarkParser_3AD4A1C6C577E4206A0EBC5373871C84DFE9E122"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0ecc3216-e387-4b96-b33c-5d6066694659">
            <name>SpacingMarkParser*</name>
            <content>
                <baseType ref="class_SpacingMarkParser_3AD4A1C6C577E4206A0EBC5373871C84DFE9E122"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Span_342F797681C8A26247E86213AFC9204FEF17D2A5">
            <name>Span</name>
        </type>
        <type derived="true" id="type.3f643dc9-0c44-4ec1-9af9-f88c278e8e3a">
            <name>Span&amp;</name>
            <content>
                <baseType ref="class_Span_342F797681C8A26247E86213AFC9204FEF17D2A5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.40a19423-0b53-44d5-b32a-d1948b073c1d">
            <name>Span&amp;&amp;</name>
            <content>
                <baseType ref="class_Span_342F797681C8A26247E86213AFC9204FEF17D2A5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.807fd097-99b5-4f00-8d73-bd94216156cc">
            <name>Span*</name>
            <content>
                <baseType ref="class_Span_342F797681C8A26247E86213AFC9204FEF17D2A5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.445522d3-ec4a-4dda-9b4b-205687e8a1bf" specialization="true">
            <name>Stack&lt;Namespace*></name>
            <content>
                <primaryType ref="class_Stack_T_44313E678C6CD0E8DB3743953B65AA105D55A963"/>
                <argumentType ref="type.b6366d40-d4d6-4a25-afd3-07b2c69a04ed"/>
            </content>
        </type>
        <type derived="true" id="type.d024558f-bed1-43f7-b068-18005ef4a0a8">
            <name>Stack&lt;Namespace*>&amp;</name>
            <content>
                <baseType ref="type.445522d3-ec4a-4dda-9b4b-205687e8a1bf"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0d6f4c59-0998-4829-a8b6-7bed503d71e4">
            <name>Stack&lt;Namespace*>*</name>
            <content>
                <baseType ref="type.445522d3-ec4a-4dda-9b4b-205687e8a1bf"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.952314bc-bcfc-40a6-8385-36f2913d2e53" specialization="true">
            <name>Stack&lt;UniquePtr&lt;System.Text.Parsing.Context>></name>
            <content>
                <primaryType ref="class_Stack_T_44313E678C6CD0E8DB3743953B65AA105D55A963"/>
                <argumentType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
            </content>
        </type>
        <type derived="true" id="type.13403ada-7f6f-49f7-a3a4-7e539f203a35">
            <name>Stack&lt;UniquePtr&lt;System.Text.Parsing.Context>>&amp;</name>
            <content>
                <baseType ref="type.952314bc-bcfc-40a6-8385-36f2913d2e53"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cb9ae834-33ab-45ea-93c4-e3728271d626">
            <name>Stack&lt;UniquePtr&lt;System.Text.Parsing.Context>>&amp;&amp;</name>
            <content>
                <baseType ref="type.952314bc-bcfc-40a6-8385-36f2913d2e53"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.84e7021e-8716-4af2-aec8-fdb00011f93d">
            <name>Stack&lt;UniquePtr&lt;System.Text.Parsing.Context>>*</name>
            <content>
                <baseType ref="type.952314bc-bcfc-40a6-8385-36f2913d2e53"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.551bfaf0-5d8e-4838-b7e2-c779406b266f" specialization="true">
            <name>Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>></name>
            <content>
                <primaryType ref="class_Stack_T_44313E678C6CD0E8DB3743953B65AA105D55A963"/>
                <argumentType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
            </content>
        </type>
        <type derived="true" id="type.a62b6b04-7562-4e17-a04f-7891b15d1f39">
            <name>Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp;</name>
            <content>
                <baseType ref="type.551bfaf0-5d8e-4838-b7e2-c779406b266f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f268b32d-e28d-43a5-a194-7181e8c6d364">
            <name>Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>*</name>
            <content>
                <baseType ref="type.551bfaf0-5d8e-4838-b7e2-c779406b266f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4630077f-101f-4475-88b3-404392f6a706">
            <name>Statement&amp;&amp;</name>
            <content>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a8c80290-7651-46c4-949c-138280ee0833">
            <name>StaticInitCriticalSection&amp;&amp;</name>
            <content>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8443c3b4-e010-4ca9-a4e1-35af9eaf958a">
            <name>StreamWriter&amp;</name>
            <content>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.85ebcac6-844b-43c9-894b-e3f4bb81c756">
            <name>StreamWriter*</name>
            <content>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e2b22611-f2ac-495f-8f24-53e63081ed29">
            <name>StreamWriter*&amp;</name>
            <content>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.74d7f147-f146-492b-9e79-f0ca2cd1e59d">
            <name>StreamWriter**</name>
            <content>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC" specialization="true">
            <name>String&lt;CharT></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="419405e7-9331-4574-971a-7ba37ca8bfcf"/>
            </content>
        </type>
        <type derived="true" id="type.5e26edf7-2c25-41e6-8070-a4997c36c1fc">
            <name>String&lt;CharT>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a08e7b96-65b1-4902-bc7e-40a22e01d134" specialization="true">
            <name>String&lt;char></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
            </content>
        </type>
        <type id="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc" specialization="true">
            <name>String&lt;uchar></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
            </content>
        </type>
        <type derived="true" id="type.83915a56-dc2f-4773-8a98-6f9537ba1712">
            <name>String&lt;uchar>&amp;</name>
            <content>
                <baseType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.828bdeb7-f02d-4b39-99e9-63cf85590097">
            <name>String&lt;uchar>*</name>
            <content>
                <baseType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.482940d6-de59-4778-bfd4-5276ca53e897">
            <name>String&lt;uchar>*&amp;</name>
            <content>
                <baseType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a30fccf7-4606-4425-855a-28fe6629d87f">
            <name>String&lt;uchar>**</name>
            <content>
                <baseType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_StringParser_765B96F3702C707FA03EC3AFF074BEF47356D039">
            <name>StringParser</name>
        </type>
        <type derived="true" id="type.062ff8ea-998d-4abb-a176-1dab21d4102d">
            <name>StringParser&amp;</name>
            <content>
                <baseType ref="class_StringParser_765B96F3702C707FA03EC3AFF074BEF47356D039"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b7fca521-8a3f-4588-93a8-a8fef3f133d6">
            <name>StringParser&amp;&amp;</name>
            <content>
                <baseType ref="class_StringParser_765B96F3702C707FA03EC3AFF074BEF47356D039"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.84676986-0531-4a3b-b1cf-0880600fbbd0">
            <name>StringParser*</name>
            <content>
                <baseType ref="class_StringParser_765B96F3702C707FA03EC3AFF074BEF47356D039"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SurrogateParser_621E59A0FC3C49F9DADBE6C4C595442238B39AE7">
            <name>SurrogateParser</name>
        </type>
        <type derived="true" id="type.10a7210a-ea0d-4a2f-adbe-b75fd4c85cdc">
            <name>SurrogateParser&amp;</name>
            <content>
                <baseType ref="class_SurrogateParser_621E59A0FC3C49F9DADBE6C4C595442238B39AE7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7ada9f89-bee0-480a-81fc-2064751524c3">
            <name>SurrogateParser*</name>
            <content>
                <baseType ref="class_SurrogateParser_621E59A0FC3C49F9DADBE6C4C595442238B39AE7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ac0b5ec5-0cd8-4d7f-b503-78bfb100bf75">
            <name>SwitchStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_SymbolParser_A5146C5ECEFE464AAA32ED863013DC2B99B7E00B">
            <name>SymbolParser</name>
        </type>
        <type derived="true" id="type.cb36975c-f764-4123-a095-082b3894fbf1">
            <name>SymbolParser&amp;</name>
            <content>
                <baseType ref="class_SymbolParser_A5146C5ECEFE464AAA32ED863013DC2B99B7E00B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d5a549a9-4d55-4d4d-b66a-fc63761c83db">
            <name>SymbolParser*</name>
            <content>
                <baseType ref="class_SymbolParser_A5146C5ECEFE464AAA32ED863013DC2B99B7E00B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4188252f-4022-42fe-aabc-7ad7761220e4">
            <name>T&amp;</name>
            <content>
                <baseType ref="219bd7eb-9c4b-4a97-828c-efb15376e977"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2f55b8b3-c7d7-49e8-8ca8-cc664be9ad2b">
            <name>T&amp;</name>
            <content>
                <baseType ref="85bf9672-2627-413a-bf4e-bddb675ec273"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.99c05fde-1a2a-45cf-b164-f7a3f10fc724">
            <name>T&amp;</name>
            <content>
                <baseType ref="33a91f8e-263f-49e1-bc10-3c2a8a5e5399"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d90b4bc6-30f5-449c-a2e9-bcad31eb3408">
            <name>T&amp;</name>
            <content>
                <baseType ref="3d0b5491-afcc-48ba-8dfb-77332056c1b4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4cbd2c5b-6e2e-42fa-8efb-66e05a2cf907">
            <name>T&amp;</name>
            <content>
                <baseType ref="f5df275e-3607-4d99-9cb3-b5290804a9e0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7861dbf2-f23b-40e7-b087-a574aa7c7a4f">
            <name>T&amp;</name>
            <content>
                <baseType ref="f846f81e-739b-49fb-9adb-24545c766872"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.14e107bc-f918-439e-8877-ad691f549b28">
            <name>T&amp;</name>
            <content>
                <baseType ref="14936fad-cf2b-477c-aa67-34fc3a7882a9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ed997be9-eb20-4218-a7c4-b0e5d973355c">
            <name>T&amp;</name>
            <content>
                <baseType ref="3ac734e9-a10d-496b-bd23-4853e956769f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6aa10ff4-0046-45de-88bd-dc27be85568d">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="998b6c44-792d-4efd-ac23-12cdabf7a36f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.287e8985-418b-4c41-b5e6-27ae28bb64bd">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="7146fe99-6b99-4c2c-b35d-5df901fb77d8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eca87273-713d-48e3-948d-c986045b5023">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="2a8e7cbe-9052-461b-856f-2ba369484160"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d9d2a743-e122-43b4-bd69-15d13405f5fd">
            <name>TemplateId&amp;&amp;</name>
            <content>
                <baseType ref="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e10b0168-4606-474d-a731-848cbaef718b">
            <name>ThrowStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_TitleLetterParser_CB5E9F95B1BFAA4498E885363D18ADB1DF1AF544">
            <name>TitleLetterParser</name>
        </type>
        <type derived="true" id="type.c036e588-9a19-49db-97bf-58d403ed3475">
            <name>TitleLetterParser&amp;</name>
            <content>
                <baseType ref="class_TitleLetterParser_CB5E9F95B1BFAA4498E885363D18ADB1DF1AF544"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.476197ea-3cc9-4e64-9adc-a4446d74e758">
            <name>TitleLetterParser*</name>
            <content>
                <baseType ref="class_TitleLetterParser_CB5E9F95B1BFAA4498E885363D18ADB1DF1AF544"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72">
            <name>TokenParser</name>
        </type>
        <type derived="true" id="type.d8f66ae7-9473-46d3-968c-1d9a019986a3">
            <name>TokenParser&amp;</name>
            <content>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1a25e810-61e3-49b3-bfdf-587e95f62a4c">
            <name>TokenParser&amp;&amp;</name>
            <content>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3442dea0-16b2-4bcc-9f84-641c55a40127">
            <name>TokenParser*</name>
            <content>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.99ea2cdd-9259-4f31-acda-549ec02d7156">
            <name>TryStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8062316a-85d5-4286-ba7c-ec71f5598987">
            <name>Type&amp;&amp;</name>
            <content>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f5cf7247-45c5-468f-b13a-cdf366430caf">
            <name>TypeName&amp;&amp;</name>
            <content>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.1bc3b80b-abd1-4b45-ae3e-90f23a8fa41f" specialization="true">
            <name>UnaryFun&lt;Grammar*, Grammar*></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
            </content>
        </type>
        <type derived="true" id="type.f41636f0-a984-4f9e-b074-09897233f932">
            <name>UnaryFun&lt;Grammar*, Grammar*>&amp;</name>
            <content>
                <baseType ref="type.1bc3b80b-abd1-4b45-ae3e-90f23a8fa41f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d0ac6a75-a1d3-4e87-aad5-63960491a3e8">
            <name>UnaryFun&lt;Grammar*, Grammar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1bc3b80b-abd1-4b45-ae3e-90f23a8fa41f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1153a474-2cae-46f7-9fce-8273ef73bc9a">
            <name>UnaryFun&lt;Grammar*, Grammar*>*</name>
            <content>
                <baseType ref="type.1bc3b80b-abd1-4b45-ae3e-90f23a8fa41f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.eefbc8ae-aa13-452b-bf85-57158b0a9be4" specialization="true">
            <name>UnaryFun&lt;Grammar*, ulong></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.2448671f-e480-4a64-a267-051ad0bcd650"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
            </content>
        </type>
        <type derived="true" id="type.1a7f2c55-bb17-422a-a039-4dc131364b2b">
            <name>UnaryFun&lt;Grammar*, ulong>&amp;</name>
            <content>
                <baseType ref="type.eefbc8ae-aa13-452b-bf85-57158b0a9be4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f7c1059a-7cc7-4e99-a70a-990b13e6ebbe">
            <name>UnaryFun&lt;Grammar*, ulong>&amp;&amp;</name>
            <content>
                <baseType ref="type.eefbc8ae-aa13-452b-bf85-57158b0a9be4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a153912d-d320-4375-a993-63e170375558">
            <name>UnaryFun&lt;Grammar*, ulong>*</name>
            <content>
                <baseType ref="type.eefbc8ae-aa13-452b-bf85-57158b0a9be4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.5d7a3af5-a110-404f-a25b-7a772dc7cf94" specialization="true">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Grammar*>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.09c7cac9-c23b-4e5e-b4e7-8262d8ada172">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Grammar*>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.5d7a3af5-a110-404f-a25b-7a772dc7cf94"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1c524801-6cc5-4510-9206-e42de2090bc3">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Grammar*>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.5d7a3af5-a110-404f-a25b-7a772dc7cf94"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f0230aaa-b62d-4b7e-b2fd-0f0edf4080f1">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Grammar*>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.5d7a3af5-a110-404f-a25b-7a772dc7cf94"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.cb217c4b-44c8-4e93-acf4-977b61921b2a" specialization="true">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Namespace*>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.04b739cd-74f0-4eed-a5f2-15d139b41b6b">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Namespace*>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.cb217c4b-44c8-4e93-acf4-977b61921b2a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.80d8debc-1bf9-4fc6-823a-fd8f0a59e65c">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Namespace*>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.cb217c4b-44c8-4e93-acf4-977b61921b2a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.69ff4508-6b5e-410c-8e8e-71b7f58181bd">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Namespace*>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.cb217c4b-44c8-4e93-acf4-977b61921b2a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.34844b46-2b9e-48ed-bad5-cee1867d260a" specialization="true">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.9c33c499-1130-4688-abcc-70838ccd4f95">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.34844b46-2b9e-48ed-bad5-cee1867d260a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9edbfaf5-17d4-402f-8cb4-9d2bde54ef6e">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.34844b46-2b9e-48ed-bad5-cee1867d260a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.229dd175-08ee-4b19-93a2-c9d9426d16c4">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.34844b46-2b9e-48ed-bad5-cee1867d260a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9a19e389-b16e-4778-9c88-5189ca66cc27" specialization="true">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.77cdc3f5-fd14-4bc2-a228-e217e7de6792">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.9a19e389-b16e-4778-9c88-5189ca66cc27"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7cdfef0f-37fd-45aa-b20f-221c2942ea77">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9a19e389-b16e-4778-9c88-5189ca66cc27"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5e263023-ede4-4dd2-a132-fc3c979fe704">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.9a19e389-b16e-4778-9c88-5189ca66cc27"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.cfea79a6-1615-4ece-81e7-f4d061a75bcb" specialization="true">
            <name>UnaryFun&lt;String&lt;uchar>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.c9b995f0-35cb-4d58-b836-5b86a9b7ae07">
            <name>UnaryFun&lt;String&lt;uchar>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.cfea79a6-1615-4ece-81e7-f4d061a75bcb"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.81f3f0a6-75c9-4f79-afb0-be8b484f7921">
            <name>UnaryFun&lt;String&lt;uchar>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.cfea79a6-1615-4ece-81e7-f4d061a75bcb"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.03fe89c0-c8e5-46e5-86c5-1622f5745b3c">
            <name>UnaryFun&lt;String&lt;uchar>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.cfea79a6-1615-4ece-81e7-f4d061a75bcb"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.1b42c9c2-c64f-4169-9b09-088b6c7685ea" specialization="true">
            <name>UnaryFun&lt;String&lt;uchar>, ulong></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
            </content>
        </type>
        <type derived="true" id="type.efea5375-f18f-463f-88a7-286cb0ceaa4d">
            <name>UnaryFun&lt;String&lt;uchar>, ulong>&amp;</name>
            <content>
                <baseType ref="type.1b42c9c2-c64f-4169-9b09-088b6c7685ea"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.952b09f6-0187-4286-8a20-c32fbf46d0ce">
            <name>UnaryFun&lt;String&lt;uchar>, ulong>&amp;&amp;</name>
            <content>
                <baseType ref="type.1b42c9c2-c64f-4169-9b09-088b6c7685ea"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a75bf28a-5e50-4c92-9298-9fd022ecad70">
            <name>UnaryFun&lt;String&lt;uchar>, ulong>*</name>
            <content>
                <baseType ref="type.1b42c9c2-c64f-4169-9b09-088b6c7685ea"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.62aad483-db3d-49fa-b8fd-bf4854c93f93">
            <name>UnaryMinus&amp;&amp;</name>
            <content>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A">
            <name>UnaryParser</name>
        </type>
        <type derived="true" id="type.11c41095-e11f-42de-a5a2-5d5777c2858e">
            <name>UnaryParser&amp;</name>
            <content>
                <baseType ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4de80b9a-7825-465b-87e5-d5b57296a745">
            <name>UnaryParser*</name>
            <content>
                <baseType ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5e9b0a22-b84e-4b90-bc14-b8b253b93228">
            <name>UnaryPlus&amp;&amp;</name>
            <content>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_UnassignedParser_B837C0573CAFFB26E8BFF6AD38B8AED47DB1F3B5">
            <name>UnassignedParser</name>
        </type>
        <type derived="true" id="type.d02ae84a-5aaf-4c98-9f52-a71d7034a802">
            <name>UnassignedParser&amp;</name>
            <content>
                <baseType ref="class_UnassignedParser_B837C0573CAFFB26E8BFF6AD38B8AED47DB1F3B5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.51f3bc39-37ec-4f35-8f25-422adf73bbe1">
            <name>UnassignedParser*</name>
            <content>
                <baseType ref="class_UnassignedParser_B837C0573CAFFB26E8BFF6AD38B8AED47DB1F3B5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.52838d60-3622-4492-af3b-6d4f66388877" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.56598ce8-a75d-43c7-9ce9-b564faceeb85"/>
            </content>
        </type>
        <type derived="true" id="type.0d1c081b-78ca-41bf-b1d0-72a5029db003">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.52838d60-3622-4492-af3b-6d4f66388877"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.2aa57d36-d197-444c-98f5-005104e5c982" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
            </content>
        </type>
        <type derived="true" id="type.294d7331-b314-4040-a6cd-1daf056450c0">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>>&amp;&amp;</name>
            <content>
                <baseType ref="type.2aa57d36-d197-444c-98f5-005104e5c982"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.37061d6a-0154-48fa-b507-c4255a79edc6" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_ValueType_38B50DA62919A6E728F70DA36817024C5A9A8855"/>
            </content>
        </type>
        <type derived="true" id="type.f254f919-191b-4ccc-aab3-a6bb9ad53dad">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>>&amp;&amp;</name>
            <content>
                <baseType ref="type.37061d6a-0154-48fa-b507-c4255a79edc6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.3c3b64a3-3992-4871-a936-3851277c16c7" specialization="true">
            <name>UniquePtr&lt;System.Exception></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
            </content>
        </type>
        <type derived="true" id="type.996f3451-6403-46c6-bb45-6e0763cf55d5">
            <name>UniquePtr&lt;System.Exception>&amp;&amp;</name>
            <content>
                <baseType ref="type.3c3b64a3-3992-4871-a936-3851277c16c7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
            </content>
        </type>
        <type id="type.e345a470-1aba-49d4-b63b-2af528cb08f0" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.Context></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Context_040573959767ECDC8F1941BD825CEA007DDD9496"/>
            </content>
        </type>
        <type derived="true" id="type.9df091aa-c5d4-4acb-9b1c-e76e55aee38c">
            <name>UniquePtr&lt;System.Text.Parsing.Context>&amp;</name>
            <content>
                <baseType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f5def23f-fbe8-4671-b7de-a16e2b5a8c0c">
            <name>UniquePtr&lt;System.Text.Parsing.Context>&amp;&amp;</name>
            <content>
                <baseType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.661dc334-3f32-46e9-81ab-324042bd2692">
            <name>UniquePtr&lt;System.Text.Parsing.Context>*</name>
            <content>
                <baseType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7a68ea5a-6754-4175-85fe-707fc6e8ac92">
            <name>UniquePtr&lt;System.Text.Parsing.Context>*&amp;</name>
            <content>
                <baseType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.14b17aa4-043d-4eb3-a35e-07b165556074">
            <name>UniquePtr&lt;System.Text.Parsing.Context>*&amp;&amp;</name>
            <content>
                <baseType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.44ff8c1a-25d6-4964-a64c-0ebff9f2304d">
            <name>UniquePtr&lt;System.Text.Parsing.Context>**</name>
            <content>
                <baseType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.b46be500-0fec-47b5-933d-bc8f619226b1" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ExpectationFailure></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
            </content>
        </type>
        <type derived="true" id="type.9dd2c4b7-0073-492f-8b19-2750f6f81583">
            <name>UniquePtr&lt;System.Text.Parsing.ExpectationFailure>&amp;</name>
            <content>
                <baseType ref="type.b46be500-0fec-47b5-933d-bc8f619226b1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.60d71f2d-e1be-49fa-9ed2-a65fcdee6b6f">
            <name>UniquePtr&lt;System.Text.Parsing.ExpectationFailure>&amp;&amp;</name>
            <content>
                <baseType ref="type.b46be500-0fec-47b5-933d-bc8f619226b1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7ba53ad5-e914-4fb8-bc08-af8080f8f8ce">
            <name>UniquePtr&lt;System.Text.Parsing.ExpectationFailure>*</name>
            <content>
                <baseType ref="type.b46be500-0fec-47b5-933d-bc8f619226b1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.2c0909eb-a727-407c-aa4c-da060e1f4072" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.FileInfo></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_FileInfo_482D1595D6ADD6B76DCA9EE9DD41AFCD55B8A5BA"/>
            </content>
        </type>
        <type derived="true" id="type.e14c1c3d-2ae8-474e-a393-c5b3d38358b2">
            <name>UniquePtr&lt;System.Text.Parsing.FileInfo>&amp;</name>
            <content>
                <baseType ref="type.2c0909eb-a727-407c-aa4c-da060e1f4072"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.49371647-e6eb-4dbb-b2f5-b4dd29027101">
            <name>UniquePtr&lt;System.Text.Parsing.FileInfo>&amp;&amp;</name>
            <content>
                <baseType ref="type.2c0909eb-a727-407c-aa4c-da060e1f4072"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e3e95dfe-68e6-4fc3-b17e-8db53813881f">
            <name>UniquePtr&lt;System.Text.Parsing.FileInfo>*</name>
            <content>
                <baseType ref="type.2c0909eb-a727-407c-aa4c-da060e1f4072"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.6562d475-3062-49d7-9864-f1e21b4bae20" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.IdentifierCharsRule></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_IdentifierCharsRule_F8759732990B698642B4479584B5D4D6D9C390CB"/>
            </content>
        </type>
        <type derived="true" id="type.07b4ebb7-4578-4d08-8f86-5c23c25e6ab2">
            <name>UniquePtr&lt;System.Text.Parsing.IdentifierCharsRule>&amp;</name>
            <content>
                <baseType ref="type.6562d475-3062-49d7-9864-f1e21b4bae20"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90b163ed-6158-496b-85cd-9cda2db70f82">
            <name>UniquePtr&lt;System.Text.Parsing.IdentifierCharsRule>&amp;&amp;</name>
            <content>
                <baseType ref="type.6562d475-3062-49d7-9864-f1e21b4bae20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2dc8cfb1-93c1-4677-81f1-d8138390311c">
            <name>UniquePtr&lt;System.Text.Parsing.IdentifierCharsRule>*</name>
            <content>
                <baseType ref="type.6562d475-3062-49d7-9864-f1e21b4bae20"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.Object></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66"/>
            </content>
        </type>
        <type derived="true" id="type.d614e173-2253-43c7-9b28-86a6b2c2242c">
            <name>UniquePtr&lt;System.Text.Parsing.Object>&amp;</name>
            <content>
                <baseType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3f91e24a-3e90-4360-a2fc-22b578d21d0e">
            <name>UniquePtr&lt;System.Text.Parsing.Object>&amp;&amp;</name>
            <content>
                <baseType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fcf69734-4054-4b1c-a454-9864ef4159cb">
            <name>UniquePtr&lt;System.Text.Parsing.Object>*</name>
            <content>
                <baseType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5b3b45cb-8e9d-40ab-a15f-4bfb5ff2eb82">
            <name>UniquePtr&lt;System.Text.Parsing.Object>*&amp;</name>
            <content>
                <baseType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b64a510d-741a-494b-b236-2e5a5b7cc6a0">
            <name>UniquePtr&lt;System.Text.Parsing.Object>*&amp;&amp;</name>
            <content>
                <baseType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.65b5efcb-b585-4632-9645-602c515f9943">
            <name>UniquePtr&lt;System.Text.Parsing.Object>**</name>
            <content>
                <baseType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.caf583ad-0880-4d19-b77d-ce2a26a84458" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingData></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
            </content>
        </type>
        <type derived="true" id="type.11b80476-d545-4e38-9711-5b0446640021">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingData>&amp;</name>
            <content>
                <baseType ref="type.caf583ad-0880-4d19-b77d-ce2a26a84458"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.428f23ad-182e-4d5d-96ef-38dd1ddb83da">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingData>&amp;&amp;</name>
            <content>
                <baseType ref="type.caf583ad-0880-4d19-b77d-ce2a26a84458"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.854b1e4e-7912-4ea8-928d-e4a5260b0759">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingData>*</name>
            <content>
                <baseType ref="type.caf583ad-0880-4d19-b77d-ce2a26a84458"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.177adb0e-5ef7-47b8-9833-8aee994db4f8" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingDomain></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
            </content>
        </type>
        <type derived="true" id="type.b1e807b2-ed14-4992-95c5-427629b08b3e">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;</name>
            <content>
                <baseType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f87acbac-421c-4c53-b38e-9e25ef6cffdf">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;&amp;</name>
            <content>
                <baseType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e2d67a83-967f-4233-ac84-5694d4b4a0a5">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingDomain>*</name>
            <content>
                <baseType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90feb9e6-aeff-43a5-9ff6-b41b40345107">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingDomain>*&amp;</name>
            <content>
                <baseType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9f40a860-715e-4dd0-b8d3-bf2f0af0aac8">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingDomain>**</name>
            <content>
                <baseType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.5a1ce91a-2a90-49eb-9a7d-a4d5871d5da3" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingDomainRepository></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingDomainRepository_6B37F4A004B12A4113D51526D06BF8A1881556E4"/>
            </content>
        </type>
        <type derived="true" id="type.2732252e-b12b-4b5d-a532-60543a4f630e">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingDomainRepository>&amp;</name>
            <content>
                <baseType ref="type.5a1ce91a-2a90-49eb-9a7d-a4d5871d5da3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e09a1db5-2e22-45c0-b420-30ba75382fba">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingDomainRepository>&amp;&amp;</name>
            <content>
                <baseType ref="type.5a1ce91a-2a90-49eb-9a7d-a4d5871d5da3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.336fa862-1829-40be-81ca-87bd2916f41e">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingDomainRepository>*</name>
            <content>
                <baseType ref="type.5a1ce91a-2a90-49eb-9a7d-a4d5871d5da3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.126b6928-6237-4b37-b09f-2a692bdbea1b" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingException></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
            </content>
        </type>
        <type derived="true" id="type.87cd72c9-b8b9-4482-a33c-3f06b1d21aeb">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingException>&amp;</name>
            <content>
                <baseType ref="type.126b6928-6237-4b37-b09f-2a692bdbea1b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d95fd1a8-f222-4832-ac62-31b112634b3f">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingException>&amp;&amp;</name>
            <content>
                <baseType ref="type.126b6928-6237-4b37-b09f-2a692bdbea1b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.de984c42-80b6-4ccf-bf11-65d9c1039dd4">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingException>*</name>
            <content>
                <baseType ref="type.126b6928-6237-4b37-b09f-2a692bdbea1b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingObject></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
            </content>
        </type>
        <type derived="true" id="type.526780c4-1b1f-4e29-bdcc-c4f903594d9e">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;</name>
            <content>
                <baseType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.be7b8049-b480-4259-b1fe-ad073b0313cd">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;&amp;</name>
            <content>
                <baseType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0e313b38-61e9-462c-add7-7f5c7687cb83">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingObject>*</name>
            <content>
                <baseType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c7369c91-d26b-4b34-9726-4c0515150132">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingObject>*&amp;</name>
            <content>
                <baseType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3d24da86-fad5-46e5-84cd-5b2b6f20e28d">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingObject>**</name>
            <content>
                <baseType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.af2142f8-423d-4e02-b488-020bf1122bf0" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.RuleParser></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
            </content>
        </type>
        <type derived="true" id="type.a0d01ce5-aa4a-4ad7-b6b9-af29e84ee118">
            <name>UniquePtr&lt;System.Text.Parsing.RuleParser>&amp;</name>
            <content>
                <baseType ref="type.af2142f8-423d-4e02-b488-020bf1122bf0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a1febd47-328a-4c14-8126-50a973753e23">
            <name>UniquePtr&lt;System.Text.Parsing.RuleParser>&amp;&amp;</name>
            <content>
                <baseType ref="type.af2142f8-423d-4e02-b488-020bf1122bf0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dc96fb11-714b-4538-9430-c97dc6e095ce">
            <name>UniquePtr&lt;System.Text.Parsing.RuleParser>*</name>
            <content>
                <baseType ref="type.af2142f8-423d-4e02-b488-020bf1122bf0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.0f7ab969-a194-4c7f-b1c3-a15281caa38a" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.XmlLog></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
            </content>
        </type>
        <type derived="true" id="type.c3a994fb-1725-41bf-818c-43e7798d79a9">
            <name>UniquePtr&lt;System.Text.Parsing.XmlLog>&amp;</name>
            <content>
                <baseType ref="type.0f7ab969-a194-4c7f-b1c3-a15281caa38a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b265c274-5286-4d3a-aba2-c3c7dc8abe14">
            <name>UniquePtr&lt;System.Text.Parsing.XmlLog>&amp;&amp;</name>
            <content>
                <baseType ref="type.0f7ab969-a194-4c7f-b1c3-a15281caa38a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.35648c6b-843a-4a6a-9e7d-9f6545944c7b">
            <name>UniquePtr&lt;System.Text.Parsing.XmlLog>*</name>
            <content>
                <baseType ref="type.0f7ab969-a194-4c7f-b1c3-a15281caa38a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009" specialization="true">
            <name>UniquePtr&lt;T></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="a0bd4920-fe93-44aa-b77e-5f02c8b16396"/>
            </content>
        </type>
        <type derived="true" id="type.c6e329d7-8fe9-4938-bf08-07a90dcb4b20">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_UpperLetterParser_60FA6653414FF82D2E34FEADF0F18A7C3A0A601F">
            <name>UpperLetterParser</name>
        </type>
        <type derived="true" id="type.1c3d7a6b-acd4-47e1-9740-c2feae6ecd53">
            <name>UpperLetterParser&amp;</name>
            <content>
                <baseType ref="class_UpperLetterParser_60FA6653414FF82D2E34FEADF0F18A7C3A0A601F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4d7e192f-764c-40e3-9f1d-d0cbcbb7f1dc">
            <name>UpperLetterParser*</name>
            <content>
                <baseType ref="class_UpperLetterParser_60FA6653414FF82D2E34FEADF0F18A7C3A0A601F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d6352515-d1f9-4d1f-9922-876e2b241a02">
            <name>Value&amp;</name>
            <content>
                <baseType ref="27218102-4ab7-4928-9de3-3ac0d65373fa"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="type.006a69e2-dce2-428e-a471-42e89059e55f" specialization="true">
            <name>ValueObject&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
            </content>
        </type>
        <type derived="true" id="type.3d873abc-e97a-4a96-b2b4-e37f0d1560d0">
            <name>ValueObject&lt;String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.006a69e2-dce2-428e-a471-42e89059e55f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.956965bd-cb08-45b0-acdb-91c38905deb1">
            <name>ValueObject&lt;String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.006a69e2-dce2-428e-a471-42e89059e55f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.14aa4a89-cc63-42ae-a5ed-542abc5878f5">
            <name>ValueObject&lt;String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.006a69e2-dce2-428e-a471-42e89059e55f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ValueObject_A5EEA6838E1F3D4B94FAD971065C565CE7605DFE">
            <name>ValueObject&lt;ValueType></name>
        </type>
        <type id="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79" specialization="true">
            <name>ValueObject&lt;ValueType></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="4237d6ae-8537-4ec7-bef5-89061bffb107"/>
            </content>
        </type>
        <type derived="true" id="type.cb8c18d5-9837-47c6-895d-593b544d8e3a">
            <name>ValueObject&lt;ValueType>&amp;</name>
            <content>
                <baseType ref="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.59f05e32-4bb8-4777-ad32-dbc9d4640373">
            <name>ValueObject&lt;ValueType>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ec80e0aa-ea1b-4ce0-855f-05c7849594d3">
            <name>ValueObject&lt;ValueType>*</name>
            <content>
                <baseType ref="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.96c56a0a-437b-4bec-8b65-31192186bdc0" specialization="true">
            <name>ValueObject&lt;bool></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
            </content>
        </type>
        <type derived="true" id="type.3701558a-cc67-4586-9b88-a1a280220ae5">
            <name>ValueObject&lt;bool>&amp;</name>
            <content>
                <baseType ref="type.96c56a0a-437b-4bec-8b65-31192186bdc0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee89129f-fdab-44dd-856c-488175242de1">
            <name>ValueObject&lt;bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.96c56a0a-437b-4bec-8b65-31192186bdc0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a2f4848e-df72-4c44-b09e-0307e1835ffd">
            <name>ValueObject&lt;bool>*</name>
            <content>
                <baseType ref="type.96c56a0a-437b-4bec-8b65-31192186bdc0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.14d01616-e9cb-4df5-a4d8-8ef9e92f668b" specialization="true">
            <name>ValueObject&lt;byte></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
            </content>
        </type>
        <type derived="true" id="type.f2e66c6d-5264-43e2-84a1-09b1350830ef">
            <name>ValueObject&lt;byte>&amp;</name>
            <content>
                <baseType ref="type.14d01616-e9cb-4df5-a4d8-8ef9e92f668b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9b0c9b0a-1d92-4811-a512-d4fb972828bc">
            <name>ValueObject&lt;byte>&amp;&amp;</name>
            <content>
                <baseType ref="type.14d01616-e9cb-4df5-a4d8-8ef9e92f668b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.014fcc39-2280-4620-95b4-2f33c3937635">
            <name>ValueObject&lt;byte>*</name>
            <content>
                <baseType ref="type.14d01616-e9cb-4df5-a4d8-8ef9e92f668b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.bd9edb05-deba-4447-b1f5-448920ef2657" specialization="true">
            <name>ValueObject&lt;double></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.7886ec51-1386-407e-899e-3f71f912ecf5"/>
            </content>
        </type>
        <type derived="true" id="type.b7f6d912-8463-445b-b52f-20aca56e8099">
            <name>ValueObject&lt;double>&amp;</name>
            <content>
                <baseType ref="type.bd9edb05-deba-4447-b1f5-448920ef2657"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.09492367-fd1f-4f78-913f-8dd1e82f26e8">
            <name>ValueObject&lt;double>&amp;&amp;</name>
            <content>
                <baseType ref="type.bd9edb05-deba-4447-b1f5-448920ef2657"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7ca47cbe-e39e-4c7c-8738-1822a7dd3f92">
            <name>ValueObject&lt;double>*</name>
            <content>
                <baseType ref="type.bd9edb05-deba-4447-b1f5-448920ef2657"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4c6631b1-34d5-4d07-8f9c-17ab3bd1c9e5" specialization="true">
            <name>ValueObject&lt;float></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.d90ae6b3-0332-4abc-819a-54336158f9af"/>
            </content>
        </type>
        <type derived="true" id="type.44a4e7a0-32d4-4447-8505-050fd927c6fb">
            <name>ValueObject&lt;float>&amp;</name>
            <content>
                <baseType ref="type.4c6631b1-34d5-4d07-8f9c-17ab3bd1c9e5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a77c1e1c-3eb0-4520-9d51-f7606b33aa3f">
            <name>ValueObject&lt;float>&amp;&amp;</name>
            <content>
                <baseType ref="type.4c6631b1-34d5-4d07-8f9c-17ab3bd1c9e5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4d3a6ac3-108e-4bed-b8c5-06c33e6dba80">
            <name>ValueObject&lt;float>*</name>
            <content>
                <baseType ref="type.4c6631b1-34d5-4d07-8f9c-17ab3bd1c9e5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.06213a61-a058-4ada-b955-11799a87b631" specialization="true">
            <name>ValueObject&lt;int></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
            </content>
        </type>
        <type derived="true" id="type.cf52ddbc-9cb4-448a-9770-6f93238871fd">
            <name>ValueObject&lt;int>&amp;</name>
            <content>
                <baseType ref="type.06213a61-a058-4ada-b955-11799a87b631"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3c2a24a0-3e30-4454-bdbf-07d84e16277f">
            <name>ValueObject&lt;int>&amp;&amp;</name>
            <content>
                <baseType ref="type.06213a61-a058-4ada-b955-11799a87b631"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a64f3cfa-15e3-4106-ab9f-38b041b432b2">
            <name>ValueObject&lt;int>*</name>
            <content>
                <baseType ref="type.06213a61-a058-4ada-b955-11799a87b631"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.d0358143-d19f-4763-90aa-444a4eff2a0d" specialization="true">
            <name>ValueObject&lt;long></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.0afdb17a-6699-4dce-ac86-da6f19be4173"/>
            </content>
        </type>
        <type derived="true" id="type.765b2b77-58cc-401b-aa0f-346c33f71d81">
            <name>ValueObject&lt;long>&amp;</name>
            <content>
                <baseType ref="type.d0358143-d19f-4763-90aa-444a4eff2a0d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.221a6da1-0859-4726-92b6-249960147b0f">
            <name>ValueObject&lt;long>&amp;&amp;</name>
            <content>
                <baseType ref="type.d0358143-d19f-4763-90aa-444a4eff2a0d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.254464c7-5958-4e52-b86c-438e388cf82b">
            <name>ValueObject&lt;long>*</name>
            <content>
                <baseType ref="type.d0358143-d19f-4763-90aa-444a4eff2a0d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.23da6c32-405f-4abe-aadb-70090129f691" specialization="true">
            <name>ValueObject&lt;sbyte></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.e267ae8f-cebc-45b6-bc6f-3aed32286256"/>
            </content>
        </type>
        <type derived="true" id="type.cf4ec549-5607-412e-add1-10f42d7269ae">
            <name>ValueObject&lt;sbyte>&amp;</name>
            <content>
                <baseType ref="type.23da6c32-405f-4abe-aadb-70090129f691"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.efb91483-47cf-40e1-8985-71dba51b2113">
            <name>ValueObject&lt;sbyte>&amp;&amp;</name>
            <content>
                <baseType ref="type.23da6c32-405f-4abe-aadb-70090129f691"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f7ea1fb3-a947-4599-afe3-e20239179952">
            <name>ValueObject&lt;sbyte>*</name>
            <content>
                <baseType ref="type.23da6c32-405f-4abe-aadb-70090129f691"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.b55f7233-4dde-4010-ad10-af674b119d54" specialization="true">
            <name>ValueObject&lt;short></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.95b0abae-6680-4323-ae03-3fb318983e45"/>
            </content>
        </type>
        <type derived="true" id="type.dd2a59df-1634-4a2b-b656-f872646f02bc">
            <name>ValueObject&lt;short>&amp;</name>
            <content>
                <baseType ref="type.b55f7233-4dde-4010-ad10-af674b119d54"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3079a146-60c8-4145-827b-cba084310186">
            <name>ValueObject&lt;short>&amp;&amp;</name>
            <content>
                <baseType ref="type.b55f7233-4dde-4010-ad10-af674b119d54"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.74182876-f3fb-4df9-971a-772616d93cee">
            <name>ValueObject&lt;short>*</name>
            <content>
                <baseType ref="type.b55f7233-4dde-4010-ad10-af674b119d54"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.1b5e8949-f3a2-4f30-af6e-976ce533c9f7" specialization="true">
            <name>ValueObject&lt;uchar></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
            </content>
        </type>
        <type derived="true" id="type.4f1217b0-9c22-4d42-ba53-5b685fb13702">
            <name>ValueObject&lt;uchar>&amp;</name>
            <content>
                <baseType ref="type.1b5e8949-f3a2-4f30-af6e-976ce533c9f7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.add50052-ad25-4b95-b39a-7179f4fa3cee">
            <name>ValueObject&lt;uchar>&amp;&amp;</name>
            <content>
                <baseType ref="type.1b5e8949-f3a2-4f30-af6e-976ce533c9f7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90d5903c-645d-4b51-b2dd-08724974037b">
            <name>ValueObject&lt;uchar>*</name>
            <content>
                <baseType ref="type.1b5e8949-f3a2-4f30-af6e-976ce533c9f7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.28011ec3-b734-497d-8dad-90c5dc94e90d" specialization="true">
            <name>ValueObject&lt;uint></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
            </content>
        </type>
        <type derived="true" id="type.65da39a4-5d17-4eef-b1f6-df696325b5f9">
            <name>ValueObject&lt;uint>&amp;</name>
            <content>
                <baseType ref="type.28011ec3-b734-497d-8dad-90c5dc94e90d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.84603069-0346-4f8f-b3e2-8a0859fe484b">
            <name>ValueObject&lt;uint>&amp;&amp;</name>
            <content>
                <baseType ref="type.28011ec3-b734-497d-8dad-90c5dc94e90d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a1769404-a0b6-4da8-b11d-0a6da2a0c367">
            <name>ValueObject&lt;uint>*</name>
            <content>
                <baseType ref="type.28011ec3-b734-497d-8dad-90c5dc94e90d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.e6cb3bfc-d5ad-4aac-8733-a3bff8d4537e" specialization="true">
            <name>ValueObject&lt;ulong></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
            </content>
        </type>
        <type derived="true" id="type.ffd65546-1213-4eda-9695-88a99a8bbfa7">
            <name>ValueObject&lt;ulong>&amp;</name>
            <content>
                <baseType ref="type.e6cb3bfc-d5ad-4aac-8733-a3bff8d4537e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cd82f0a1-0c7b-494b-a9bc-d2204a52e54e">
            <name>ValueObject&lt;ulong>&amp;&amp;</name>
            <content>
                <baseType ref="type.e6cb3bfc-d5ad-4aac-8733-a3bff8d4537e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e53e0a4d-b886-400c-86b9-7cb40c1bf819">
            <name>ValueObject&lt;ulong>*</name>
            <content>
                <baseType ref="type.e6cb3bfc-d5ad-4aac-8733-a3bff8d4537e"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.25ff3f51-2e3d-4fe5-aeed-fd874bd33fbf" specialization="true">
            <name>ValueObject&lt;ushort></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.dfe86fe5-969a-478e-a93b-dac021297183"/>
            </content>
        </type>
        <type derived="true" id="type.0cf1e161-0ea8-4954-968e-f1b2f77e022a">
            <name>ValueObject&lt;ushort>&amp;</name>
            <content>
                <baseType ref="type.25ff3f51-2e3d-4fe5-aeed-fd874bd33fbf"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b784e2cc-8853-4f84-a407-d6dade8902f1">
            <name>ValueObject&lt;ushort>&amp;&amp;</name>
            <content>
                <baseType ref="type.25ff3f51-2e3d-4fe5-aeed-fd874bd33fbf"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.339ee518-3d63-478c-9761-800efe317e22">
            <name>ValueObject&lt;ushort>*</name>
            <content>
                <baseType ref="type.25ff3f51-2e3d-4fe5-aeed-fd874bd33fbf"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="4237d6ae-8537-4ec7-bef5-89061bffb107">
            <name>ValueType</name>
        </type>
        <type id="class_Visitor_019F0A77C04DF2CCE6FDB74DE512001C068902CF">
            <name>Visitor</name>
        </type>
        <type derived="true" id="type.6252381c-d678-460c-98f8-98f77275190d">
            <name>Visitor&amp;</name>
            <content>
                <baseType ref="class_Visitor_20FFECD046DAE045FE9E47404AA9013F309AFDED"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5cc8b643-a34a-4514-b4b7-0375db007747">
            <name>Visitor&amp;</name>
            <content>
                <baseType ref="class_Visitor_019F0A77C04DF2CCE6FDB74DE512001C068902CF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee30bce0-7095-409e-9740-bc476363b8d1">
            <name>Visitor*</name>
            <content>
                <baseType ref="class_Visitor_019F0A77C04DF2CCE6FDB74DE512001C068902CF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F" specialization="true">
            <name>WeakCount&lt;T></name>
            <content>
                <primaryType ref="class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <argumentType ref="57e7ec3e-3f56-4249-a9b5-85a0d4d4f4ab"/>
            </content>
        </type>
        <type derived="true" id="type.5db414e2-416e-4897-94ad-20ff18123ab4">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.086aee2e-b856-45f0-a9c0-4c7a3549b2b7">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.65421c79-6a1e-4a71-9bad-41fbf8c66766">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.16c058e4-a283-4985-8380-8feb1b883411">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c588a678-7518-47c4-a9f0-0af205cdeee7">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.83d9403c-d96a-4bcb-98ac-d6eb1d3fa170" specialization="true">
            <name>WeakPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.9b17039e-206c-428f-b326-785f751ecfff">
            <name>WeakPtr&lt;System.IO.ByteStream>&amp;&amp;</name>
            <content>
                <baseType ref="type.83d9403c-d96a-4bcb-98ac-d6eb1d3fa170"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC" specialization="true">
            <name>WeakPtr&lt;T></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="aab8b166-6791-47ff-8961-cc4fc41834b0"/>
            </content>
        </type>
        <type derived="true" id="type.20c2c594-1da4-40a1-bac0-02f443089b03">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.154198e9-2579-4331-9780-489b33929559">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.560430e7-12d7-4ba8-90ea-3704eccfc474">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ae08dad8-307f-4040-ad5d-5968cc61f156">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8c46cc29-8113-4318-99f4-e776246619ec">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0a2e59c8-7c63-4fe0-b154-b5db4d89eb6d">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.73b82589-c191-4d38-9045-49a52cafcf6c">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021" specialization="true">
            <name>WeakPtr&lt;U></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="3eadf9e6-31eb-461e-8ce4-27f717a4a51c"/>
            </content>
        </type>
        <type derived="true" id="type.c65e10e5-3a59-489e-b7d8-0ce2ef51c4a9">
            <name>WeakPtr&lt;U>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704">
            <name>XmlLog</name>
        </type>
        <type derived="true" id="type.57484f5b-b038-45df-b76d-59a315a2e210">
            <name>XmlLog&amp;</name>
            <content>
                <baseType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.97b0f822-76bd-4556-aee0-cd38824c9d34">
            <name>XmlLog*</name>
            <content>
                <baseType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6c7660e5-622e-4634-a719-d9df1b3fa012">
            <name>XmlLog*&amp;</name>
            <content>
                <baseType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.84c69cd4-6e98-422b-a01a-d85c3ab508c8">
            <name>XmlLog**</name>
            <content>
                <baseType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.ae1b2da6-78d6-4792-bc0f-242912b31062">
            <name>bool</name>
        </type>
        <type derived="true" id="type.fe36e66f-ce1a-496d-816c-b0bc25e23dfa">
            <name>bool&amp;</name>
            <content>
                <baseType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="class_boolRule_C4BE2B41B8BD229647AD3F037FCA45B9E8E6D3E3">
            <name>boolRule</name>
        </type>
        <type derived="true" id="type.a7aa4ff2-19bd-4d00-9ac3-af3fdc29cd77">
            <name>boolRule&amp;</name>
            <content>
                <baseType ref="class_boolRule_C4BE2B41B8BD229647AD3F037FCA45B9E8E6D3E3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e5513cd7-80a8-4e48-b0b0-35a740cbd568">
            <name>boolRule*</name>
            <content>
                <baseType ref="class_boolRule_C4BE2B41B8BD229647AD3F037FCA45B9E8E6D3E3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e8c16b34-c50f-4d68-8ea7-57bae587e559">
            <name>boolRule*&amp;</name>
            <content>
                <baseType ref="class_boolRule_C4BE2B41B8BD229647AD3F037FCA45B9E8E6D3E3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.43b2b99c-ccda-44fd-b10b-f40a39b8e3e6">
            <name>boolRule**</name>
            <content>
                <baseType ref="class_boolRule_C4BE2B41B8BD229647AD3F037FCA45B9E8E6D3E3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2">
            <name>byte</name>
        </type>
        <type derived="true" id="type.5803a2fa-6873-4257-a17d-cc6c1921ab21">
            <name>byte&amp;</name>
            <content>
                <baseType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c202b93d-64e7-4f08-bc70-18517cd6f28d">
            <name>byte*</name>
            <content>
                <baseType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_byteRule_0E3C42038DE207056BE8D50C02CA675963160E6E">
            <name>byteRule</name>
        </type>
        <type derived="true" id="type.5b4ffaac-1b93-4e81-9b4d-6ecbb2f21b7a">
            <name>byteRule&amp;</name>
            <content>
                <baseType ref="class_byteRule_0E3C42038DE207056BE8D50C02CA675963160E6E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2caf30cb-f114-4a02-a78e-206592978543">
            <name>byteRule*</name>
            <content>
                <baseType ref="class_byteRule_0E3C42038DE207056BE8D50C02CA675963160E6E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9542703b-9360-4191-8bf0-25dd6852f2ac">
            <name>byteRule*&amp;</name>
            <content>
                <baseType ref="class_byteRule_0E3C42038DE207056BE8D50C02CA675963160E6E"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dd3b0f2e-9210-4a20-be0e-09d5d8710a40">
            <name>byteRule**</name>
            <content>
                <baseType ref="class_byteRule_0E3C42038DE207056BE8D50C02CA675963160E6E"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9acef40e-6998-4365-a472-c8627ac58dfc">
            <name>char</name>
        </type>
        <type derived="true" id="type.a5f9b8d6-a29e-4664-a5b2-652899892b0e">
            <name>char&amp;</name>
            <content>
                <baseType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b92d286c-8e44-4266-9c29-61e88a9c83fe">
            <name>char*</name>
            <content>
                <baseType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_charRule_A3C8E3EAD09B1883E6F6BD376178D543F148C1C0">
            <name>charRule</name>
        </type>
        <type derived="true" id="type.9c70ed9d-d3a4-46d5-88e4-6511f91e3d81">
            <name>charRule&amp;</name>
            <content>
                <baseType ref="class_charRule_A3C8E3EAD09B1883E6F6BD376178D543F148C1C0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cf073c1d-821a-4ce4-ac8a-50551f849239">
            <name>charRule*</name>
            <content>
                <baseType ref="class_charRule_A3C8E3EAD09B1883E6F6BD376178D543F148C1C0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.195cfd1d-7229-4796-a073-da381884282e">
            <name>charRule*&amp;</name>
            <content>
                <baseType ref="class_charRule_A3C8E3EAD09B1883E6F6BD376178D543F148C1C0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6b105389-3dd4-4a71-bb96-58cbbbaff48f">
            <name>charRule**</name>
            <content>
                <baseType ref="class_charRule_A3C8E3EAD09B1883E6F6BD376178D543F148C1C0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b51cb1d4-1bbd-4c78-a995-1b79829a2305">
            <name>const ActionParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
            </content>
        </type>
        <type derived="true" id="type.7e5e97bc-1b57-49ee-a0f3-26e50e987825">
            <name>const ActionParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4640fb75-02ea-443b-acfd-bfa57f75498f">
            <name>const ActionParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d638fa61-f6f6-4d79-93c7-cfb6b064fc5a">
            <name>const ActionParser*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ade0af11-223c-44c7-b7c8-14188c1f756e">
            <name>const ActionParser**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ActionParser_385EDA747091FB7696618E1D724163BDC876257A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.740f5331-7610-4456-8bba-3aab04cdbc33">
            <name>const AddressOf</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
            </content>
        </type>
        <type derived="true" id="type.714d8221-5932-4dbc-a5bc-63e1032e8104">
            <name>const AddressOf&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8df4f938-d477-42e4-ad0e-780d4e3ff6d3">
            <name>const AssertStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
            </content>
        </type>
        <type derived="true" id="type.51af2785-adfb-4003-a93b-f113810b3268">
            <name>const AssertStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d3336b62-0e15-414d-9c06-f798f5e62ac5">
            <name>const AttrOrVar</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
            </content>
        </type>
        <type derived="true" id="type.ce9091e2-9fc0-40c7-8aa9-a25a6c92dfbb">
            <name>const AttrOrVar&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.225a24b7-6207-44e4-b5c2-2fc0fcfc0171">
            <name>const AttrOrVar*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f6da39a6-bacb-4160-91d4-5f6750eaaa5c">
            <name>const BackInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
            </content>
        </type>
        <type derived="true" id="type.4bb31567-d8e3-4b42-87d5-be42e6bd68d9">
            <name>const BackInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
            </content>
        </type>
        <type derived="true" id="type.30a670c1-e243-4fd1-aadb-9bfdaacc58bf">
            <name>const BackInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9babe61b-f375-4fb8-9f3b-371cf41e5aea">
            <name>const BackInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a774b1d2-0ee8-44ea-a62a-12939fdd007e">
            <name>const BackInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
            </content>
        </type>
        <type derived="true" id="type.4191f745-7a69-4017-9eea-b4e0b540e0fe">
            <name>const BackInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
            </content>
        </type>
        <type derived="true" id="type.093ec029-bf4d-4397-89fe-ae221223ff20">
            <name>const BackInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
            </content>
        </type>
        <type derived="true" id="type.96146239-6905-4b1b-8bb6-7b8cd181c659">
            <name>const BackInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bdbb23e5-10f9-4b05-8f65-7d941cd8a6dc">
            <name>const BackInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ac453b7b-34b5-4a5e-bc4d-cd7b05a54d01">
            <name>const BackInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f47abcf4-e014-4e59-b0d5-cff58d4c6783">
            <name>const BinaryFun&lt;Grammar*, Grammar*, bool>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6a9247ed-9cec-4a01-ada8-532406fce8a9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.99aff8df-90d8-4ce2-9102-743fdfbf0b45">
            <name>const BinaryFun&lt;String&lt;uchar>, String&lt;uchar>, bool>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.de338b55-a080-41cf-91d6-c6eca9f520cf"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.51b4d5d0-63bb-4acc-93fe-68eb066f4858">
            <name>const BinaryParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA"/>
            </content>
        </type>
        <type derived="true" id="type.cf65d77a-3e2d-4dfe-b14e-83d38390301d">
            <name>const BinaryParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2faf79f5-6e4d-48e3-aa10-97bdb07bba61">
            <name>const BinaryParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryParser_19E488A784487BB055BADC530295F1AA7A5F0BCA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.75d4b349-b408-4897-a280-d4d5e466c841">
            <name>const BinaryPred&lt;Grammar*, Grammar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9d22e1ef-360e-4e23-971d-4b2ee770339d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3e67a5e1-e2f7-4631-a8a7-08e9e915cc3e">
            <name>const BinaryPred&lt;String&lt;uchar>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.22285d60-fedb-409a-b500-f48d2bec1fa0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.db1a4e9b-317f-40bd-88fb-5c4fd1e46fba">
            <name>const BinaryReader</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
            </content>
        </type>
        <type derived="true" id="type.c59cde41-6624-4905-a2b3-03c373ed865b">
            <name>const BinaryReader&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ecd6da38-5427-4f77-84e9-45c357a5216c">
            <name>const BinaryWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
            </content>
        </type>
        <type derived="true" id="type.33ace5df-58ba-4dd5-a4b5-fd71598e9c33">
            <name>const BinaryWriter&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a118a743-de12-4a77-a1b9-963820b792a9">
            <name>const Bucket&lt;Grammar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
            </content>
        </type>
        <type derived="true" id="type.1ba975bf-c554-4876-9c01-e767d5064967">
            <name>const Bucket&lt;Grammar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.91ffcf83-8001-465a-8364-fb3310806927">
            <name>const Bucket&lt;Grammar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d7df63b0-c82a-4773-a8a0-7e3941e3196a">
            <name>const Bucket&lt;Grammar*>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2f25dc0c-2efb-4062-8fe6-452bc72e9164">
            <name>const Bucket&lt;Grammar*>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.598e9156-9ea0-4a67-a250-efba8958c51c"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bbd31d14-297d-4b1a-bc00-dbca3dd5885f">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
            </content>
        </type>
        <type derived="true" id="type.62fe38e2-8bd8-4c31-850c-a225d21378fd">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.79e15f0e-fcf3-4ab0-ae09-26bf5d169c39">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.82059846-e31c-414b-8249-6561ab15c017">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0328e296-3449-4d44-aac7-445c3438d7ad">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08e2d2be-02ff-43db-b01b-e1164e742fb8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.96ea4a9b-99b4-4438-9917-3eb5c567676d">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
            </content>
        </type>
        <type derived="true" id="type.f4ff34f1-272d-4789-b8fd-ea50819e9ade">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3468e1f5-cc16-4056-bbc2-60a611efa933">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.00d66461-47ef-4923-9d64-766914ebd02c">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.52add885-3eb7-467b-9a37-17f11bab6c9d">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6d981edc-98d9-4ad6-8d0b-163b9305dd64"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e512b172-5307-4b7c-8fb8-82150a7d55ef">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
            </content>
        </type>
        <type derived="true" id="type.5268e738-7ac1-468c-ad69-e6520edc3f82">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.752a55f5-4e8b-4cb3-9629-670965df6236">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.14774786-c45e-430d-8df0-e61d474c903a">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.faf3bc5f-4548-4a3c-97e8-ac55d94180eb">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c5bbec5b-4509-4f43-92ed-f968978bf157"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.902befa0-f71d-46f2-b80f-7dd1747033d2">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
            </content>
        </type>
        <type derived="true" id="type.84b2fcef-57e1-409d-9f53-29a0be07a7b3">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f9d6cdb3-68d7-46b3-9aa6-340536e8807d">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6585a89d-5bf2-498f-9d93-c900e46901c4">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2cd3fa3e-90b9-46fa-bc90-8977d0d3a438">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.822b0c27-3747-48e6-af79-cbe8bd2f71fb"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dd76bfb6-6dc9-4164-a885-b894d6dfb066">
            <name>const Bucket&lt;String&lt;uchar>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
            </content>
        </type>
        <type derived="true" id="type.c70b2373-2c6b-4a99-80e8-b5153f3c48ae">
            <name>const Bucket&lt;String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8e9ba3b8-a688-41b9-89a8-dd6352817182">
            <name>const Bucket&lt;String&lt;uchar>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.280276f0-4cab-45bd-b5cc-8383cd03080a">
            <name>const Bucket&lt;String&lt;uchar>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7f70300d-22c4-4eed-8d4b-3c75767fbde9">
            <name>const Bucket&lt;String&lt;uchar>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7566c226-6cb7-43a9-aa2e-1823ec686d29"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d1d132de-c60d-402c-933d-9a6e43469e39">
            <name>const BufferedByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BufferedByteStream_E74639F265FCFA3F7A3E61DE9D92C703A46FD573"/>
            </content>
        </type>
        <type derived="true" id="type.a5a656d0-aea4-4d08-aaa8-34eb3fcc71e9">
            <name>const ByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.f04fdda5-0a4f-4711-bf75-686e849eac37">
            <name>const CharParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA"/>
            </content>
        </type>
        <type derived="true" id="type.af5d6afd-8f93-42f4-bca6-4d07902b78d6">
            <name>const CharParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.189478ce-6c67-448c-9a7e-11c68f40b184">
            <name>const CharParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e1a40e3d-7b0e-48e6-b325-45948f2c8bf8">
            <name>const CharRange</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
            </content>
        </type>
        <type derived="true" id="type.7a02da95-3622-442a-a2bc-ed5d66cd0507">
            <name>const CharRange&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.03d5b075-21a9-4d5e-a0f6-eb7018d5e74e">
            <name>const CharRange*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6ca16b4e-1169-4fdb-bcbb-10b189012237">
            <name>const CharSetParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CharSetParser_1549A5D12A015735356B2B65DB64C4AF85157B9A"/>
            </content>
        </type>
        <type derived="true" id="type.97175323-ccd9-4d89-a662-86e35dc7c4fd">
            <name>const CharSetParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CharSetParser_1549A5D12A015735356B2B65DB64C4AF85157B9A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b24de685-4464-46ca-87a3-cee6d2b6b39e">
            <name>const CharSetParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CharSetParser_1549A5D12A015735356B2B65DB64C4AF85157B9A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8fd0c128-2c81-45f3-92e8-8c0d3f9a067b">
            <name>const CodeExpandingVisitor</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
            </content>
        </type>
        <type derived="true" id="type.3e2905d1-ab8d-4ebc-9e93-befa897d0b47">
            <name>const CodeExpandingVisitor&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.91867543-1ae9-40da-aed8-c4595e6a3541">
            <name>const Complement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
            </content>
        </type>
        <type derived="true" id="type.d0c1b5c4-5fc7-4eda-ab6a-6f21437d3cd1">
            <name>const Complement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee29d10f-1116-4c73-9b79-225a62cd17cd">
            <name>const ConditionVariable</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConditionVariable_019A80625043CF98EC88D8F55238C84CFD4A9C26"/>
            </content>
        </type>
        <type derived="true" id="type.b5aebeac-b45f-4fbf-a73d-c0cf3c44fc0b">
            <name>const Construct</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
            </content>
        </type>
        <type derived="true" id="type.d9b5d66a-b388-41e9-b4f4-3e16cf81169b">
            <name>const Construct&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8d48b5bb-ed90-4f6e-9a9a-7c8dbbd27e83">
            <name>const Context</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Context_040573959767ECDC8F1941BD825CEA007DDD9496"/>
            </content>
        </type>
        <type derived="true" id="type.1d59811d-818b-47a9-9357-1b697087f0c5">
            <name>const Context&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Context_040573959767ECDC8F1941BD825CEA007DDD9496"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0359cf96-f49b-4774-aa80-c8af400fdb27">
            <name>const Context*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Context_040573959767ECDC8F1941BD825CEA007DDD9496"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f89c9d9e-20b8-4631-a09c-edf7ea4b881c">
            <name>const ConversionException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
            </content>
        </type>
        <type derived="true" id="type.4fce5394-d5be-409f-b29a-c0adbe5b3840">
            <name>const ConversionException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b5be2d41-e0bc-46a4-a5ea-c52e6b615bb8">
            <name>const Counter&lt;System.IO.ByteStream></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.42b7f893-26a8-437d-bf79-8d4e6336479c"/>
            </content>
        </type>
        <type derived="true" id="type.fd4245fe-f1a6-4a70-818f-c98d17397c9e">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.d6ffb83d-8474-45d5-946f-bda121b35c99">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.a55123cd-0816-4b24-bac4-3f9b15760d1c">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.6f6be721-c286-4f53-a040-c8ae422d09ab">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.18badfe3-13af-492b-9f05-3e843415b645">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.c25bfe4c-ea22-4e9e-804a-4a9bf2277c82">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.cd6d040c-cd4f-45d2-813b-899ad88c6839">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.02b14d27-0578-4997-977e-23ec78fad51f">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.5e4628b2-d5a6-40ce-9771-fe1efbc55617">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.aae10384-b9d0-4153-b051-3d2efb998d01">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.fd2399c9-43d6-4bf3-82d6-0198e17303dd">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.54e11ebe-ade3-4615-8367-d66a68af78b8">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.910f866a-9ce9-4d6d-bae9-010da92450c4">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.6fb34397-6607-4bb6-bedd-02cce0c4015e">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.9825b35e-7991-45dc-96e7-92077ec749a3">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.f20b1c28-a7e3-4ce6-b88d-9aafccb3fae8">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.10f79740-e2a3-4577-9c8b-544867c050a2">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9b5e0b98-e19b-4754-9cf3-aa401a1530de">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.82b21170-2dde-4c18-bdad-0744195b91ae">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4cbb454a-3546-4207-b7b1-6ef80eb1e234">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6660c18b-53b5-40a4-9d73-3195861df4f8">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.657818d7-bee6-43e5-ac2c-92168e9ee55c">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.115e7114-11e6-4f2a-bb75-0e49407148f7">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.0efc38b3-87ca-4d4f-bf20-6cafd148e9cc">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.0d4024ff-95d1-43f8-99b5-8b934e1f82ce">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.756168c9-3c5f-4f9a-b9d8-7d1aa35c1766">
            <name>const DeleteStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
            </content>
        </type>
        <type derived="true" id="type.3310b19e-5b52-4523-b8bc-8bf10b538d8f">
            <name>const DeleteStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.070256b5-330e-4dc0-b0de-5446607fce22">
            <name>const Deref</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
            </content>
        </type>
        <type derived="true" id="type.5c3998a3-5dae-48e3-80d8-56a1d55d1282">
            <name>const Deref&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.892bd717-f342-411b-b1c9-7fcbac16dc91">
            <name>const DestroyStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
            </content>
        </type>
        <type derived="true" id="type.09a1314d-4438-4fbd-8f52-e2ab0e1d2f04">
            <name>const DestroyStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ea663ecc-c430-42fb-9a01-fe6bbc5e82e3">
            <name>const EqualTo&lt;Grammar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.33277cfe-053f-4955-a08a-d5e2644fd1da"/>
            </content>
        </type>
        <type derived="true" id="type.59176dc6-338d-4c29-a4b5-86bf8f3fec07">
            <name>const EqualTo&lt;Grammar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.33277cfe-053f-4955-a08a-d5e2644fd1da"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6e2c967a-cf8f-4bc4-a0ba-326ec97c6547">
            <name>const EqualTo&lt;Grammar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.33277cfe-053f-4955-a08a-d5e2644fd1da"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a19cba48-151a-4b7a-a90a-622f867188b9">
            <name>const EqualTo&lt;String&lt;uchar>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
            </content>
        </type>
        <type derived="true" id="type.e2691c76-ffad-4eaf-a2e2-d01fbb35b1f7">
            <name>const EqualTo&lt;String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11795158-dc8d-4e38-9f81-69b27d36dd97">
            <name>const EqualTo&lt;String&lt;uchar>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b534f2b8-6cf3-437b-aa83-1f10893f7769"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.83eb97ab-8a74-4b3b-a475-fe2ddf1abe7b">
            <name>const ExpectationFailure</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
            </content>
        </type>
        <type derived="true" id="type.c7fb5ca6-c344-44b0-a99b-7f37a4aec9f5">
            <name>const ExpectationFailure&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.653a6950-70a4-4de6-960b-3900f8ea15f4">
            <name>const ExpectationFailure*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8dc05cc9-5d60-4ebe-99f6-9b5276ee7621">
            <name>const ExpectationParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
            </content>
        </type>
        <type derived="true" id="type.9872a6ef-04d5-4767-bdfa-0e029b8cf08e">
            <name>const ExpectationParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5c8854a3-0d31-4325-b7ae-c45aeddd0c09">
            <name>const ExpressionStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
            </content>
        </type>
        <type derived="true" id="type.662ff0a7-9b92-4dda-8862-e48d66d1e33a">
            <name>const ExpressionStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0c837dfa-98ff-47be-8729-b73250667b8d">
            <name>const FailureAction&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="e912d177-ad2c-4bb8-a5fe-8065e2ca8f72"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.12ac8985-2497-4fea-bbe2-156b692cd9f3">
            <name>const FileInfo</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileInfo_482D1595D6ADD6B76DCA9EE9DD41AFCD55B8A5BA"/>
            </content>
        </type>
        <type derived="true" id="type.b9fccc7b-8aa6-4fba-9eab-1a94cb9c2d9a">
            <name>const FileInfo&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileInfo_482D1595D6ADD6B76DCA9EE9DD41AFCD55B8A5BA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3995cc25-67cc-456a-b894-4aa802e41b39">
            <name>const FileInfo*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileInfo_482D1595D6ADD6B76DCA9EE9DD41AFCD55B8A5BA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b2085a6e-52bf-41af-84c5-5242f24dc422">
            <name>const FileSystemException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
            </content>
        </type>
        <type derived="true" id="type.c00f9d31-96ab-4059-bea6-b2ee14bf2e91">
            <name>const FileSystemException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2fb46294-b8b2-45bc-abfe-f64aeec3de9b">
            <name>const FrontInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
            </content>
        </type>
        <type derived="true" id="type.f7b37076-3446-450c-84e2-46a1b6727c43">
            <name>const FrontInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
            </content>
        </type>
        <type derived="true" id="type.526d4a01-0c0c-438a-b2a3-41aceafd7273">
            <name>const FrontInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.83af84b0-8894-4e40-8abf-d177972525d9">
            <name>const FrontInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d0bcd685-d590-405d-ae72-3c7f22f52ffe">
            <name>const FrontInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
            </content>
        </type>
        <type derived="true" id="type.2e31f7f5-cd3b-464c-a048-0258aca8e35a">
            <name>const FrontInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
            </content>
        </type>
        <type derived="true" id="type.aa684fd9-ce91-4d8e-b95d-80ac714fec72">
            <name>const FrontInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
            </content>
        </type>
        <type derived="true" id="type.dd35517b-f026-450d-ab0f-4a3775bedd4c">
            <name>const FrontInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.21a4bcfb-24f0-4736-bff3-24bb1c310168">
            <name>const FrontInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.10a1c3ce-6215-461a-9216-c880634ee2de">
            <name>const FrontInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4389367d-3d76-462f-b306-a24ec20d5ff4">
            <name>const FunctionProfiler</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FunctionProfiler_809E118D4757DEA417E0CB7F4E658DF7C4B79B00"/>
            </content>
        </type>
        <type derived="true" id="type.0d274af6-511f-416e-9d0f-e2a5c959e6d3">
            <name>const FunctionProfiler&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FunctionProfiler_809E118D4757DEA417E0CB7F4E658DF7C4B79B00"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eb808d96-fd64-4b9b-9c00-f235ea636f2e">
            <name>const GotoCaseStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
            </content>
        </type>
        <type derived="true" id="type.9fcd2f1b-8dff-4770-b461-be12af08b46b">
            <name>const GotoCaseStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b825141d-6bb3-49e8-a4bb-6eef4b152c40">
            <name>const GotoStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
            </content>
        </type>
        <type derived="true" id="type.11454264-41dd-4fb5-b083-4968dc73f91f">
            <name>const GotoStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d0c645bc-8674-4260-ac97-ddea0f8fdfa2">
            <name>const Grammar</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
            </content>
        </type>
        <type derived="true" id="type.165af782-0fe5-474c-87f7-6674f3e28d0f">
            <name>const Grammar&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f6bae65f-3672-49ae-b303-b2d42ee61971">
            <name>const Grammar*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.83cba7a9-43dc-4111-b8ba-68d65211cb97">
            <name>const Grammar*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ca5b885f-aa8c-4c87-9895-608b09c5e40c">
            <name>const Grammar**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.da32bb44-6db8-4281-b665-d2766b0cbb09">
            <name>const HashMap&lt;String&lt;uchar>, Grammar*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.591b9883-fe31-40a3-b03c-3508bbdb74ca"/>
            </content>
        </type>
        <type derived="true" id="type.42051b2a-f64b-4277-8818-97c4ccd1c193">
            <name>const HashMap&lt;String&lt;uchar>, Grammar*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.591b9883-fe31-40a3-b03c-3508bbdb74ca"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.08377daa-13aa-420f-a93a-ae2c788102e2">
            <name>const HashMap&lt;String&lt;uchar>, Grammar*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.591b9883-fe31-40a3-b03c-3508bbdb74ca"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.672e9c5b-221d-4169-9c01-d726125c16fb">
            <name>const HashMap&lt;String&lt;uchar>, Namespace*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4a1f5a1d-2b1d-495f-9b8c-6ae9bb0016e3"/>
            </content>
        </type>
        <type derived="true" id="type.35c820c3-eb21-4469-a0b2-7f92a0261e35">
            <name>const HashMap&lt;String&lt;uchar>, Namespace*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4a1f5a1d-2b1d-495f-9b8c-6ae9bb0016e3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cefac4af-11f0-444b-9fcd-8aea877a8c0b">
            <name>const HashMap&lt;String&lt;uchar>, Namespace*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4a1f5a1d-2b1d-495f-9b8c-6ae9bb0016e3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d8c57494-7a0f-4d95-946c-55dd4231065f">
            <name>const HashMap&lt;String&lt;uchar>, ParsingObject*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.efce59e9-5e09-4a7b-ab54-7bd0eaedfc79"/>
            </content>
        </type>
        <type derived="true" id="type.f604bc72-791e-4b04-9b30-0bb2e234fe6c">
            <name>const HashMap&lt;String&lt;uchar>, ParsingObject*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.efce59e9-5e09-4a7b-ab54-7bd0eaedfc79"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b9c21a73-747c-4d41-a7f3-a4953d8d18b7">
            <name>const HashMap&lt;String&lt;uchar>, ParsingObject*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.efce59e9-5e09-4a7b-ab54-7bd0eaedfc79"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1f728227-c926-4904-8ed6-8bf9e4bb41cb">
            <name>const HashMap&lt;String&lt;uchar>, String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.09091d46-e457-4acc-abaa-e4f7cba39e1b"/>
            </content>
        </type>
        <type derived="true" id="type.a48606a0-d916-48a7-b8f5-ce922682f021">
            <name>const HashMap&lt;String&lt;uchar>, String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.09091d46-e457-4acc-abaa-e4f7cba39e1b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4bf7174b-8ce3-4d32-a57f-1b004d8b609f">
            <name>const HashMap&lt;String&lt;uchar>, String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.09091d46-e457-4acc-abaa-e4f7cba39e1b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f55fb216-bccc-4be6-abc7-dcb1b0916318">
            <name>const HashSet&lt;Grammar*, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6927f0f0-14a1-412d-933f-484703dea1ba"/>
            </content>
        </type>
        <type derived="true" id="type.411a4da5-94e6-4c23-9e40-800d21e16d15">
            <name>const HashSet&lt;Grammar*, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6927f0f0-14a1-412d-933f-484703dea1ba"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.935a3f94-d13d-4a30-b0fe-934ffb549b95">
            <name>const HashSet&lt;Grammar*, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6927f0f0-14a1-412d-933f-484703dea1ba"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3a3d07a2-1845-4026-b3a5-18c84ad240cb">
            <name>const HashSet&lt;String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ae8196d9-8057-4b3b-b96d-8921798c29aa"/>
            </content>
        </type>
        <type derived="true" id="type.0efca49c-3832-48f6-ad9b-5b0179210046">
            <name>const HashSet&lt;String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ae8196d9-8057-4b3b-b96d-8921798c29aa"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cf127abc-2c9d-41d0-b0c7-2cde9395aa5d">
            <name>const HashSet&lt;String&lt;uchar>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ae8196d9-8057-4b3b-b96d-8921798c29aa"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.780f7359-b568-4c56-81bc-141b505ae798">
            <name>const Hasher&lt;Grammar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c3dfb72b-e2c5-44f9-ab25-560f9160f1d6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.120b4938-c67e-4569-9550-c79667b7eb69">
            <name>const Hasher&lt;String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.52cc2336-180e-4851-8e35-89023e193a1a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a0baae49-c0c9-44e6-bde6-117f04d4d953">
            <name>const Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
            </content>
        </type>
        <type derived="true" id="type.3cd7095a-b772-4133-9436-a2d93a29e75c">
            <name>const Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.482e9fca-8b62-4458-a503-324ce8f95e3d">
            <name>const Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.85263d18-f1c6-4917-9fbd-999ae715cf94"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3d2b1dac-7985-4516-a25e-2877a8986bf4">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
            </content>
        </type>
        <type derived="true" id="type.3fb066df-28eb-44e7-b0a9-2240eaccced5">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ed64a9fd-955d-4e39-ba97-c36ad4b5dd83">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a9b6ffdd-bceb-4aec-87e3-06147eca6353"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0685871c-a87b-45c1-a6c9-e652a7ae5b8c">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
            </content>
        </type>
        <type derived="true" id="type.aef9477c-73bb-43b3-bf75-2da668216ce8">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b27efd9c-f032-4d2c-8542-3a3d5484bacf">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c97cfc97-04c3-421a-a8a6-4faac624a6ef"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.418fd166-3d41-4681-8c0b-cd0375758456">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
            </content>
        </type>
        <type derived="true" id="type.0168932f-eadb-49a6-b52b-bbabeac7ca51">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cbe9d56c-988d-44f9-9016-c14f3176c202">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8f31013f-e174-406d-a62d-6116b2c1fae2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.92a36012-b192-47c5-8736-f8cd0c8b6269">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
            </content>
        </type>
        <type derived="true" id="type.81fe3dd1-e3c2-4245-b181-cfa6a86ba5b7">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1da305d9-d8e0-4761-862b-7a0e4c6379fb">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.37f7546e-e8af-403e-8a35-33e44c143772"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.84a9b7fb-b8f6-43c2-af53-0724391d21b0">
            <name>const Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
            </content>
        </type>
        <type derived="true" id="type.d6fc8134-3ff7-4a4d-958a-dc2a105b52e8">
            <name>const Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.91c33ae1-88ef-4417-a238-173bab977742">
            <name>const Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.db02f9a8-6d9b-42f1-aed0-9371d616011c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6a987126-bd98-4100-896d-83a53a75d81b">
            <name>const HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d3de4bc2-8e97-49ca-bb00-3799303b41a0"/>
            </content>
        </type>
        <type derived="true" id="type.d069d7c8-19c6-4063-af81-f61e5a089733">
            <name>const HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d3de4bc2-8e97-49ca-bb00-3799303b41a0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b8fb83b2-944a-44f3-b59c-c9421a702676">
            <name>const HashtableIterator&lt;Grammar*, Grammar*&amp;, Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d3de4bc2-8e97-49ca-bb00-3799303b41a0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.491899b1-f996-427f-8373-3aae5eb6b722">
            <name>const HashtableIterator&lt;Grammar*, const Grammar*&amp;, const Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e4ef023f-6da4-4f9a-b3e9-e4dcba1738f3"/>
            </content>
        </type>
        <type derived="true" id="type.bbabf83d-6e66-46d5-a8df-a28875ad0ed8">
            <name>const HashtableIterator&lt;Grammar*, const Grammar*&amp;, const Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e4ef023f-6da4-4f9a-b3e9-e4dcba1738f3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4acfb2d3-fdba-4013-b40b-2cec52b934b5">
            <name>const HashtableIterator&lt;Grammar*, const Grammar*&amp;, const Grammar**, Hashtable&lt;Grammar*, Grammar*, Identity&lt;Grammar*>, Hasher&lt;Grammar*>, EqualTo&lt;Grammar*>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e4ef023f-6da4-4f9a-b3e9-e4dcba1738f3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ddf51e7f-0bf7-4961-b0ab-8c17af47718d">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3dfaee5c-06e9-404d-b4df-b7e4204c912c"/>
            </content>
        </type>
        <type derived="true" id="type.5df3ea03-96e1-48d8-860f-83d022e0a3d6">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3dfaee5c-06e9-404d-b4df-b7e4204c912c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5d552fe6-495e-4d06-add0-b03ec7f477cd">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, Pair&lt;String&lt;uchar>, Grammar*>&amp;, Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3dfaee5c-06e9-404d-b4df-b7e4204c912c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ea5b20a0-832f-4163-9f96-270c64db568b">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, const Pair&lt;String&lt;uchar>, Grammar*>&amp;, const Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.13925496-3577-4e53-bdf9-8eedd379ec74"/>
            </content>
        </type>
        <type derived="true" id="type.62a003cc-5d90-491a-947a-668ae06fb9b2">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, const Pair&lt;String&lt;uchar>, Grammar*>&amp;, const Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.13925496-3577-4e53-bdf9-8eedd379ec74"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.231ec04b-c700-4c2a-86f7-c2bd1820b4fb">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Grammar*>, const Pair&lt;String&lt;uchar>, Grammar*>&amp;, const Pair&lt;String&lt;uchar>, Grammar*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Grammar*>, SelectFirst&lt;String&lt;uchar>, Grammar*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.13925496-3577-4e53-bdf9-8eedd379ec74"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.92e8d7b5-f070-4b1f-b60d-e793aca2fb4f">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3fd4fd11-315c-46a1-9812-8fb8a140fc83"/>
            </content>
        </type>
        <type derived="true" id="type.613400e9-000c-446f-96e4-4eb0d6bffed9">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3fd4fd11-315c-46a1-9812-8fb8a140fc83"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dd8fb9b0-205d-4138-92fa-66d06c69ccd6">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, Pair&lt;String&lt;uchar>, Namespace*>&amp;, Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3fd4fd11-315c-46a1-9812-8fb8a140fc83"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5773f9cc-8a9e-49c8-bb69-277dfb6bafc4">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, const Pair&lt;String&lt;uchar>, Namespace*>&amp;, const Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.406e6953-a130-43f4-b023-096fe55d1c65"/>
            </content>
        </type>
        <type derived="true" id="type.80532ed5-9e12-4513-a168-a807861fc88a">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, const Pair&lt;String&lt;uchar>, Namespace*>&amp;, const Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.406e6953-a130-43f4-b023-096fe55d1c65"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9418937e-f7de-4ac9-a284-4df13864df7b">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Namespace*>, const Pair&lt;String&lt;uchar>, Namespace*>&amp;, const Pair&lt;String&lt;uchar>, Namespace*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Namespace*>, SelectFirst&lt;String&lt;uchar>, Namespace*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.406e6953-a130-43f4-b023-096fe55d1c65"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.34dbf74d-3ebb-4ea0-a07e-a6999a1d1d4f">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9d9d4fa9-8244-43a6-8217-2c71b4abe240"/>
            </content>
        </type>
        <type derived="true" id="type.0fe2f407-bafa-4259-8bc1-d86fddf8898e">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9d9d4fa9-8244-43a6-8217-2c71b4abe240"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c1c53a9f-d30c-4ead-aa5a-3b787f92987e">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9d9d4fa9-8244-43a6-8217-2c71b4abe240"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bb460ee9-6965-4f43-8fa7-41e4ddf4f321">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, const Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, const Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e3239f19-f6ac-484a-aa20-64be273bad00"/>
            </content>
        </type>
        <type derived="true" id="type.e70903e5-73a2-4a1e-9d18-67f4ac3e593a">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, const Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, const Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e3239f19-f6ac-484a-aa20-64be273bad00"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9ed9715b-e176-41fc-8305-6fc512ea3c6c">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, const Pair&lt;String&lt;uchar>, ParsingObject*>&amp;, const Pair&lt;String&lt;uchar>, ParsingObject*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, ParsingObject*>, SelectFirst&lt;String&lt;uchar>, ParsingObject*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e3239f19-f6ac-484a-aa20-64be273bad00"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.946d8861-a65a-4b2e-97db-2dd2ac4522e7">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1c7c0d67-3fca-41b2-9c3e-2002a3357cb4"/>
            </content>
        </type>
        <type derived="true" id="type.48262626-cb48-4ad8-adbc-b4b3b0caade0">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1c7c0d67-3fca-41b2-9c3e-2002a3357cb4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.43ed4f9d-4819-4def-b4ba-6c88b1cea653">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1c7c0d67-3fca-41b2-9c3e-2002a3357cb4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.714ce1e2-9077-4ea7-9fd7-f0da6b53cb25">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, const Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, const Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6546d856-d082-45ff-b2f2-7160263e491d"/>
            </content>
        </type>
        <type derived="true" id="type.aa509e06-7965-4177-a337-0859edb0eabf">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, const Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, const Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6546d856-d082-45ff-b2f2-7160263e491d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8b8724f5-e017-4a7a-9ac4-cf0e21992e2c">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, const Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;, const Pair&lt;String&lt;uchar>, String&lt;uchar>>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, String&lt;uchar>>, SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6546d856-d082-45ff-b2f2-7160263e491d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6b957188-c0c5-4193-be56-a43b6488d213">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3c1139a5-781d-4122-8871-071666a474e1"/>
            </content>
        </type>
        <type derived="true" id="type.82603551-16a7-41d3-b5f6-344ed1935fb1">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.38036b23-1991-4b78-a0c8-2d67ac034833"/>
            </content>
        </type>
        <type derived="true" id="type.21b22e2b-d43f-4dba-8890-6e877089e03f">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3c1139a5-781d-4122-8871-071666a474e1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f9e65f06-c5b2-475d-aee4-409571a73757">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.38036b23-1991-4b78-a0c8-2d67ac034833"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.57fe09b0-c982-4db5-8201-8c165cdc78af">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3c1139a5-781d-4122-8871-071666a474e1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.206ee401-728a-44cb-b997-1ce2a65f8bf8">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.38036b23-1991-4b78-a0c8-2d67ac034833"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e322c0c1-adf7-43a5-a6a8-10f35e14e1ea">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ee3ce017-fd88-481b-946e-02b71eb8d7c0"/>
            </content>
        </type>
        <type derived="true" id="type.ecd2c2ea-40c1-4069-b3dc-fdf12d997eb1">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1f04ebbb-0a30-42b2-bce7-2d0c677ec1af"/>
            </content>
        </type>
        <type derived="true" id="type.e322c0c1-adf7-43a5-a6a8-10f35e14e1ea">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ee3ce017-fd88-481b-946e-02b71eb8d7c0"/>
            </content>
        </type>
        <type derived="true" id="type.fef59bd4-3234-4bf6-a180-28388cdedea3">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1f04ebbb-0a30-42b2-bce7-2d0c677ec1af"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c5c35bde-f0c4-4e62-84d8-8ae4e65fcf2f">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ee3ce017-fd88-481b-946e-02b71eb8d7c0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c6c55db6-cf63-47fb-a3a0-1a24b45413cd">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ee3ce017-fd88-481b-946e-02b71eb8d7c0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.caa44599-ee00-41e3-a2a8-e886b7d8671f">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1f04ebbb-0a30-42b2-bce7-2d0c677ec1af"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.87a7a373-0a63-446c-a707-2a4374a822d6">
            <name>const IdentifierCharsRule</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_IdentifierCharsRule_F8759732990B698642B4479584B5D4D6D9C390CB"/>
            </content>
        </type>
        <type derived="true" id="type.c59480f7-c522-48a7-b2b4-948390ddf1d6">
            <name>const IdentifierCharsRule&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_IdentifierCharsRule_F8759732990B698642B4479584B5D4D6D9C390CB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.adf9bc97-24df-47df-be4a-5fc4ae38bb81">
            <name>const IdentifierCharsRule*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_IdentifierCharsRule_F8759732990B698642B4479584B5D4D6D9C390CB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.64f1458b-1b63-4a86-bea5-cc8a9779f866">
            <name>const Identity&lt;Grammar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.98c77f3a-e05d-415b-a5ba-9ab8f257269f"/>
            </content>
        </type>
        <type derived="true" id="type.ccb6c01a-680c-45e4-8189-8ed5077201bc">
            <name>const Identity&lt;Grammar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.98c77f3a-e05d-415b-a5ba-9ab8f257269f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.45944708-3a74-4a7c-aa88-6e2bd994ff1b">
            <name>const Identity&lt;Grammar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.98c77f3a-e05d-415b-a5ba-9ab8f257269f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.69f8817b-be2b-4612-ab01-b13f70253b89">
            <name>const Identity&lt;String&lt;uchar>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08c17c9b-c834-414b-8eab-08b8de1ea443"/>
            </content>
        </type>
        <type derived="true" id="type.5702355f-ab0c-47ed-823d-72c19a977faa">
            <name>const Identity&lt;String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08c17c9b-c834-414b-8eab-08b8de1ea443"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1992328b-b93e-4efe-9770-9421ee7143c9">
            <name>const Identity&lt;String&lt;uchar>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08c17c9b-c834-414b-8eab-08b8de1ea443"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fdd263ea-4ca8-45e8-88de-cf59ca54fb05">
            <name>const InsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
            </content>
        </type>
        <type derived="true" id="type.f8f261da-7c23-45db-b093-276942a2951c">
            <name>const InsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
            </content>
        </type>
        <type derived="true" id="type.37b2a1ce-786e-4d9f-bf13-c74f63946c05">
            <name>const InsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
            </content>
        </type>
        <type derived="true" id="type.563365c2-df59-4bda-95a8-23285f37713a">
            <name>const InsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a1de63a6-42c4-4b38-bd52-26bc98f2bcb2">
            <name>const InsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ddbc07c3-725a-4de8-926b-1b90ab4aff90">
            <name>const InsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6d2fe5e8-fcae-43b5-9d6a-62a5822e75b9">
            <name>const InvalidPathException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
            </content>
        </type>
        <type derived="true" id="type.05024ac8-ebfa-4c4d-b935-4f3a576020f0">
            <name>const InvalidPathException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.405a74af-c38c-4bb8-8353-fc62bde9e7e8">
            <name>const Invoke</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
            </content>
        </type>
        <type derived="true" id="type.f30cdef4-26bd-4aea-87da-6a40269ed880">
            <name>const Invoke&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2428471c-3d0d-463a-9f53-bfa5cc75833d">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4da7762f-8c5e-4d4e-a185-605883df46f1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4b916436-c0fc-4dd6-8d47-54980cde911c">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="c356b906-935c-4db5-ad50-df08eac7fe9b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c6cd1982-ea6f-4ee1-bd7b-9a7bd36a692d">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="1daf5449-c489-4187-a295-de5653bae066"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1632f057-b704-4a9a-8c88-ec864cf32291">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6731076c-f39f-4b1a-901e-acda07d86381"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2362c913-d96e-45c9-ba13-2ac386487a22">
            <name>const KeywordListParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KeywordListParser_02161DAF5C377B76A9433EE79663623F8710F2EB"/>
            </content>
        </type>
        <type derived="true" id="type.0bbfe423-ff3c-4033-a68c-aed19e1c8e10">
            <name>const KeywordListParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KeywordListParser_02161DAF5C377B76A9433EE79663623F8710F2EB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.19d3ce8c-206e-48aa-a491-4ea14814d03c">
            <name>const KeywordListParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KeywordListParser_02161DAF5C377B76A9433EE79663623F8710F2EB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6e159d94-09aa-4f6d-81bb-74f78af73ce7">
            <name>const KeywordParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KeywordParser_A653B0BB080315E503BF719C91EC3C4DAD3F604F"/>
            </content>
        </type>
        <type derived="true" id="type.357d9706-2b91-4c53-87e8-367315eea363">
            <name>const KeywordParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KeywordParser_A653B0BB080315E503BF719C91EC3C4DAD3F604F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.98d64bf6-f887-4efb-a5aa-c45a1767123a">
            <name>const KeywordParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KeywordParser_A653B0BB080315E503BF719C91EC3C4DAD3F604F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d2125d77-d2f7-462e-b900-54a86adf59ee">
            <name>const KleeneStarParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
            </content>
        </type>
        <type derived="true" id="type.2e3f7ae5-55b6-4624-b356-2c120ef3e206">
            <name>const KleeneStarParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f690b03e-8797-4b6f-be67-ef1ab0558bb0">
            <name>const List&lt;ActionParser*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d952f9d9-4f9c-4238-af65-ceba7689fef3"/>
            </content>
        </type>
        <type derived="true" id="type.95a3544b-ac76-4adc-9a06-6a09b148c401">
            <name>const List&lt;ActionParser*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d952f9d9-4f9c-4238-af65-ceba7689fef3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4c10f3bd-083f-4652-8659-9dfa36a1e56a">
            <name>const List&lt;ActionParser*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d952f9d9-4f9c-4238-af65-ceba7689fef3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.330ae042-afa3-45b9-ac72-328ce7956545">
            <name>const List&lt;Bucket&lt;Grammar*>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.aba8472e-00e1-470c-9c4c-a6830603a364"/>
            </content>
        </type>
        <type derived="true" id="type.415e93a4-8982-454a-afe7-571a60a70417">
            <name>const List&lt;Bucket&lt;Grammar*>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.aba8472e-00e1-470c-9c4c-a6830603a364"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e8e19c9f-2ed8-486b-a001-fc58952ea42e">
            <name>const List&lt;Bucket&lt;Grammar*>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.aba8472e-00e1-470c-9c4c-a6830603a364"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f1fb58ac-f0e9-4d00-a075-b37469002570">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.30cf2e16-d83e-43d2-9f62-53eb3e140d48"/>
            </content>
        </type>
        <type derived="true" id="type.eb6a8bda-b4a1-474f-8625-439704702ba5">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.30cf2e16-d83e-43d2-9f62-53eb3e140d48"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1c866cc4-227c-4331-abb1-70bae6696751">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.30cf2e16-d83e-43d2-9f62-53eb3e140d48"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4f05bc85-4298-43a3-b5c9-83d1643fcf62">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.dd3f0afe-0536-4288-af41-056677e8afe1"/>
            </content>
        </type>
        <type derived="true" id="type.d522a2f6-bfd3-414c-8ef3-628946213712">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.dd3f0afe-0536-4288-af41-056677e8afe1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.533c1a28-f0c9-412c-ac49-5d993da04336">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.dd3f0afe-0536-4288-af41-056677e8afe1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2690d6ed-2054-4695-932a-0b776f0ebe66">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b0c51aaf-df29-432d-81e7-8c4759415f2b"/>
            </content>
        </type>
        <type derived="true" id="type.699effe1-bb61-4b2e-b792-47d5422bc06a">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b0c51aaf-df29-432d-81e7-8c4759415f2b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5e4d8ebd-5b6b-4cd0-b8d3-6e73932dff26">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b0c51aaf-df29-432d-81e7-8c4759415f2b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.df21242b-a1f4-4c8a-b65f-e6dc75601484">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c1d9220d-ea84-4510-a831-0eb27fd4aec3"/>
            </content>
        </type>
        <type derived="true" id="type.1780d0a9-e647-4a12-9bd1-1bac92ba65c4">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c1d9220d-ea84-4510-a831-0eb27fd4aec3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bdd2c52a-0f38-46da-89e5-47fe1d46a09e">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c1d9220d-ea84-4510-a831-0eb27fd4aec3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.58e2c5b7-8920-48a0-88ba-d04a43b4bd1c">
            <name>const List&lt;Bucket&lt;String&lt;uchar>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.15214e9f-50dd-4d57-a4eb-6606128711b0"/>
            </content>
        </type>
        <type derived="true" id="type.25d35b42-b36a-4cd7-bf51-0c69b2843829">
            <name>const List&lt;Bucket&lt;String&lt;uchar>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.15214e9f-50dd-4d57-a4eb-6606128711b0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0c182425-b602-4df8-9b5a-c4a8c8b5cba8">
            <name>const List&lt;Bucket&lt;String&lt;uchar>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.15214e9f-50dd-4d57-a4eb-6606128711b0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.05358168-82e9-4332-ab5a-ce8e7e29c4bb">
            <name>const List&lt;Namespace*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.cc93c56e-04c6-4fac-a917-db2c5061bd84"/>
            </content>
        </type>
        <type derived="true" id="type.b58d4453-7a0c-47f9-83f4-dbd6b126fc81">
            <name>const List&lt;Namespace*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.cc93c56e-04c6-4fac-a917-db2c5061bd84"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.78fbea0c-5df9-4398-ab63-268b47036c90">
            <name>const List&lt;Namespace*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.cc93c56e-04c6-4fac-a917-db2c5061bd84"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.92ac9b66-68c5-437f-b821-9bb656baf916">
            <name>const List&lt;NonterminalParser*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.eb384c62-c2ac-45c8-9840-7d06ed74380a"/>
            </content>
        </type>
        <type derived="true" id="type.35bbcc9a-7b7a-4c0c-9b9f-2681e9d402f1">
            <name>const List&lt;NonterminalParser*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.eb384c62-c2ac-45c8-9840-7d06ed74380a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1f8c02ee-3202-45e8-b738-3085dbc31e37">
            <name>const List&lt;NonterminalParser*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.eb384c62-c2ac-45c8-9840-7d06ed74380a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7db08dbf-2bee-4259-b064-f28eaa144b68">
            <name>const List&lt;RuleLink*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8073a0e9-fb8b-4ec3-8014-f101497e9e6f"/>
            </content>
        </type>
        <type derived="true" id="type.e5a17825-fd6b-4c7f-9cd0-c47c9438b5c4">
            <name>const List&lt;RuleLink*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8073a0e9-fb8b-4ec3-8014-f101497e9e6f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d41ab488-6ca0-401b-b51b-1d9a2efd3ac5">
            <name>const List&lt;RuleLink*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8073a0e9-fb8b-4ec3-8014-f101497e9e6f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8f9f6ea0-6527-46b8-8b1b-904c48744c26">
            <name>const List&lt;RuleParser*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9368cd32-9562-4a67-aa1b-841245d1b125"/>
            </content>
        </type>
        <type derived="true" id="type.47411ca4-2242-4039-948b-fc227bb28232">
            <name>const List&lt;RuleParser*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9368cd32-9562-4a67-aa1b-841245d1b125"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d51d4bb5-c6ba-43e6-a937-bb15617ea601">
            <name>const List&lt;RuleParser*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9368cd32-9562-4a67-aa1b-841245d1b125"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.466b2e21-da6b-43fa-9fe7-f6cbe76414c4">
            <name>const List&lt;String&lt;char>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b3752ce7-dd0a-462c-997c-6dd1ea677227"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e1e3ae2e-fcc8-455f-ad43-10294f91aeeb">
            <name>const List&lt;String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0f88e12e-eddc-4b23-96da-36144314d958"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.03de035e-46c8-45cf-b85a-3fd01215531a">
            <name>const List&lt;System.Text.Parsing.AttrOrVar></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.163f3853-9fa5-4cb3-be1c-c96911775488"/>
            </content>
        </type>
        <type derived="true" id="type.4291b4e1-056e-43b0-a0a1-dda7246d79a3">
            <name>const List&lt;System.Text.Parsing.AttrOrVar>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.163f3853-9fa5-4cb3-be1c-c96911775488"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e9a28c56-52cd-4fa2-8f69-84436c46c997">
            <name>const List&lt;System.Text.Parsing.AttrOrVar>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.163f3853-9fa5-4cb3-be1c-c96911775488"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ba8847a5-811f-448c-80bf-21a70cb0dd6e">
            <name>const List&lt;System.Text.Parsing.CharRange></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.12209dc6-4a69-48db-94b1-3fbd95d50cc7"/>
            </content>
        </type>
        <type derived="true" id="type.c782c04d-ac2e-4caa-82d0-9844fe91bf92">
            <name>const List&lt;System.Text.Parsing.CharRange>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.12209dc6-4a69-48db-94b1-3fbd95d50cc7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.aac6b7c9-0267-464c-82a2-cc3c266222c5">
            <name>const List&lt;System.Text.Parsing.CharRange>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.12209dc6-4a69-48db-94b1-3fbd95d50cc7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cda8d403-b2f9-4328-aa13-8b5f4bfe29ea">
            <name>const List&lt;System.Text.Parsing.RuleData></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.69eb3c01-d1ef-4fdf-a4ec-3cad363d145a"/>
            </content>
        </type>
        <type derived="true" id="type.595f9032-6e3d-499f-9ea2-589c03f6b8cf">
            <name>const List&lt;System.Text.Parsing.RuleData>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.69eb3c01-d1ef-4fdf-a4ec-3cad363d145a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.71b30528-738b-4dbb-ae43-a35355020eaf">
            <name>const List&lt;System.Text.Parsing.RuleData>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.69eb3c01-d1ef-4fdf-a4ec-3cad363d145a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c6a86e55-af2e-4bb5-8b4b-aca3fd3c9b87">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7424ce3b-e581-429a-93ed-24be04c68e1a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bf477e1b-4068-4f37-8028-4f0015d01fd7">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.Context>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9293e032-c126-417c-8826-c6dd092a23be"/>
            </content>
        </type>
        <type derived="true" id="type.3e32311d-5ca1-464d-893f-9c85af9340c9">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.Context>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9293e032-c126-417c-8826-c6dd092a23be"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1288c5e4-acd6-4b78-95c6-47a16e30db73">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.Context>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9293e032-c126-417c-8826-c6dd092a23be"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2a4c5b76-77ee-4e6b-8ee7-9e743e093c3a">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.Object>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d3628896-cbc9-4b0f-881b-5ebbac82905d"/>
            </content>
        </type>
        <type derived="true" id="type.6029df49-0b77-490d-b287-5ca506aace87">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d3628896-cbc9-4b0f-881b-5ebbac82905d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ec0eb9bb-c530-431e-91ac-72c581976f5b">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.Object>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d3628896-cbc9-4b0f-881b-5ebbac82905d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.644558e2-214d-42ac-a93c-47580e89cf86">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.78c83cc4-333c-423a-ac2c-879b677de054"/>
            </content>
        </type>
        <type derived="true" id="type.6f67c08a-8919-4ddd-92f9-a40459818bab">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.78c83cc4-333c-423a-ac2c-879b677de054"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2032985c-6a27-47c4-b5ed-5e3309c198d4">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.78c83cc4-333c-423a-ac2c-879b677de054"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d7ee1f85-aa05-4549-b1a5-d942520e04a8">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a034d385-fce1-4a57-92aa-3d28f35483b1"/>
            </content>
        </type>
        <type derived="true" id="type.64b4415e-726c-4b09-b1f6-1303bf3d9d98">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a034d385-fce1-4a57-92aa-3d28f35483b1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ae6f1eb3-6d27-4ece-99c8-54e331d444fb">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a034d385-fce1-4a57-92aa-3d28f35483b1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.545b9139-df0c-48c8-8336-ce26b634feb6">
            <name>const Literal</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
            </content>
        </type>
        <type derived="true" id="type.d2f8f49c-814a-46ec-9213-17491e630903">
            <name>const Literal&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.46666ce5-b4d3-494a-8e52-2f0597b8ef93">
            <name>const LockGuard&lt;Mtx></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
            </content>
        </type>
        <type derived="true" id="type.bd141026-e81c-4dae-b898-b51dabe01f33">
            <name>const LockGuard&lt;Mtx>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2f1eec1e-c7cc-46c1-9c68-20a1d8eeab8d">
            <name>const LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.fa4abbcc-d5c3-4d23-a6d1-a05311f67255"/>
            </content>
        </type>
        <type derived="true" id="type.a5ee4556-48f1-4e33-9efe-bedd8ca52c91">
            <name>const LockGuard&lt;System.Threading.Mutex>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.fa4abbcc-d5c3-4d23-a6d1-a05311f67255"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1c26711d-5bc0-463b-909e-b32f9cbf99e3">
            <name>const Match</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
            </content>
        </type>
        <type derived="true" id="type.a97ff3de-211a-4259-9d16-1fe0aad05c77">
            <name>const Match&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5d90b7fe-9943-499c-8143-c339834c50db">
            <name>const Match*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Match_C99D1241E362392692C96D3964255AC3F6165E5E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4e2dbb4e-1a79-472b-a761-2b6ef7ed0da0">
            <name>const Mutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.b47c1337-4e1f-4462-a301-8d20f7add612">
            <name>const Namespace</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
            </content>
        </type>
        <type derived="true" id="type.853de8d3-bea6-486c-bd46-efafb70ff244">
            <name>const Namespace&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.01b0ce77-847d-47c7-b074-60c449e7e124">
            <name>const Namespace*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.88eed211-7675-42dd-8210-5c24898a0c0d">
            <name>const Namespace*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d04fa0d8-17d8-4893-bf07-312cfb3a5fab">
            <name>const Namespace**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Namespace_BEC67344A7973E4CF4E380F7983A4A744161BDF4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.33d1fbdf-8458-4184-8710-2ff1bf12368c">
            <name>const New</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
            </content>
        </type>
        <type derived="true" id="type.a466ddc0-8eae-4266-9807-77b76253ec5a">
            <name>const New&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.70b4b586-04ab-49dc-b50e-0828e97e9d06">
            <name>const NonterminalParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
            </content>
        </type>
        <type derived="true" id="type.94a98300-51da-44f4-a770-8b1be3669f86">
            <name>const NonterminalParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f0462582-0a99-4f6f-9b49-674b9c5fb2b9">
            <name>const NonterminalParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.81eec93a-ad29-4add-9663-ecf02764d8ef">
            <name>const NonterminalParser*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ca76f8d7-ba7c-4132-845c-257ba0f626a5">
            <name>const NonterminalParser**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NonterminalParser_9EA7AE3E5E1CB990FBCEF93ACFF8557CE334E348"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dad5794b-846a-4690-897b-5419895f167e">
            <name>const Not</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
            </content>
        </type>
        <type derived="true" id="type.a2a74f4a-e067-410d-bfad-58eaaed86dc8">
            <name>const Not&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7f0c0a7c-7b00-4ddc-87c8-ee815e9abbd0">
            <name>const Object</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66"/>
            </content>
        </type>
        <type derived="true" id="type.6b590bd3-0f6a-48b4-884a-712265c25a02">
            <name>const Object&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.309bb3d4-c6ad-48ec-a0e7-43b1c09406eb">
            <name>const Object*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Object_4574CA0265BB8D8C5F355EB6E9674FC1FB8E4E66"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2788de4c-8c65-4623-96b4-474a27724302">
            <name>const OptionalParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
            </content>
        </type>
        <type derived="true" id="type.947c43c9-b910-496e-a697-6030e84bd3ef">
            <name>const OptionalParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5788dc5f-5dd3-4a03-9847-5b714847a005">
            <name>const OutputStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OutputStream_D306768ED83C9FB00EA54CD61D604CE2BF727452"/>
            </content>
        </type>
        <type derived="true" id="type.06cc4cc0-a572-460a-b9f4-1f746da61973">
            <name>const Pair&lt;String&lt;uchar>, Grammar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
            </content>
        </type>
        <type derived="true" id="type.6c6f5927-01ea-467b-b813-20f5c1ed0c49">
            <name>const Pair&lt;String&lt;uchar>, Grammar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a05acaac-b374-4163-bfa5-e3a2a19f5b0b">
            <name>const Pair&lt;String&lt;uchar>, Grammar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7f61b40c-c589-4738-8c43-d0997c97366d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a8f481a9-a476-4454-b2c7-96ae1848e8ba">
            <name>const Pair&lt;String&lt;uchar>, Namespace*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
            </content>
        </type>
        <type derived="true" id="type.dc9b9e33-7e57-4483-b9f8-265efb742a2c">
            <name>const Pair&lt;String&lt;uchar>, Namespace*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e13b3677-c532-48bb-9e80-215b033c56e7">
            <name>const Pair&lt;String&lt;uchar>, Namespace*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c7e78157-86db-4f93-bc1c-fbaf4b336f36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cad7400c-e1d4-4445-ad2e-dca682169fe7">
            <name>const Pair&lt;String&lt;uchar>, ParsingObject*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
            </content>
        </type>
        <type derived="true" id="type.e953262c-3a3f-4656-8167-0afebf196dab">
            <name>const Pair&lt;String&lt;uchar>, ParsingObject*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.30fd5802-12b6-4831-8719-c6ccc8465cd0">
            <name>const Pair&lt;String&lt;uchar>, ParsingObject*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1a71bc78-2d55-4232-9064-277bad81e2b4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ddd3eb6d-0cd8-497a-bd03-e49574cf65d4">
            <name>const Pair&lt;String&lt;uchar>, String&lt;uchar>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
            </content>
        </type>
        <type derived="true" id="type.802e6cbf-d183-482b-adb7-e07ec1197dac">
            <name>const Pair&lt;String&lt;uchar>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d377f41a-57ed-4242-ba79-411883d5b0a6">
            <name>const Pair&lt;String&lt;uchar>, String&lt;uchar>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ac255434-a008-4e8c-b3c1-00ddd67dabc6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.81c19eb4-914a-4066-bd68-905d09041b95">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3cbbb6f2-9c79-4aea-afcd-262dc3b2480e">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c7b6ff02-f700-4b2d-8d4c-c7d289dc6333">
            <name>const Parser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
            </content>
        </type>
        <type derived="true" id="type.dff8c9d3-2c9f-4a9b-8c25-50a1f059bc23">
            <name>const Parser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.166e8c7d-24ec-44b8-9c0a-a39c551f7ffc">
            <name>const Parser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9af5e6d7-6bd5-466a-be62-54609c65791d">
            <name>const ParsingAction&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="37dc5721-3977-479f-ac14-288ec050ec54"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.422f5f10-440d-4871-a8a7-b3506cbd4e29">
            <name>const ParsingData</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
            </content>
        </type>
        <type derived="true" id="type.c1c1a54e-e94f-4c23-8465-5013684f2b2a">
            <name>const ParsingData&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.994266d7-0e77-4e1c-a2a5-8bf52e64f3e1">
            <name>const ParsingData*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7cae6334-4e2b-48ba-a908-4ccfe76c3af0">
            <name>const ParsingData*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9e3b5d8e-98de-4e33-a671-76ed3235018f">
            <name>const ParsingData**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a61bfad1-75be-4f2e-be23-7c76b19d718f">
            <name>const ParsingDomain</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
            </content>
        </type>
        <type derived="true" id="type.f318caaa-2009-4024-934d-0f03cdd9d633">
            <name>const ParsingDomain&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0a0fc129-129b-4120-826c-cf66f283ca83">
            <name>const ParsingDomain*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.487cd2ef-7173-42ed-84ff-94ae9208f38d">
            <name>const ParsingDomain*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f7ac8d4a-5c3e-4d48-97d4-6ee9e3a96d53">
            <name>const ParsingDomain**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8b247786-caf0-4ef6-b898-a07fd13f6c7d">
            <name>const ParsingDomainRepository</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingDomainRepository_6B37F4A004B12A4113D51526D06BF8A1881556E4"/>
            </content>
        </type>
        <type derived="true" id="type.d751975f-a3da-44d9-9fb2-b052289d709a">
            <name>const ParsingDomainRepository&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingDomainRepository_6B37F4A004B12A4113D51526D06BF8A1881556E4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cf8975c0-1ddf-4b17-9929-d251b68d2e47">
            <name>const ParsingDomainRepository*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingDomainRepository_6B37F4A004B12A4113D51526D06BF8A1881556E4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e297f598-71a3-4090-a5e2-44266d249ee1">
            <name>const ParsingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
            </content>
        </type>
        <type derived="true" id="type.d8dbb9fe-d4b0-4829-b413-22af755cb4a2">
            <name>const ParsingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5efae0eb-2363-4bac-951b-466c48cedb35">
            <name>const ParsingException*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f61ed1ce-01f0-4c07-aa7c-cb6205d6d7e5">
            <name>const ParsingObject</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
            </content>
        </type>
        <type derived="true" id="type.b2992792-40ae-4471-b469-2eeb28ee8cbf">
            <name>const ParsingObject&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cde6fe77-8c5c-4d43-a1ca-5caeeb5cd331">
            <name>const ParsingObject*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5f76b73a-e6e9-4e1f-8bee-5ab26d707627">
            <name>const ParsingObject*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ParsingObject_7DEF54CB93890E63DE64B53AA974CF41FBA38B34"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6eada870-16a1-4c19-851e-c4359970e869">
            <name>const PositiveParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
            </content>
        </type>
        <type derived="true" id="type.7768bcd2-79c1-4e5b-a490-0811f8d05dfc">
            <name>const PositiveParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ec7e55e6-94cf-4e5d-b421-b835cb6ef882">
            <name>const PostCall&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8a8c3416-9875-44c1-989c-a914b658e94b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5ae89bc2-404d-4d45-b7be-48f765790f3b">
            <name>const PostfixDecrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
            </content>
        </type>
        <type derived="true" id="type.d3087738-b3f6-49e0-8ab0-984529378572">
            <name>const PostfixDecrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f18851a9-d60f-4cb7-b392-73b8f47d4749">
            <name>const PostfixIncrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
            </content>
        </type>
        <type derived="true" id="type.eff4335c-45bb-4e46-b5e8-02785312c50b">
            <name>const PostfixIncrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d6605f5b-0c6b-4b75-a34d-2fca84dc6416">
            <name>const PreCall&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="df57030a-b7b4-454f-a0e5-0b81e12f2266"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.86b55223-538b-43da-85ef-8d62144e5cff">
            <name>const PrefixDecrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
            </content>
        </type>
        <type derived="true" id="type.abc50f06-3ee6-431e-956a-4dcb4482b15d">
            <name>const PrefixDecrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.17525c9a-fa97-475a-bf79-6700b97a5cf0">
            <name>const PrefixIncrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
            </content>
        </type>
        <type derived="true" id="type.df9d3569-ecfa-4ce5-ad37-96dce7ae0693">
            <name>const PrefixIncrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.40959c69-d998-4f15-afbf-be961eac76a5">
            <name>const RandomAccessIter&lt;ActionParser*, ActionParser*&amp;, ActionParser**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6d051cb0-f19b-4e53-84b3-138ff3fce7a9"/>
            </content>
        </type>
        <type derived="true" id="type.8c89d311-bac9-4f4d-866e-a23e8519ca90">
            <name>const RandomAccessIter&lt;ActionParser*, ActionParser*&amp;, ActionParser**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6d051cb0-f19b-4e53-84b3-138ff3fce7a9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.163e7aa8-1e89-44bf-b535-41733cbcdcb4">
            <name>const RandomAccessIter&lt;ActionParser*, ActionParser*&amp;, ActionParser**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6d051cb0-f19b-4e53-84b3-138ff3fce7a9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.34b94fac-5f28-4974-9c73-99c7b84d7f22">
            <name>const RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c74152a8-30fd-4207-a351-4bf014ace742"/>
            </content>
        </type>
        <type derived="true" id="type.d6c8d132-4bd3-4b84-8d6a-04a9681083ee">
            <name>const RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c74152a8-30fd-4207-a351-4bf014ace742"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.db15ae8b-f1e5-49f1-8c00-c74a0950894f">
            <name>const RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c74152a8-30fd-4207-a351-4bf014ace742"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3bb6023b-3419-4744-96f9-3bc13a9567d4">
            <name>const RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.82f46afc-32b6-424f-928e-6e5374243848"/>
            </content>
        </type>
        <type derived="true" id="type.cff8c896-3a52-4dbb-ba85-e997d2e8d494">
            <name>const RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.82f46afc-32b6-424f-928e-6e5374243848"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dc64926c-b813-42fd-8808-77fe4511b462">
            <name>const RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.82f46afc-32b6-424f-928e-6e5374243848"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.67785aa3-b8c0-4b5e-af70-ba9794adb684">
            <name>const RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e2f742b4-2873-42f0-b1d9-54ab3520e850"/>
            </content>
        </type>
        <type derived="true" id="type.15d7f7c3-0ebc-4c48-8557-52c826033b24">
            <name>const RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e2f742b4-2873-42f0-b1d9-54ab3520e850"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1984f312-fd24-4d1d-ad14-25cd07446b86">
            <name>const RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e2f742b4-2873-42f0-b1d9-54ab3520e850"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9c9d68f8-09aa-4633-85d7-3c6e9e37a603">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.151cd66f-35fd-4ace-a1f8-a849eb95d59a"/>
            </content>
        </type>
        <type derived="true" id="type.07a886f3-73d5-43e7-9d4e-5b8c3849e7ae">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.151cd66f-35fd-4ace-a1f8-a849eb95d59a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3cede865-bba0-41af-a4de-8e5dd9a665fe">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.151cd66f-35fd-4ace-a1f8-a849eb95d59a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0b8b6038-b204-4188-8086-1e504ab20d07">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.67f3fcc3-3443-49bc-a0ca-df7e6f5fb409"/>
            </content>
        </type>
        <type derived="true" id="type.ab0d3c19-4568-43ea-a9a0-baa5b16ffeb2">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.67f3fcc3-3443-49bc-a0ca-df7e6f5fb409"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.683a9f12-e519-4631-aeef-838fbc14d0b1">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.67f3fcc3-3443-49bc-a0ca-df7e6f5fb409"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9b59b134-de57-4ef0-9a23-34d2e7f3d168">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ebd7f1cb-a697-4843-86c4-ea3a52e149e8"/>
            </content>
        </type>
        <type derived="true" id="type.1f3c2b9c-c07b-4392-bf7b-53ca90d96231">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ebd7f1cb-a697-4843-86c4-ea3a52e149e8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.663fa7b4-c35d-46b7-b9b5-77af95b62706">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ebd7f1cb-a697-4843-86c4-ea3a52e149e8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f2e8e0a3-3787-4995-8d01-0d182b70f79f">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.23d694ce-56fb-46f0-8012-10d5d0b3c73c"/>
            </content>
        </type>
        <type derived="true" id="type.24d65cd6-2234-4530-8b6f-556f558ee2d9">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.23d694ce-56fb-46f0-8012-10d5d0b3c73c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.54bd99bc-61ff-4e04-95d2-37ad3fee7eac">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.23d694ce-56fb-46f0-8012-10d5d0b3c73c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c2cf69e9-cc61-4b51-83c4-a9fbdad7a85f">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9df40d5c-c232-420b-8f36-96c45888a166"/>
            </content>
        </type>
        <type derived="true" id="type.3fc4732c-6282-4330-84b8-7c8e2f51e507">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9df40d5c-c232-420b-8f36-96c45888a166"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.06675db0-6c1e-4544-9ced-49b90895dfa1">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9df40d5c-c232-420b-8f36-96c45888a166"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1fac89a1-37d7-4e5a-99d3-1565aa6215cd">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.00fbeb23-a739-42c9-94e2-1a9f22d1e849"/>
            </content>
        </type>
        <type derived="true" id="type.74afe81a-6c5f-404e-a9d7-9e8f8cb95339">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.00fbeb23-a739-42c9-94e2-1a9f22d1e849"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4383d9aa-f64e-486c-a30a-5be2a4ea385c">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.00fbeb23-a739-42c9-94e2-1a9f22d1e849"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dc19757d-fe5e-4617-ab32-28acbd21b05e">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.912668f9-d62f-44e6-9519-3c8a48605d7d"/>
            </content>
        </type>
        <type derived="true" id="type.badb7063-3754-4355-bc25-da267c2c180e">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.912668f9-d62f-44e6-9519-3c8a48605d7d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.88c5e87a-785a-4673-ab92-9842d37915e3">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.912668f9-d62f-44e6-9519-3c8a48605d7d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.37f2d247-9d3a-4ac0-94d9-34b0be2f19df">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.fcd2f95b-b27f-4fc9-84c6-00383eb0f08c"/>
            </content>
        </type>
        <type derived="true" id="type.475fec1a-4544-44d3-8725-3b12c3b8268e">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.fcd2f95b-b27f-4fc9-84c6-00383eb0f08c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c0485440-b192-4f5f-abfa-4bec01de6110">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.fcd2f95b-b27f-4fc9-84c6-00383eb0f08c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.33aaf224-ab14-4895-9d46-51affeede00b">
            <name>const RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3deea8f5-f326-4b8a-81a4-3006628548e5"/>
            </content>
        </type>
        <type derived="true" id="type.6f521e92-da34-4df3-81cb-73c11ebdb866">
            <name>const RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3deea8f5-f326-4b8a-81a4-3006628548e5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f628d993-2868-4ed5-89fb-0684d9e49a89">
            <name>const RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3deea8f5-f326-4b8a-81a4-3006628548e5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.70968d72-10bc-4aa9-9ffa-6efa434fd871">
            <name>const RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f6a78a5f-22e7-4af9-ac13-4c9f51320f91"/>
            </content>
        </type>
        <type derived="true" id="type.ebe361bf-6a1d-4dd9-8d87-9f2909b60085">
            <name>const RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f6a78a5f-22e7-4af9-ac13-4c9f51320f91"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0cfe1c3a-ff5c-46e5-b740-ba7ae277cf71">
            <name>const RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f6a78a5f-22e7-4af9-ac13-4c9f51320f91"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90c280ce-83e6-4b80-9fc1-280bf8e9f82b">
            <name>const RandomAccessIter&lt;Namespace*, Namespace*&amp;, Namespace**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.bfa5530f-3ba1-4893-9418-4831e466b56f"/>
            </content>
        </type>
        <type derived="true" id="type.88ab6162-9cef-44ff-ad66-25c0817c6780">
            <name>const RandomAccessIter&lt;Namespace*, Namespace*&amp;, Namespace**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.bfa5530f-3ba1-4893-9418-4831e466b56f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5b734b8a-176f-45f1-8420-03ec08ebdff3">
            <name>const RandomAccessIter&lt;Namespace*, Namespace*&amp;, Namespace**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.bfa5530f-3ba1-4893-9418-4831e466b56f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e5354fa6-5a4e-4457-b892-283bb536145f">
            <name>const RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0e0a73a0-b6fa-468f-b269-3a1546ff9dda"/>
            </content>
        </type>
        <type derived="true" id="type.dc791863-43d4-4d04-a31f-8e3ceee7729d">
            <name>const RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0e0a73a0-b6fa-468f-b269-3a1546ff9dda"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a7a5bf18-3abd-4583-bc6a-f50f6d3c485b">
            <name>const RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0e0a73a0-b6fa-468f-b269-3a1546ff9dda"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bd9850ef-b20d-422d-9bd0-6f66fb8e068c">
            <name>const RandomAccessIter&lt;NonterminalParser*, NonterminalParser*&amp;, NonterminalParser**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ca3c9652-2b4f-417e-b7a5-673033e26e24"/>
            </content>
        </type>
        <type derived="true" id="type.8a133377-6784-40f1-913f-9788346c3b77">
            <name>const RandomAccessIter&lt;NonterminalParser*, NonterminalParser*&amp;, NonterminalParser**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ca3c9652-2b4f-417e-b7a5-673033e26e24"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a7ab8883-5278-4217-a462-d420702d0572">
            <name>const RandomAccessIter&lt;NonterminalParser*, NonterminalParser*&amp;, NonterminalParser**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ca3c9652-2b4f-417e-b7a5-673033e26e24"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d36e8300-02b4-47da-866f-7797ff7a0913">
            <name>const RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ed68a8ed-fd56-4054-ad9c-2067977463a1"/>
            </content>
        </type>
        <type derived="true" id="type.7c7bcdfc-67b1-4355-916e-720c15274c7b">
            <name>const RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ed68a8ed-fd56-4054-ad9c-2067977463a1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c2e92a17-df59-494c-8c13-aa4879c2387a">
            <name>const RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ed68a8ed-fd56-4054-ad9c-2067977463a1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5df281ab-0b1b-4abe-a4f1-05bec88ec32e">
            <name>const RandomAccessIter&lt;RuleLink*, RuleLink*&amp;, RuleLink**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5e1dd887-81c3-47af-a591-2a7a7e6d9f6b"/>
            </content>
        </type>
        <type derived="true" id="type.46e0a6f8-9791-49fb-91f6-8b98fcdece07">
            <name>const RandomAccessIter&lt;RuleLink*, RuleLink*&amp;, RuleLink**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5e1dd887-81c3-47af-a591-2a7a7e6d9f6b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9ca33484-98cb-4085-9063-6e2f25addc9e">
            <name>const RandomAccessIter&lt;RuleLink*, RuleLink*&amp;, RuleLink**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5e1dd887-81c3-47af-a591-2a7a7e6d9f6b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2f8d55f7-214f-450d-a5e7-f342a46d6238">
            <name>const RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1967697f-8722-48fe-bb20-cbf650ed0a76"/>
            </content>
        </type>
        <type derived="true" id="type.5c5ea291-5b2a-4aeb-8166-85d953b4971a">
            <name>const RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1967697f-8722-48fe-bb20-cbf650ed0a76"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.244a99be-8802-48a0-8846-d2465321496c">
            <name>const RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1967697f-8722-48fe-bb20-cbf650ed0a76"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6ee83c23-4b94-42d1-96a5-bc14f5d8ddcf">
            <name>const RandomAccessIter&lt;RuleParser*, RuleParser*&amp;, RuleParser**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d6ecdb60-0d82-4ada-b610-f227765796e5"/>
            </content>
        </type>
        <type derived="true" id="type.9ee583dc-73dd-44f1-b950-604f78bf3e36">
            <name>const RandomAccessIter&lt;RuleParser*, RuleParser*&amp;, RuleParser**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d6ecdb60-0d82-4ada-b610-f227765796e5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c9865f94-9423-4e53-b416-f5573a243be4">
            <name>const RandomAccessIter&lt;RuleParser*, RuleParser*&amp;, RuleParser**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d6ecdb60-0d82-4ada-b610-f227765796e5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e02cd718-4755-45e9-9ad7-0b529a8a63b4">
            <name>const RandomAccessIter&lt;RuleParser*, const RuleParser*&amp;, const RuleParser**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6a622339-99f6-4240-b38a-a55c06a27dd2"/>
            </content>
        </type>
        <type derived="true" id="type.e16c6481-f049-4845-b6d3-46124f58f86c">
            <name>const RandomAccessIter&lt;RuleParser*, const RuleParser*&amp;, const RuleParser**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6a622339-99f6-4240-b38a-a55c06a27dd2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2fa102b1-6867-471f-8d2c-9d07d522a9bf">
            <name>const RandomAccessIter&lt;RuleParser*, const RuleParser*&amp;, const RuleParser**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6a622339-99f6-4240-b38a-a55c06a27dd2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ef5ec972-6243-4b7d-98a8-89917b8b3d45">
            <name>const RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, AttrOrVar&amp;, AttrOrVar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.deca1b1e-f47b-44db-862f-16718b02f771"/>
            </content>
        </type>
        <type derived="true" id="type.e6177bef-8d9e-4743-8705-331d5365d36e">
            <name>const RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, AttrOrVar&amp;, AttrOrVar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.deca1b1e-f47b-44db-862f-16718b02f771"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.67f6d991-75b6-4765-9ee4-1f27c733e022">
            <name>const RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, AttrOrVar&amp;, AttrOrVar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.deca1b1e-f47b-44db-862f-16718b02f771"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ca20360a-36b8-45de-bb53-55b2b2bf0d08">
            <name>const RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f6e44b60-965e-4e58-8b87-7f9c7fa5fedc"/>
            </content>
        </type>
        <type derived="true" id="type.240eadf1-8904-4af0-ab20-0f342a91ed3a">
            <name>const RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f6e44b60-965e-4e58-8b87-7f9c7fa5fedc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.69cd5e75-38b4-45c7-9538-ef202ecbcc72">
            <name>const RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f6e44b60-965e-4e58-8b87-7f9c7fa5fedc"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5b22ee95-f4a2-44ee-a4c1-f10dd3662dd9">
            <name>const RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a4951cbd-a157-474c-9eaf-083306800340"/>
            </content>
        </type>
        <type derived="true" id="type.a6b61a0a-8318-4a02-9147-265f7d02d9a7">
            <name>const RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a4951cbd-a157-474c-9eaf-083306800340"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5264ce36-970f-4eb6-b0b6-d9211dc60c4a">
            <name>const RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a4951cbd-a157-474c-9eaf-083306800340"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.25042147-7716-42d5-8f30-8dc14c19321f">
            <name>const RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.84a4a50d-172e-496c-b4aa-d27478831faa"/>
            </content>
        </type>
        <type derived="true" id="type.123f06f8-63a7-4bc5-bd8c-1e5f06c6366f">
            <name>const RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.84a4a50d-172e-496c-b4aa-d27478831faa"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.318935c9-3569-4ce9-a79e-6e014fe20e90">
            <name>const RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.84a4a50d-172e-496c-b4aa-d27478831faa"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.17a8ebe6-896e-4ac4-9156-8c5d881db3f7">
            <name>const RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.64a46a18-9a67-4d71-b585-8d13941cc45b"/>
            </content>
        </type>
        <type derived="true" id="type.cfc7eaf5-b3c1-46a7-ae28-69a6d3d75d30">
            <name>const RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.64a46a18-9a67-4d71-b585-8d13941cc45b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.124242df-18d1-427b-b599-1d164bd69671">
            <name>const RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.64a46a18-9a67-4d71-b585-8d13941cc45b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4175d3b3-cd88-424e-b06e-aa108be2487d">
            <name>const RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0acdf257-6c35-4191-b5eb-e1f1b96fa907"/>
            </content>
        </type>
        <type derived="true" id="type.4f87de26-26d7-4454-8b64-a616abba9e18">
            <name>const RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0acdf257-6c35-4191-b5eb-e1f1b96fa907"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b738411b-5d28-4e85-a50d-845fe08c0290">
            <name>const RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0acdf257-6c35-4191-b5eb-e1f1b96fa907"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3f03ebc6-68af-496c-b960-fb0ecff2ab4b">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, UniquePtr&lt;System.Text.Parsing.Context>&amp;, UniquePtr&lt;System.Text.Parsing.Context>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6097fd94-5088-4897-8792-5cbf8de06963"/>
            </content>
        </type>
        <type derived="true" id="type.84c0479f-c588-4a78-ba8e-d07d829e86c7">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, UniquePtr&lt;System.Text.Parsing.Context>&amp;, UniquePtr&lt;System.Text.Parsing.Context>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6097fd94-5088-4897-8792-5cbf8de06963"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2084f053-df17-40a3-aa82-802ad6b84fd4">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, UniquePtr&lt;System.Text.Parsing.Context>&amp;, UniquePtr&lt;System.Text.Parsing.Context>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6097fd94-5088-4897-8792-5cbf8de06963"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.66449585-b4c6-4f98-ad88-7bd66e3897f8">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.448808a4-4db0-4a8b-be96-69c5dfda024f"/>
            </content>
        </type>
        <type derived="true" id="type.84c31215-50d2-4de4-b70e-d890b0cd6b6e">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.448808a4-4db0-4a8b-be96-69c5dfda024f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c8e7deb8-b140-4882-9515-149c2d010e30">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.448808a4-4db0-4a8b-be96-69c5dfda024f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1f2624d5-cb23-496d-9828-5fab88ae8e9e">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, UniquePtr&lt;System.Text.Parsing.Object>&amp;, UniquePtr&lt;System.Text.Parsing.Object>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9ec402d5-6f32-4bd7-b48d-e1354fcd46f4"/>
            </content>
        </type>
        <type derived="true" id="type.a0e89d59-9f0c-4cdc-b7e5-dbf57c2cb4b1">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, UniquePtr&lt;System.Text.Parsing.Object>&amp;, UniquePtr&lt;System.Text.Parsing.Object>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9ec402d5-6f32-4bd7-b48d-e1354fcd46f4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.41b7cd37-afe9-4d90-9ab5-3957892543c7">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, UniquePtr&lt;System.Text.Parsing.Object>&amp;, UniquePtr&lt;System.Text.Parsing.Object>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9ec402d5-6f32-4bd7-b48d-e1354fcd46f4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f295fc25-6e38-414b-8833-64c74d2eb9a1">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.848d2abc-4a99-4533-be95-5f53b5890a62"/>
            </content>
        </type>
        <type derived="true" id="type.5c1ee779-6daa-428c-8809-95f9f634464a">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.848d2abc-4a99-4533-be95-5f53b5890a62"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c4da1a70-a424-4423-983c-04f2a9588252">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.848d2abc-4a99-4533-be95-5f53b5890a62"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d3eba58f-635e-4a2b-9755-59940738c10a">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.83a0c706-e8a0-4161-a9af-48a3e2e68c5e"/>
            </content>
        </type>
        <type derived="true" id="type.b21d577c-680b-47f1-abf6-7968f1d306c3">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.83a0c706-e8a0-4161-a9af-48a3e2e68c5e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4d583a8a-f876-4a51-aae2-38d79d9125ee">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.83a0c706-e8a0-4161-a9af-48a3e2e68c5e"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.01db86a8-3756-4267-ac36-426fb46fcee9">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6dca435d-771a-4ccb-9489-6e05fc497cfc"/>
            </content>
        </type>
        <type derived="true" id="type.a9384200-11d8-4480-9d56-fedfe83f14c2">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6dca435d-771a-4ccb-9489-6e05fc497cfc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.abfbdfe7-ac0b-45e5-ad7e-26619ecb3533">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6dca435d-771a-4ccb-9489-6e05fc497cfc"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3d5d8e4e-4518-48cb-8bc1-d187dfea261d">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d48772dd-0677-4d42-b880-cca36b834b60"/>
            </content>
        </type>
        <type derived="true" id="type.1863918d-5698-4af7-bf88-c2c3853c817e">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d48772dd-0677-4d42-b880-cca36b834b60"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.62ec083a-dadb-4299-8926-b591560dddba">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d48772dd-0677-4d42-b880-cca36b834b60"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1c2700d8-b79c-4ccf-a258-04d9015b4a4a">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d9067360-f960-4c51-bfea-8ca9721ecc62"/>
            </content>
        </type>
        <type derived="true" id="type.1cca0c56-beac-418a-9295-c8c566d30ffa">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d9067360-f960-4c51-bfea-8ca9721ecc62"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9d3467ee-d4cc-4ed9-b051-8032c383bdd6">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d9067360-f960-4c51-bfea-8ca9721ecc62"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9921b03a-4120-44ed-b9c6-8637b1f573f6">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.962ef60c-9f91-4590-b241-44236946549f"/>
            </content>
        </type>
        <type derived="true" id="type.7d5d24b3-ca9d-4dac-9b4a-9e0307c3b45b">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4979c8f5-01b7-4a5e-83d8-6644711b77f7"/>
            </content>
        </type>
        <type derived="true" id="type.26b63247-ec33-47ea-b308-7601180fb306">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.962ef60c-9f91-4590-b241-44236946549f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.87f69810-792c-412f-8beb-7271ac65d182">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4979c8f5-01b7-4a5e-83d8-6644711b77f7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bd0662d1-4860-4a45-9b11-c64df57f19ed">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.962ef60c-9f91-4590-b241-44236946549f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3c5f3149-08d7-408c-9e08-adbae3a6ccb7">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4979c8f5-01b7-4a5e-83d8-6644711b77f7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c0caf375-4b0f-4045-9782-49661a5ead40">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08dae469-1cb0-4cb2-8968-9a454275a84c"/>
            </content>
        </type>
        <type derived="true" id="type.1367b0fe-6ac3-4095-8255-eab5d9862ecd">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d6d0778b-3d31-46bd-955a-f524f74afab3"/>
            </content>
        </type>
        <type derived="true" id="type.38b0c79f-1540-4eb9-abcb-de229389b47b">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08dae469-1cb0-4cb2-8968-9a454275a84c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5ffb35cc-efcd-442a-972d-e55583d55c98">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d6d0778b-3d31-46bd-955a-f524f74afab3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f69c231b-f048-47a2-9c8f-ca19771dab36">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08dae469-1cb0-4cb2-8968-9a454275a84c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5789b66b-6f6a-4248-8a37-47b57777202f">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d6d0778b-3d31-46bd-955a-f524f74afab3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8fa6b8c4-63b9-4f7d-a5bf-247f62dfafb3">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3925540b-76bd-4c0a-b32c-6ca40363ee87"/>
            </content>
        </type>
        <type derived="true" id="type.060ecd8a-1713-44a3-829e-7e5d7982a57d">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f3b9f26d-281b-49b4-8ed6-80d32d026901"/>
            </content>
        </type>
        <type derived="true" id="type.8fa6b8c4-63b9-4f7d-a5bf-247f62dfafb3">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3925540b-76bd-4c0a-b32c-6ca40363ee87"/>
            </content>
        </type>
        <type derived="true" id="type.e17205f6-49d3-4901-b5e5-d4b1a1f85a5c">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3925540b-76bd-4c0a-b32c-6ca40363ee87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e890b06e-0acc-4337-b505-9be48854a968">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f3b9f26d-281b-49b4-8ed6-80d32d026901"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e17205f6-49d3-4901-b5e5-d4b1a1f85a5c">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3925540b-76bd-4c0a-b32c-6ca40363ee87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.59628b77-dda1-42f6-9f5e-1c7b852ef91e">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3925540b-76bd-4c0a-b32c-6ca40363ee87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4e4a9797-ada8-4c8a-a8a8-9ed80fbf6366">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f3b9f26d-281b-49b4-8ed6-80d32d026901"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b42b5bc4-6668-485a-b863-5327d141aad9">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.734c263d-5c08-4674-bf78-59a352e9bf4b"/>
            </content>
        </type>
        <type derived="true" id="type.6f152fb1-8683-455b-9753-09ff28a97d18">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.74ff6975-b537-4ba9-ac63-9854bb0ee102"/>
            </content>
        </type>
        <type derived="true" id="type.51db3403-1c2f-4a0a-b4df-f9d4fbfd7082">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.74ff6975-b537-4ba9-ac63-9854bb0ee102"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8a435f97-1416-4692-88ca-12d720f7414b">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.734c263d-5c08-4674-bf78-59a352e9bf4b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7efe69db-0034-4e25-8a1e-bf64169bc975">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.74ff6975-b537-4ba9-ac63-9854bb0ee102"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b55cc9b8-2c37-41a9-99fd-24058455bcce">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.734c263d-5c08-4674-bf78-59a352e9bf4b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.271ea9e5-62ab-4548-9d05-9a4c510a44b3">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0cd2271a-5038-4157-9d7e-bef66413589b"/>
            </content>
        </type>
        <type derived="true" id="type.210d7378-7b7e-4e03-8c75-2e10303d2332">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.85dc008f-a9d7-45ad-9d72-7df4009b23c4"/>
            </content>
        </type>
        <type derived="true" id="type.fc29e2df-f00f-42cc-98d6-be59d7da7913">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.85dc008f-a9d7-45ad-9d72-7df4009b23c4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7aae0e9a-a095-4d85-91f3-ecb78d31aaae">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0cd2271a-5038-4157-9d7e-bef66413589b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.550b4c0e-cb5d-48bb-b14e-75ef71d2a8f7">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.85dc008f-a9d7-45ad-9d72-7df4009b23c4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.22eb0bc9-c561-4968-be3d-dce4c38e51b0">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0cd2271a-5038-4157-9d7e-bef66413589b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.950e05b3-ceb3-475f-8038-7d01e805dda7">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5d8b780b-7629-4dd2-a3cc-2698ecedbf23"/>
            </content>
        </type>
        <type derived="true" id="type.15dd4274-0498-4779-9a66-b0de26b445a2">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.90c583c2-24d7-4918-a052-1e088d599ad6"/>
            </content>
        </type>
        <type derived="true" id="type.950e05b3-ceb3-475f-8038-7d01e805dda7">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5d8b780b-7629-4dd2-a3cc-2698ecedbf23"/>
            </content>
        </type>
        <type derived="true" id="type.e576c431-1978-4a3c-940e-e41772f89ac0">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5d8b780b-7629-4dd2-a3cc-2698ecedbf23"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0454fd2b-da78-46bc-bba5-1ad7a773dfaf">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.90c583c2-24d7-4918-a052-1e088d599ad6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ad0cc54b-6502-41a7-88c6-24edbf425437">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5d8b780b-7629-4dd2-a3cc-2698ecedbf23"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9fae38cf-b906-49ec-907b-3d14e7e89464">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.90c583c2-24d7-4918-a052-1e088d599ad6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bc75b263-9234-49ae-b4c3-8bfeb3d4d367">
            <name>const RangeParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RangeParser_A1D22AC11434C18DF491491487AA4116C3494013"/>
            </content>
        </type>
        <type derived="true" id="type.c2057dfc-c17f-4403-8cbe-c3af436bd0b7">
            <name>const RangeParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RangeParser_A1D22AC11434C18DF491491487AA4116C3494013"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2c53f53d-3e38-479a-8baf-6d6987880675">
            <name>const RangeParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RangeParser_A1D22AC11434C18DF491491487AA4116C3494013"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9538bc05-cc90-4fef-ae3a-f8577bd25678">
            <name>const RecursiveMutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RecursiveMutex_B9ED5479754BBDDED6A4491348BBD2F20F701D82"/>
            </content>
        </type>
        <type derived="true" id="type.7e103bed-3bd0-4cdc-ab6c-2ff502df009f">
            <name>const Rel&lt;Grammar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e46fb9a3-9c76-4992-ae78-2f75ee45178a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ebd26c79-6036-4662-971b-f000fd5edffb">
            <name>const Rel&lt;String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.82611156-2d60-4374-91f7-8434f424fcc0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1359a640-2434-4b13-a24a-2266e3afdd39">
            <name>const ReturnStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
            </content>
        </type>
        <type derived="true" id="type.69184072-4fef-495e-b3b8-fffecc64f2da">
            <name>const ReturnStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.10f05501-8afd-4b7a-ba12-b6f6ce879643">
            <name>const RuleData</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
            </content>
        </type>
        <type derived="true" id="type.5edd640a-343c-465f-98dd-8151e56c0518">
            <name>const RuleData&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7b6385ad-33e3-46d4-8571-88f0f9b3fe07">
            <name>const RuleData*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1d5df224-9808-4298-b406-7aae2fd054f0">
            <name>const RuleLink</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
            </content>
        </type>
        <type derived="true" id="type.20a278d0-c2f4-4d85-93a7-93d311ff6f62">
            <name>const RuleLink&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0b37c5aa-054f-42f3-a1a5-c7b846a00d85">
            <name>const RuleLink*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2ca5b171-48d2-4f62-b16c-3108d0c5ea9d">
            <name>const RuleLink*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bff13346-ee9c-4e30-b68a-9498225af72e">
            <name>const RuleLink**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleLink_64A59FA646EBEB538A1C8CDCB851A771077C2702"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.80045dcf-b436-47be-97f6-f44e4c61ccc2">
            <name>const RuleParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
            </content>
        </type>
        <type derived="true" id="type.40c73bd7-c9cb-45dd-b40c-1e24cb0140a5">
            <name>const RuleParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a6bfbb8e-ef70-4d8d-8bdc-c78540a24a96">
            <name>const RuleParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.78d1b41f-54a4-4e35-a33e-0fdd12f3d9d5">
            <name>const RuleParser*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee662fe2-645e-4eb8-bc1e-194cd62092ce">
            <name>const RuleParser**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5cf84eb6-26a2-46df-996a-58c83ae4f75a">
            <name>const RuleParser**&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a5b3f806-fdc6-42ab-b5e8-71a3be3276c3">
            <name>const RuleParser**&amp;&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ae7f69af-b0a4-4bf6-94da-bd9c8fbad7d0">
            <name>const RuleParser***</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RuleParser_88E602BC11B27BF33746B36B66E0A7961C3B3969"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2ade2069-9cdd-4f18-b38b-a23ebe063321">
            <name>const Scanner</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A"/>
            </content>
        </type>
        <type derived="true" id="type.b7efc09b-7e20-45d2-9f67-cf7961cbc67f">
            <name>const Scanner&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9ecc83ea-58ab-440c-b96b-207f02c31e80">
            <name>const Scanner*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6a173c5a-ba69-45e8-a36c-71e117931a4a">
            <name>const Scanner*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1c33cc82-b238-4413-9cba-2c7d609feb45">
            <name>const Scanner**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Scanner_E451B5D34DF80FB1309D09594F1750F137F6CF5A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.07ed5b2e-6030-4f3a-b089-9c0f353731ff">
            <name>const Scope</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021"/>
            </content>
        </type>
        <type derived="true" id="type.1403e1f1-f340-48e0-b3dd-9bd7e45152d6">
            <name>const Scope&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.19fc43f9-b771-4aba-bdd5-dad9db36ea1c">
            <name>const Scope*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1e77faf6-d7a0-49a5-919e-bbf016b5aa1e">
            <name>const Scope*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6b8c58df-3d02-4a22-8996-051c858a4af2">
            <name>const Scope**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Scope_AA7DC7FA33AF6D4CD76B37C2ACB091BF3E8BD021"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.47d7a0a6-82ba-48d7-b11b-d337fd229bdd">
            <name>const SelectFirst&lt;String&lt;uchar>, Grammar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
            </content>
        </type>
        <type derived="true" id="type.420f3079-cae4-4686-b901-5784092b9d75">
            <name>const SelectFirst&lt;String&lt;uchar>, Grammar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b97aa338-5d91-4366-915d-44ed642efc59">
            <name>const SelectFirst&lt;String&lt;uchar>, Grammar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e855d4c8-c585-4233-ac6c-f31865f95517">
            <name>const SelectFirst&lt;String&lt;uchar>, Grammar*>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a15a198f-b659-4b1b-bfbc-42a3ee121527">
            <name>const SelectFirst&lt;String&lt;uchar>, Grammar*>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.168b5d2d-2332-461b-9019-32680f46e467"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9df8004a-cddf-4b55-a62c-5c61f6bdc351">
            <name>const SelectFirst&lt;String&lt;uchar>, Namespace*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
            </content>
        </type>
        <type derived="true" id="type.af8f4826-aad3-41fb-8b3a-5f699c758768">
            <name>const SelectFirst&lt;String&lt;uchar>, Namespace*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9d711b3b-1a4c-49cb-8141-a1b20326cc57">
            <name>const SelectFirst&lt;String&lt;uchar>, Namespace*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fec9e370-bdfe-464b-a0d9-084365ab8baf">
            <name>const SelectFirst&lt;String&lt;uchar>, Namespace*>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.baf6cb7c-5640-4865-bb5e-0838a67a948f">
            <name>const SelectFirst&lt;String&lt;uchar>, Namespace*>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.647a58dd-fc83-4b3b-ae3a-e2216dff9f4c"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ec234b59-621e-4a77-a3cd-37698c74aca1">
            <name>const SelectFirst&lt;String&lt;uchar>, ParsingObject*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
            </content>
        </type>
        <type derived="true" id="type.3c78703a-9f90-4e8e-928f-8d92a0ef2aa1">
            <name>const SelectFirst&lt;String&lt;uchar>, ParsingObject*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1d0b9d38-58bd-403f-b5b4-21ce8fcf8e30">
            <name>const SelectFirst&lt;String&lt;uchar>, ParsingObject*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.363ea7ff-5c43-4e95-a369-5acfb3230b47">
            <name>const SelectFirst&lt;String&lt;uchar>, ParsingObject*>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2dda35df-92eb-4c91-bb6a-8b39ddfeb968">
            <name>const SelectFirst&lt;String&lt;uchar>, ParsingObject*>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f7bd85c3-268b-4fb3-850a-254c5af7a2ac"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8d9bd214-b8ea-4a7c-9d7a-729807a8cd9f">
            <name>const SelectFirst&lt;String&lt;uchar>, String&lt;uchar>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
            </content>
        </type>
        <type derived="true" id="type.40594ec9-e694-4386-bbd5-45b39b99cf81">
            <name>const SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d2fd866f-3adf-4b72-b375-8b8fdd2a2016">
            <name>const SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.83a98655-e09c-4c04-861d-f3629ee75f39">
            <name>const SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d8995955-70a4-416e-abb2-54b8d16cda82">
            <name>const SelectFirst&lt;String&lt;uchar>, String&lt;uchar>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.43b66fef-0570-4fce-a804-1a8b6e883860"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.24b198bc-2d62-4b74-99d7-47c069cef165">
            <name>const SizeOf</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
            </content>
        </type>
        <type derived="true" id="type.ff8c4c86-49f5-44b9-bdc8-a6dcf76452fe">
            <name>const SizeOf&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cee35923-a9d8-44ff-af16-19f6ed16e0b0">
            <name>const Span</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Span_342F797681C8A26247E86213AFC9204FEF17D2A5"/>
            </content>
        </type>
        <type derived="true" id="type.062e9748-df59-4692-8baf-2747f21fc97c">
            <name>const Span&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Span_342F797681C8A26247E86213AFC9204FEF17D2A5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3eac52f8-454f-4158-ae8d-956af141dbb4">
            <name>const Span*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Span_342F797681C8A26247E86213AFC9204FEF17D2A5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.03aad3c5-e47a-4b8d-9c8b-ee5c824b1f40">
            <name>const Stack&lt;Namespace*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.445522d3-ec4a-4dda-9b4b-205687e8a1bf"/>
            </content>
        </type>
        <type derived="true" id="type.5c8ff5bf-115b-40ea-b139-6738084df8dc">
            <name>const Stack&lt;Namespace*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.445522d3-ec4a-4dda-9b4b-205687e8a1bf"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b3976679-70e0-4679-a1a5-061d55db0e5e">
            <name>const Stack&lt;Namespace*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.445522d3-ec4a-4dda-9b4b-205687e8a1bf"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7c5f3cbf-545a-4eaf-a6cf-e3f06d0c596b">
            <name>const Stack&lt;UniquePtr&lt;System.Text.Parsing.Context>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.952314bc-bcfc-40a6-8385-36f2913d2e53"/>
            </content>
        </type>
        <type derived="true" id="type.f8de74e0-46d0-4df3-b698-cac9f53b5a66">
            <name>const Stack&lt;UniquePtr&lt;System.Text.Parsing.Context>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.952314bc-bcfc-40a6-8385-36f2913d2e53"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f96ce962-63a3-48fb-87b7-219fbfbd1550">
            <name>const Stack&lt;UniquePtr&lt;System.Text.Parsing.Context>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.952314bc-bcfc-40a6-8385-36f2913d2e53"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0723aaf4-708a-4666-8fea-6c02f1f83e74">
            <name>const Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.551bfaf0-5d8e-4838-b7e2-c779406b266f"/>
            </content>
        </type>
        <type derived="true" id="type.4415b593-7370-4711-a974-54b9f7bc70ab">
            <name>const Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.551bfaf0-5d8e-4838-b7e2-c779406b266f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f1e4b1ec-ae7c-4373-9740-b853a5dd2af9">
            <name>const Stack&lt;UniquePtr&lt;System.Text.Parsing.Object>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.551bfaf0-5d8e-4838-b7e2-c779406b266f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0b9dd243-8396-4064-b7ce-67ee06de8fb8">
            <name>const StaticInitCriticalSection</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
            </content>
        </type>
        <type derived="true" id="type.57036177-2797-43d0-ab19-f3fe5e6d4c6e">
            <name>const StaticInitCriticalSection&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.657024cc-714d-4945-b142-bd0456b134f1">
            <name>const StreamWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
            </content>
        </type>
        <type derived="true" id="type.1350ea25-f7ab-43d2-befd-275b8bf20009">
            <name>const String&lt;char>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a08e7b96-65b1-4902-bc7e-40a22e01d134"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d">
            <name>const String&lt;uchar>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0b4ccc59-a858-4693-80b5-d810cdd3010e">
            <name>const String&lt;uchar>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a43d737e-f9e7-4fe5-b86b-3e82801f2cfd">
            <name>const String&lt;uchar>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5c98af22-8a4f-4350-b1fb-95ef4eedac78">
            <name>const String&lt;uchar>*&amp;&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.34c17556-1f96-4a50-a01d-f9e1283a824f">
            <name>const String&lt;uchar>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5e80c223-5d0c-4e07-8dda-5127f81daf6e">
            <name>const StringParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StringParser_765B96F3702C707FA03EC3AFF074BEF47356D039"/>
            </content>
        </type>
        <type derived="true" id="type.8f9188ca-ec1c-490f-8a3b-1a14b92eace9">
            <name>const StringParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StringParser_765B96F3702C707FA03EC3AFF074BEF47356D039"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.30e3ea70-5ee8-4f88-ae73-d7dc1138dc54">
            <name>const StringParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StringParser_765B96F3702C707FA03EC3AFF074BEF47356D039"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.769100e6-ac9b-484b-b846-6182e0997961">
            <name>const SwitchStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
            </content>
        </type>
        <type derived="true" id="type.3ac4b561-8974-4868-bfef-eef4813db81b">
            <name>const SwitchStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.40c53192-22c1-4293-9ca9-9e3143fb2ad8">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6055854f-16ac-458b-b4dc-30b2df5a8e60"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2ac0ba23-39b5-4b0c-8d58-d39edd6fcc1d">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="833b2f36-2e58-4fa6-8c92-f19ab25a653a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f8023d4a-1df5-4c2c-8a32-d998c08b27ae">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="a65c6b3d-ee9a-4446-95d4-758d9d8f02c2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.26516372-1ebf-4a46-9920-3449b9962ff4">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5967e25e-79d2-439b-a3a0-9930652e215a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d7e892a4-7b42-472c-a264-c1d1e96ff5cb">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="3ac734e9-a10d-496b-bd23-4853e956769f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.87a67397-f40b-4533-90b1-7a1c0d996575">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="f5df275e-3607-4d99-9cb3-b5290804a9e0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e4ee943f-057f-4b60-bdf5-04be90382162">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="0754a3bf-a476-45db-b4da-8fb6ee84cc84"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b6cbc79f-365a-46d9-9f9c-59e1b212191b">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="85bf9672-2627-413a-bf4e-bddb675ec273"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.27072e66-a549-4aa1-8b48-10efcae5fee9">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="3d0b5491-afcc-48ba-8dfb-77332056c1b4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c76a87e9-cd80-499b-af2c-928d7f076f50">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="219bd7eb-9c4b-4a97-828c-efb15376e977"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0192558c-3f5f-4b55-9b4b-d24c02b395ef">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="f0765ab0-8d89-4584-8907-36fd630c3367"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.10e06601-0448-4194-b6dd-f1cf2ffb0b35">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="44d71f6d-e4f6-475c-b58f-d89b068d5bf3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.899ce403-1799-4968-93d2-62ba6535683b">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="170940f2-876b-462a-af93-f8878fb19cf2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.272b781c-63a8-4338-acbc-db4e53ea81d9">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="33a91f8e-263f-49e1-bc10-3c2a8a5e5399"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.53895dcc-39e3-45fd-827e-57bf97559252">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="14936fad-cf2b-477c-aa67-34fc3a7882a9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cd2f1d43-b295-4c7b-a568-c09ea7fd79d4">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="20633026-c0a8-4b24-9dc6-d486d2e2256e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e62c036c-16eb-48ad-b035-a7a9c86ca5df">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="f846f81e-739b-49fb-9adb-24545c766872"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e6bc4479-3c22-49b0-ac1f-0cc187518abf">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5b18b5f1-f8c5-46de-b64d-556ef0159d32"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.823eec2a-a4bd-4cc2-b41d-6793f5271847">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6882e0a4-757d-420a-b465-d5ec018d0fe3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2fdf8ab8-7e59-44ac-ba85-8a8e236dd836">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9a77ada7-c248-4150-9bcd-e5810412f40b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d70fbb0f-344b-4f01-8f81-774e07d7d599">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="2f31c27f-d4ce-45bb-91f9-d668a550cbb8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6e6cafdd-dd22-4c58-9372-54ef963b3b47">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="50f64cf5-ba7a-4d34-9921-f2917f225ed7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.729d3750-37a0-4ec7-b74e-1a2a628917f6">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="09d38e2d-e22e-4712-ae83-a56ac69a3ce6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c2353437-df64-4cd6-a10e-a5183b6edf9d">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="75ba4e61-3ce3-4247-bf0c-37e5522b89a8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.00c997d2-e843-48f7-9d70-bc2a9ebfb033">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4919c330-2bbb-43cd-9536-655e3c0e8fa4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.444bc055-08ce-4a8a-916f-fc691013e46e">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="74710b2b-66cb-4f20-bf52-0ea6947d4262"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.69c269bc-8fd8-4d7e-af5f-d0d14394b414">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="98b663c5-1acb-4d86-96ae-1bf01de0239e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.17c73eef-f80a-4de4-baa7-d3f26e49a35e">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="ac193b61-68b8-4d49-abe7-6ca527549cb3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2f498ccf-0d2e-419e-a12c-9cdec2354fa0">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="f8df4bb1-cb52-493c-a10c-9400e586bf24"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2edaee04-5809-42ac-ad72-e417414f2e8a">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6ba050cf-eeab-4616-9121-9bb0820f2379"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d750525f-183d-4e88-b68c-da4c38516ca7">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6d887db8-b14e-4678-b516-00dd68e3bb9b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c9bcbf1f-2b2f-4583-b3c6-05fa8a798726">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="2ab78ede-e9b6-4c42-9582-4c5a6d468beb"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dd7d6519-71ef-45c6-bb6f-be4a528a2aaf">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="489e6bbb-e7c6-4a83-8cad-0c591523ab3f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8a1bf289-1eee-4977-a708-26f19a73e173">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="aac984e1-75be-479a-94e0-f8d1ffd56bdd"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1e20d5f0-12a0-4183-bffc-584d8e32c1af">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6b6a5a2b-bdb6-4613-9b9b-78e345d5e357"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e2b82946-664d-40b3-bf1d-e2d0267be57c">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8ec1da02-cc99-4716-96f3-a26861c18cd9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8c76da5a-57e1-490e-b8a6-2ed1add5a1bd">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9898e993-28d3-4752-bc1f-38f6e07f4453"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d504d579-5a31-44e2-acde-5dcf004051de">
            <name>const ThreadingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
            </content>
        </type>
        <type derived="true" id="type.d4ea9d25-f0dc-4148-b38e-300307b8413e">
            <name>const ThreadingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.75be705b-fbc0-46b6-857a-731dc44f7207">
            <name>const ThrowStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
            </content>
        </type>
        <type derived="true" id="type.b2bb14d5-f32c-418b-94f9-b7c9bbae8081">
            <name>const ThrowStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e6c17637-a77b-44a8-8459-cbca1be75e61">
            <name>const TokenParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
            </content>
        </type>
        <type derived="true" id="type.9a5fd30b-4b0e-4abb-a108-04ea6a9c4bbf">
            <name>const TokenParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1fdf59ca-d3c8-4947-a639-4b99937d58ee">
            <name>const TryStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
            </content>
        </type>
        <type derived="true" id="type.8c647698-a632-48df-a720-0c5e2bf78522">
            <name>const TryStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7c5201a5-b3d1-4c67-9f79-ab4744c043ea">
            <name>const Type</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
            </content>
        </type>
        <type derived="true" id="type.9d80374b-82f8-4150-a701-94f0854f2140">
            <name>const Type&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1ec3bd26-e233-4b9b-a7d6-ae229b89caf6">
            <name>const TypeName</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
            </content>
        </type>
        <type derived="true" id="type.0d3c6098-049f-44f4-8b77-67c7b75d8c56">
            <name>const TypeName&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fecc23a0-6d71-4e27-889a-8a4f4d581ee9">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="0a93011d-78f1-4c36-952a-d805e820c153"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8a05a937-560f-4a18-8076-d4ebf5f68545">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="de9a98a1-e2ac-4f15-b777-187e22096ebd"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.22b81044-2e04-42a1-9630-90b2e5b81b59">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="2df605e5-b653-4b8e-ae34-764906a561f9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.57bd71eb-9343-4483-9015-ae59b0d69205">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5b598b4e-706a-400b-ac2f-6299b3dcb323"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2cc8a394-edd5-4e5c-a65d-316faa259a59">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="d36a4c9b-9a8f-4363-b043-ac22b7e839be"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a18c8c68-8bd2-4ecc-8c0b-02d1069c9cf7">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="a426212f-0da4-4220-a0d8-db91869c7109"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4da43ad3-4ba2-4488-ae7d-16029e64b5c4">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="86b0f57d-fd8c-4d94-b1fe-b49d09fb0aa7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6af2b7a8-0a6d-4964-90b2-fdcbc1c1062c">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="1b0960f2-7b84-4bea-be09-85101ecca3ce"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ad28bdcc-15b3-45b7-b3a5-cb2e51c503fc">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="66423f94-660f-4809-b094-b147ea89f16b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.15d9d33f-87ae-4b94-a29e-e14a0377aaae">
            <name>const UnaryFun&lt;Grammar*, Grammar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1bc3b80b-abd1-4b45-ae3e-90f23a8fa41f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.092fbfa5-509d-4c06-8209-e0b55b2a5cc3">
            <name>const UnaryFun&lt;Grammar*, ulong>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.eefbc8ae-aa13-452b-bf85-57158b0a9be4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9fe4cc5c-3e15-4568-a8b1-a8578168e783">
            <name>const UnaryFun&lt;Pair&lt;String&lt;uchar>, Grammar*>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5d7a3af5-a110-404f-a25b-7a772dc7cf94"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b90462b6-1d49-4845-b1a8-cb372105105b">
            <name>const UnaryFun&lt;Pair&lt;String&lt;uchar>, Namespace*>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.cb217c4b-44c8-4e93-acf4-977b61921b2a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6c7fe175-ef71-47b8-8d39-5f5d0cf6ae81">
            <name>const UnaryFun&lt;Pair&lt;String&lt;uchar>, ParsingObject*>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.34844b46-2b9e-48ed-bad5-cee1867d260a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6041beb3-a5b1-47e3-86c3-4407c6fe5c09">
            <name>const UnaryFun&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9a19e389-b16e-4778-9c88-5189ca66cc27"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.262f7197-60f5-447c-9d5c-f65202c58268">
            <name>const UnaryFun&lt;String&lt;uchar>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.cfea79a6-1615-4ece-81e7-f4d061a75bcb"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e20d5b02-f340-406c-8e2e-4ce38946fe72">
            <name>const UnaryFun&lt;String&lt;uchar>, ulong>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1b42c9c2-c64f-4169-9b09-088b6c7685ea"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e9241e99-6778-4130-8e5c-fa46c3e48f4a">
            <name>const UnaryMinus</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
            </content>
        </type>
        <type derived="true" id="type.0e38ed38-d414-4ae4-b37f-ddf3b963ae49">
            <name>const UnaryMinus&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f1e14377-85c7-45bd-928b-1123dab6c740">
            <name>const UnaryParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
            </content>
        </type>
        <type derived="true" id="type.47834494-f995-4540-9cfd-aa778364bb1f">
            <name>const UnaryParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7f3fe9db-e644-4d0b-90e1-e3296214ecfd">
            <name>const UnaryParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryParser_74354A3C3770DC721B12D0E37FAE9B6A88FFA71A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8796d096-9881-4af5-9222-b813dd57244b">
            <name>const UnaryPlus</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
            </content>
        </type>
        <type derived="true" id="type.f990349a-86ca-4720-9fdd-cd8eb47ee2ef">
            <name>const UnaryPlus&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3f0d1611-09df-4102-96e1-a5a7cfbea77d">
            <name>const UnicodeException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
            </content>
        </type>
        <type derived="true" id="type.bc2238a2-72fd-4eee-a5ea-dab5491d4bcc">
            <name>const UnicodeException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e0180e27-c0ff-41b7-9bd9-ef492856f097">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.51aa65b0-4177-4ee2-8ec6-147c2078104a">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.55ecfbb6-2662-4281-a17f-3e5dc5cad50b">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*&amp;&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.714a0929-0f37-494c-979c-68bb7e4a372d">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.78296de8-5c23-4a6c-b540-a46d82dcd63b">
            <name>const UniquePtr&lt;System.Text.Parsing.Context></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
            </content>
        </type>
        <type derived="true" id="type.bb3c1f28-0c19-4350-92ec-6a5fae43894c">
            <name>const UniquePtr&lt;System.Text.Parsing.Context>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2fa54ab2-6be6-4a52-96f2-93bb297fd036">
            <name>const UniquePtr&lt;System.Text.Parsing.Context>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e345a470-1aba-49d4-b63b-2af528cb08f0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bcc8905c-3896-4d0d-817f-28cb27d4885d">
            <name>const UniquePtr&lt;System.Text.Parsing.ExpectationFailure></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b46be500-0fec-47b5-933d-bc8f619226b1"/>
            </content>
        </type>
        <type derived="true" id="type.e6ade68b-28df-404d-9208-7d9a7b57933d">
            <name>const UniquePtr&lt;System.Text.Parsing.ExpectationFailure>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b46be500-0fec-47b5-933d-bc8f619226b1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.449bc129-cb52-4f42-bbb3-c6fb6d2ea323">
            <name>const UniquePtr&lt;System.Text.Parsing.ExpectationFailure>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b46be500-0fec-47b5-933d-bc8f619226b1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.98c1612f-a7e1-4306-84cd-5075e88255e9">
            <name>const UniquePtr&lt;System.Text.Parsing.FileInfo></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2c0909eb-a727-407c-aa4c-da060e1f4072"/>
            </content>
        </type>
        <type derived="true" id="type.085c8de1-bf22-4f23-ae1a-22a98fcb6f59">
            <name>const UniquePtr&lt;System.Text.Parsing.FileInfo>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2c0909eb-a727-407c-aa4c-da060e1f4072"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.09014789-0381-4f3f-af87-03fcf2447a5f">
            <name>const UniquePtr&lt;System.Text.Parsing.FileInfo>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2c0909eb-a727-407c-aa4c-da060e1f4072"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1660c69a-ca95-4ac8-afe7-fc4df3fc8c7d">
            <name>const UniquePtr&lt;System.Text.Parsing.IdentifierCharsRule></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6562d475-3062-49d7-9864-f1e21b4bae20"/>
            </content>
        </type>
        <type derived="true" id="type.100417f7-a7a8-409e-980b-6d942fc68b0f">
            <name>const UniquePtr&lt;System.Text.Parsing.IdentifierCharsRule>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6562d475-3062-49d7-9864-f1e21b4bae20"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.77e7a6d3-6822-4ec4-98fe-d2eb09d9a0d4">
            <name>const UniquePtr&lt;System.Text.Parsing.IdentifierCharsRule>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6562d475-3062-49d7-9864-f1e21b4bae20"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1fc3bdfa-b472-4541-a624-8cb02764dc84">
            <name>const UniquePtr&lt;System.Text.Parsing.Object></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
            </content>
        </type>
        <type derived="true" id="type.58849317-6708-401e-9012-12b2e6d8aa98">
            <name>const UniquePtr&lt;System.Text.Parsing.Object>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e2b71e1c-5810-4e66-9860-e56539286074">
            <name>const UniquePtr&lt;System.Text.Parsing.Object>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0ccddd8c-9693-4f68-a7b2-fd5944c249e8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.feb57e63-c677-4770-9d5f-3484b7a19c16">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingData></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.caf583ad-0880-4d19-b77d-ce2a26a84458"/>
            </content>
        </type>
        <type derived="true" id="type.f8e06896-c83e-4802-81c0-3a3568487f35">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingData>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.caf583ad-0880-4d19-b77d-ce2a26a84458"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4883708f-af60-4ba2-8d88-7fc0383a2502">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingData>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.caf583ad-0880-4d19-b77d-ce2a26a84458"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eb1aaa52-69b3-44ce-b146-3cb6b1b832e8">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingDomain></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
            </content>
        </type>
        <type derived="true" id="type.7635a681-7d97-45cc-84a3-4c1255f83b03">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.83f16ce2-1e9b-494b-beb8-dd0af2fb82e2">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.177adb0e-5ef7-47b8-9833-8aee994db4f8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.93b19e9e-71da-4568-a914-1c73859c8c54">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingDomainRepository></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5a1ce91a-2a90-49eb-9a7d-a4d5871d5da3"/>
            </content>
        </type>
        <type derived="true" id="type.4d59dda7-d728-49ac-8dc2-5e0c0fa7a702">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingDomainRepository>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5a1ce91a-2a90-49eb-9a7d-a4d5871d5da3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e7830fa2-ae4b-4c00-9d14-2f4aabff67fd">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingDomainRepository>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5a1ce91a-2a90-49eb-9a7d-a4d5871d5da3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.45f3d554-e699-4950-9783-d997193393aa">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingException></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.126b6928-6237-4b37-b09f-2a692bdbea1b"/>
            </content>
        </type>
        <type derived="true" id="type.69a6d385-7dd7-4441-9e7f-308bc770de65">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingException>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.126b6928-6237-4b37-b09f-2a692bdbea1b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.da12b266-7afe-494e-827b-bf47ede53e96">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingException>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.126b6928-6237-4b37-b09f-2a692bdbea1b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a6d0e5bf-8d94-446f-8b8e-30eddf1c365d">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingObject></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
            </content>
        </type>
        <type derived="true" id="type.9a718e75-4120-4520-b286-c8668f315ec0">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.66bd0164-6ece-40b4-9ae6-b55d53455e92">
            <name>const UniquePtr&lt;System.Text.Parsing.ParsingObject>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.ca93054f-18b9-4f8d-aaf9-740b6c3c552a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.000010f4-5bf3-4160-81c6-9da633e97d32">
            <name>const UniquePtr&lt;System.Text.Parsing.RuleParser></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.af2142f8-423d-4e02-b488-020bf1122bf0"/>
            </content>
        </type>
        <type derived="true" id="type.32bc9464-251e-4346-9821-dcfdd76d2271">
            <name>const UniquePtr&lt;System.Text.Parsing.RuleParser>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.af2142f8-423d-4e02-b488-020bf1122bf0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9b3ee74c-d9aa-4d21-a663-e46459a935bd">
            <name>const UniquePtr&lt;System.Text.Parsing.RuleParser>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.af2142f8-423d-4e02-b488-020bf1122bf0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f62caf12-4acd-4b0b-af7e-6f6b09561f7e">
            <name>const UniquePtr&lt;System.Text.Parsing.XmlLog></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0f7ab969-a194-4c7f-b1c3-a15281caa38a"/>
            </content>
        </type>
        <type derived="true" id="type.1cc49a44-3b3a-49f7-af32-d9f5ef22af3b">
            <name>const UniquePtr&lt;System.Text.Parsing.XmlLog>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0f7ab969-a194-4c7f-b1c3-a15281caa38a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.56498993-13eb-4f54-b0c0-b0035a8447be">
            <name>const UniquePtr&lt;System.Text.Parsing.XmlLog>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0f7ab969-a194-4c7f-b1c3-a15281caa38a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e1266f5f-ab58-42c2-a3b8-bcee15cad2a3">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="27218102-4ab7-4928-9de3-3ac0d65373fa"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f10e3d36-1613-4f80-8f4b-95b92c739a2f">
            <name>const ValueObject&lt;String&lt;uchar>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.006a69e2-dce2-428e-a471-42e89059e55f"/>
            </content>
        </type>
        <type derived="true" id="type.00fac986-2d05-47a0-a814-a0f9003d94a5">
            <name>const ValueObject&lt;String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.006a69e2-dce2-428e-a471-42e89059e55f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0aec78fb-ec43-4fd3-be9e-e1d43f60e471">
            <name>const ValueObject&lt;String&lt;uchar>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.006a69e2-dce2-428e-a471-42e89059e55f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2da56cd2-0793-4102-9006-31079446eed5">
            <name>const ValueObject&lt;ValueType></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
            </content>
        </type>
        <type derived="true" id="type.65f5b1d0-9b4b-4c27-ac56-925f1ff1d034">
            <name>const ValueObject&lt;ValueType>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3dd299cf-7092-44f5-b45a-ffb694e152e3">
            <name>const ValueObject&lt;ValueType>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.37b793da-8578-4bfe-97d3-91d81b59be8b">
            <name>const ValueObject&lt;bool></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.96c56a0a-437b-4bec-8b65-31192186bdc0"/>
            </content>
        </type>
        <type derived="true" id="type.f94ecfc1-8598-41c1-87c7-d3748f786403">
            <name>const ValueObject&lt;bool>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.96c56a0a-437b-4bec-8b65-31192186bdc0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.27de1888-e46a-4585-8af5-3fcecaeb0ff4">
            <name>const ValueObject&lt;bool>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.96c56a0a-437b-4bec-8b65-31192186bdc0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1a9f0b1e-f172-44f2-bbd3-893e7f579ea5">
            <name>const ValueObject&lt;byte></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.14d01616-e9cb-4df5-a4d8-8ef9e92f668b"/>
            </content>
        </type>
        <type derived="true" id="type.4c1d6b96-e02d-4f65-9287-526d721a99ab">
            <name>const ValueObject&lt;byte>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.14d01616-e9cb-4df5-a4d8-8ef9e92f668b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.177dbb30-3678-4e2d-95a5-7b86d8e562d2">
            <name>const ValueObject&lt;byte>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.14d01616-e9cb-4df5-a4d8-8ef9e92f668b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d92cbd20-740f-4927-a4aa-2c9689caecd5">
            <name>const ValueObject&lt;double></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.bd9edb05-deba-4447-b1f5-448920ef2657"/>
            </content>
        </type>
        <type derived="true" id="type.7ce9b5c0-10f4-4aac-8b24-5462666d627b">
            <name>const ValueObject&lt;double>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.bd9edb05-deba-4447-b1f5-448920ef2657"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b548df73-9ff8-456e-9dcc-5895d62fb8da">
            <name>const ValueObject&lt;double>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.bd9edb05-deba-4447-b1f5-448920ef2657"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.501a3359-1e90-4b4f-aeea-c50a288854ff">
            <name>const ValueObject&lt;float></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4c6631b1-34d5-4d07-8f9c-17ab3bd1c9e5"/>
            </content>
        </type>
        <type derived="true" id="type.c20011ba-070d-4eb6-84c3-558bd45cbda4">
            <name>const ValueObject&lt;float>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4c6631b1-34d5-4d07-8f9c-17ab3bd1c9e5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.275a7748-6950-4480-a651-242c16bc3ca8">
            <name>const ValueObject&lt;float>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4c6631b1-34d5-4d07-8f9c-17ab3bd1c9e5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f2b9355b-9fb7-45ae-8744-8652aa850bbd">
            <name>const ValueObject&lt;int></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.06213a61-a058-4ada-b955-11799a87b631"/>
            </content>
        </type>
        <type derived="true" id="type.a362188c-898c-4eb0-9d31-2f5c0e8e71eb">
            <name>const ValueObject&lt;int>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.06213a61-a058-4ada-b955-11799a87b631"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.60b7d664-5f64-41e6-91fa-c7e600eebe6c">
            <name>const ValueObject&lt;int>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.06213a61-a058-4ada-b955-11799a87b631"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d271d65f-c5fe-45c3-ad8a-02905c55da6d">
            <name>const ValueObject&lt;long></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d0358143-d19f-4763-90aa-444a4eff2a0d"/>
            </content>
        </type>
        <type derived="true" id="type.e2a37813-865a-4cd1-b533-afffea7a4ed4">
            <name>const ValueObject&lt;long>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d0358143-d19f-4763-90aa-444a4eff2a0d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.42d729dd-c262-41bb-afaf-23c8141cf50a">
            <name>const ValueObject&lt;long>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d0358143-d19f-4763-90aa-444a4eff2a0d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c130811b-e938-44be-997d-9083bd4a4659">
            <name>const ValueObject&lt;sbyte></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.23da6c32-405f-4abe-aadb-70090129f691"/>
            </content>
        </type>
        <type derived="true" id="type.4d73db83-a43a-42b0-bd96-20f73705e77e">
            <name>const ValueObject&lt;sbyte>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.23da6c32-405f-4abe-aadb-70090129f691"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b6c34fa6-6dd6-4647-a274-f4d07bf6e9ec">
            <name>const ValueObject&lt;sbyte>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.23da6c32-405f-4abe-aadb-70090129f691"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.07e4afa9-938f-4717-821c-a1b87a2f1429">
            <name>const ValueObject&lt;short></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b55f7233-4dde-4010-ad10-af674b119d54"/>
            </content>
        </type>
        <type derived="true" id="type.e322a688-310e-4209-bf3d-b2fe95006d71">
            <name>const ValueObject&lt;short>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b55f7233-4dde-4010-ad10-af674b119d54"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1c4086d3-c5fe-4fb1-a49b-e7025ef3d520">
            <name>const ValueObject&lt;short>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.b55f7233-4dde-4010-ad10-af674b119d54"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.633a3592-10fc-4f24-b09d-d3457b01430c">
            <name>const ValueObject&lt;uchar></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1b5e8949-f3a2-4f30-af6e-976ce533c9f7"/>
            </content>
        </type>
        <type derived="true" id="type.aacf1e45-416d-4a0d-bd83-79aa615f9619">
            <name>const ValueObject&lt;uchar>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1b5e8949-f3a2-4f30-af6e-976ce533c9f7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3541dcb7-1324-455a-91a6-9d5920e5af91">
            <name>const ValueObject&lt;uchar>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1b5e8949-f3a2-4f30-af6e-976ce533c9f7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e06087a0-78e3-4a8b-80b8-c873ef9a809d">
            <name>const ValueObject&lt;uint></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.28011ec3-b734-497d-8dad-90c5dc94e90d"/>
            </content>
        </type>
        <type derived="true" id="type.8225a618-9bd8-4320-a5a7-cfa725f8c424">
            <name>const ValueObject&lt;uint>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.28011ec3-b734-497d-8dad-90c5dc94e90d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.48554316-6a35-40fc-956a-634da03b8a9f">
            <name>const ValueObject&lt;uint>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.28011ec3-b734-497d-8dad-90c5dc94e90d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.88862e33-c4ff-4cd8-b19a-9920f143a8d0">
            <name>const ValueObject&lt;ulong></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e6cb3bfc-d5ad-4aac-8733-a3bff8d4537e"/>
            </content>
        </type>
        <type derived="true" id="type.7beb5e9f-b5b6-4970-8d64-7341f502ec87">
            <name>const ValueObject&lt;ulong>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e6cb3bfc-d5ad-4aac-8733-a3bff8d4537e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4b0ceab0-0b6f-487e-b074-f96b6c799efe">
            <name>const ValueObject&lt;ulong>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e6cb3bfc-d5ad-4aac-8733-a3bff8d4537e"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2be48b54-1312-4a49-83cb-7b81afe3a8c3">
            <name>const ValueObject&lt;ushort></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.25ff3f51-2e3d-4fe5-aeed-fd874bd33fbf"/>
            </content>
        </type>
        <type derived="true" id="type.93268594-3ac1-4a21-9360-17f3519e1357">
            <name>const ValueObject&lt;ushort>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.25ff3f51-2e3d-4fe5-aeed-fd874bd33fbf"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dd76a374-279b-498a-9e9e-49683154e9dd">
            <name>const ValueObject&lt;ushort>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.25ff3f51-2e3d-4fe5-aeed-fd874bd33fbf"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.07714eb1-2d61-4248-bd69-54f53db02294">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="77ac2c99-6115-4d02-80e7-ef2d3c48f711"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.41a42562-eeed-444d-9744-5ef7192b4e30">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="f5dc8c53-e221-4dd5-ba46-775f1f0097ae"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.af2f46a3-6618-4a46-b127-347d1a04c1a5">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4f3dabf9-5f8d-4063-8265-9fb707da384e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2cfe69d4-dc18-4bc3-b6f5-17a33874f976">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="7a0b1fb7-cac1-468b-a564-e20bc47c1824"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0a52a932-2d20-44bb-8892-24c889a6812e">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="cd6ffd60-461b-484f-9449-18f88522c3b3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.400b5ab5-4a12-4048-86bb-2c25fe17526a">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="7bf13ced-92b3-4f1a-be72-8f124ab84fa4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6a151616-fc13-4b5b-ae14-96a51d5dc948">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4237d6ae-8537-4ec7-bef5-89061bffb107"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.95b9cda4-d54a-44c4-9bf3-91f77afceb35">
            <name>const XmlLog</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
            </content>
        </type>
        <type derived="true" id="type.e3cf05d6-afca-43e4-9fd9-cc9ae7549cf3">
            <name>const XmlLog&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b4e0b58c-aa80-4d48-b8a9-2ee82affb4e2">
            <name>const XmlLog*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7af9ecc6-e068-4489-b47e-0550c423af19">
            <name>const double&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7886ec51-1386-407e-899e-3f71f912ecf5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.98a597d5-9ad6-48c0-afbf-380338d174ec">
            <name>const float&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.d90ae6b3-0332-4abc-819a-54336158f9af"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d2c95265-43bd-4387-954c-38bc60c23cef">
            <name>const sbyte&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e267ae8f-cebc-45b6-bc6f-3aed32286256"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.352a0922-0d80-43a7-b502-a8c9938d33c7">
            <name>const short&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.95b0abae-6680-4323-ae03-3fb318983e45"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3d2a6575-6f1a-4efe-96f7-05fdd3dca691">
            <name>const stdlib</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
            </content>
        </type>
        <type derived="true" id="type.9ff0282e-9568-43fd-b81d-872e3a2d47ca">
            <name>const stdlib&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9070c70d-d234-46bf-baac-581462eefb31">
            <name>const uchar*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d0f90e02-9775-4c04-bcd1-cf189b6bf4f6">
            <name>const ushort&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.dfe86fe5-969a-478e-a93b-dac021297183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.7886ec51-1386-407e-899e-3f71f912ecf5">
            <name>double</name>
        </type>
        <type id="class_doubleRule_6A7A4FE9F5631D53DA37A4AE3CEEDEECCDCFEAAD">
            <name>doubleRule</name>
        </type>
        <type derived="true" id="type.d2e47ac4-3193-4f6a-86ef-967da637afe4">
            <name>doubleRule&amp;</name>
            <content>
                <baseType ref="class_doubleRule_6A7A4FE9F5631D53DA37A4AE3CEEDEECCDCFEAAD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.484c28a7-259a-4860-979b-187cfafde390">
            <name>doubleRule*</name>
            <content>
                <baseType ref="class_doubleRule_6A7A4FE9F5631D53DA37A4AE3CEEDEECCDCFEAAD"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.95948c3b-1573-4b1a-8f7e-2a52ff13fe59">
            <name>doubleRule*&amp;</name>
            <content>
                <baseType ref="class_doubleRule_6A7A4FE9F5631D53DA37A4AE3CEEDEECCDCFEAAD"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.47bafdfb-2240-412f-b86d-9fdffd18a51b">
            <name>doubleRule**</name>
            <content>
                <baseType ref="class_doubleRule_6A7A4FE9F5631D53DA37A4AE3CEEDEECCDCFEAAD"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_escapeRule_CC68EF526C4083BDC998E663A1581BA9F389123A">
            <name>escapeRule</name>
        </type>
        <type derived="true" id="type.926b8609-9299-4564-942e-3e9bae389c05">
            <name>escapeRule&amp;</name>
            <content>
                <baseType ref="class_escapeRule_CC68EF526C4083BDC998E663A1581BA9F389123A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ce94de22-7f63-4d86-91c8-d122d651eebd">
            <name>escapeRule*</name>
            <content>
                <baseType ref="class_escapeRule_CC68EF526C4083BDC998E663A1581BA9F389123A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e32a0657-cdfe-457a-b101-a9ddbd740574">
            <name>escapeRule*&amp;</name>
            <content>
                <baseType ref="class_escapeRule_CC68EF526C4083BDC998E663A1581BA9F389123A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.da3faf59-0a2c-494e-b7c2-96b2b105ed2f">
            <name>escapeRule**</name>
            <content>
                <baseType ref="class_escapeRule_CC68EF526C4083BDC998E663A1581BA9F389123A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.d90ae6b3-0332-4abc-819a-54336158f9af">
            <name>float</name>
        </type>
        <type id="class_floatRule_E5AD4CA9F8078C0840EBB7AEF5E5D11DF28EBF8A">
            <name>floatRule</name>
        </type>
        <type derived="true" id="type.1b8b157a-3487-4553-9381-7654bec06a1a">
            <name>floatRule&amp;</name>
            <content>
                <baseType ref="class_floatRule_E5AD4CA9F8078C0840EBB7AEF5E5D11DF28EBF8A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.044c23f5-ab43-4cdd-8738-815fd93b2899">
            <name>floatRule*</name>
            <content>
                <baseType ref="class_floatRule_E5AD4CA9F8078C0840EBB7AEF5E5D11DF28EBF8A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0764acb5-8b2e-4b48-b154-02fc89885fb3">
            <name>floatRule*&amp;</name>
            <content>
                <baseType ref="class_floatRule_E5AD4CA9F8078C0840EBB7AEF5E5D11DF28EBF8A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.27ef3749-eaae-4b7d-b5d5-7bd1dfad03de">
            <name>floatRule**</name>
            <content>
                <baseType ref="class_floatRule_E5AD4CA9F8078C0840EBB7AEF5E5D11DF28EBF8A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_hexRule_A230AC982D8AF9AD987B15A19F33E93CD0B59E22">
            <name>hexRule</name>
        </type>
        <type derived="true" id="type.68589a7e-4272-469f-9677-45e8af6ba0d0">
            <name>hexRule&amp;</name>
            <content>
                <baseType ref="class_hexRule_A230AC982D8AF9AD987B15A19F33E93CD0B59E22"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.807647e4-c369-42cb-81fa-aa4a901b7075">
            <name>hexRule*</name>
            <content>
                <baseType ref="class_hexRule_A230AC982D8AF9AD987B15A19F33E93CD0B59E22"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7d2723b8-d003-436d-9dc8-090e6cdb2ba9">
            <name>hexRule*&amp;</name>
            <content>
                <baseType ref="class_hexRule_A230AC982D8AF9AD987B15A19F33E93CD0B59E22"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.655dd4b9-ccfe-40e8-b493-3f81c4e0f561">
            <name>hexRule**</name>
            <content>
                <baseType ref="class_hexRule_A230AC982D8AF9AD987B15A19F33E93CD0B59E22"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_hex_literalRule_503B8DAB2CB7BCA2AC20E1AF434A8F7B7A493463">
            <name>hex_literalRule</name>
        </type>
        <type derived="true" id="type.0e7b8675-155f-4b88-ab34-bbfe6db49ed2">
            <name>hex_literalRule&amp;</name>
            <content>
                <baseType ref="class_hex_literalRule_503B8DAB2CB7BCA2AC20E1AF434A8F7B7A493463"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4fa968a2-c5ee-4948-9398-f69a22107c38">
            <name>hex_literalRule*</name>
            <content>
                <baseType ref="class_hex_literalRule_503B8DAB2CB7BCA2AC20E1AF434A8F7B7A493463"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e2b78db4-1749-4988-8672-edf335da0306">
            <name>hex_literalRule*&amp;</name>
            <content>
                <baseType ref="class_hex_literalRule_503B8DAB2CB7BCA2AC20E1AF434A8F7B7A493463"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cf19c518-e242-468f-9e26-f09cbecbb978">
            <name>hex_literalRule**</name>
            <content>
                <baseType ref="class_hex_literalRule_503B8DAB2CB7BCA2AC20E1AF434A8F7B7A493463"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_hexbyteRule_E670624BAB490757F84E8DD670585DEB712C0A34">
            <name>hexbyteRule</name>
        </type>
        <type derived="true" id="type.25319ec3-b5a4-45f6-8342-21eaea5ed14f">
            <name>hexbyteRule&amp;</name>
            <content>
                <baseType ref="class_hexbyteRule_E670624BAB490757F84E8DD670585DEB712C0A34"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b992acf0-8cc2-47d6-b32f-1d2307f89517">
            <name>hexbyteRule*</name>
            <content>
                <baseType ref="class_hexbyteRule_E670624BAB490757F84E8DD670585DEB712C0A34"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.877505e8-8b62-49fc-a005-9e85cdea2968">
            <name>hexbyteRule*&amp;</name>
            <content>
                <baseType ref="class_hexbyteRule_E670624BAB490757F84E8DD670585DEB712C0A34"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4300f2a7-84cf-49bc-8cf9-2a2ecf7dc25f">
            <name>hexbyteRule**</name>
            <content>
                <baseType ref="class_hexbyteRule_E670624BAB490757F84E8DD670585DEB712C0A34"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_hexdwordRule_939B12A8E89B157E848D3EA2D2CCB8EF8057CDDE">
            <name>hexdwordRule</name>
        </type>
        <type derived="true" id="type.8cb7f4ca-78ba-4354-b0ab-0bb6874e54da">
            <name>hexdwordRule&amp;</name>
            <content>
                <baseType ref="class_hexdwordRule_939B12A8E89B157E848D3EA2D2CCB8EF8057CDDE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.870e2f9d-e74a-488e-87a3-28a50fb66eb1">
            <name>hexdwordRule*</name>
            <content>
                <baseType ref="class_hexdwordRule_939B12A8E89B157E848D3EA2D2CCB8EF8057CDDE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2ee8ca02-f8bd-4e2a-8bda-b3a4be865ceb">
            <name>hexdwordRule*&amp;</name>
            <content>
                <baseType ref="class_hexdwordRule_939B12A8E89B157E848D3EA2D2CCB8EF8057CDDE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.01eeacb8-11a9-4f9e-a286-45e56a553f34">
            <name>hexdwordRule**</name>
            <content>
                <baseType ref="class_hexdwordRule_939B12A8E89B157E848D3EA2D2CCB8EF8057CDDE"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_hexqwordRule_B22F84D5A1B70A0007A7E5A821525AD4C59500F9">
            <name>hexqwordRule</name>
        </type>
        <type derived="true" id="type.feb39ec1-2f0a-47b8-b80a-5e9dfe5d6e5e">
            <name>hexqwordRule&amp;</name>
            <content>
                <baseType ref="class_hexqwordRule_B22F84D5A1B70A0007A7E5A821525AD4C59500F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1be7fd60-ce6a-4ee3-88b8-400e8ef90e16">
            <name>hexqwordRule*</name>
            <content>
                <baseType ref="class_hexqwordRule_B22F84D5A1B70A0007A7E5A821525AD4C59500F9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e9116a4c-a7b4-4d18-8787-1d9541ce4241">
            <name>hexqwordRule*&amp;</name>
            <content>
                <baseType ref="class_hexqwordRule_B22F84D5A1B70A0007A7E5A821525AD4C59500F9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a219daa7-1aa6-4787-bfcd-b303feb734b1">
            <name>hexqwordRule**</name>
            <content>
                <baseType ref="class_hexqwordRule_B22F84D5A1B70A0007A7E5A821525AD4C59500F9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_hexwordRule_C60A06FE130C7D6A3D3E5C54EE535216AAC228F9">
            <name>hexwordRule</name>
        </type>
        <type derived="true" id="type.ea7a2def-d84a-4f1f-8827-a90272480c24">
            <name>hexwordRule&amp;</name>
            <content>
                <baseType ref="class_hexwordRule_C60A06FE130C7D6A3D3E5C54EE535216AAC228F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.36bcc3ed-658d-4d60-9bc2-0c51ea25c82a">
            <name>hexwordRule*</name>
            <content>
                <baseType ref="class_hexwordRule_C60A06FE130C7D6A3D3E5C54EE535216AAC228F9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d8e553d5-da7a-4393-bdb7-f53ac0ac86ce">
            <name>hexwordRule*&amp;</name>
            <content>
                <baseType ref="class_hexwordRule_C60A06FE130C7D6A3D3E5C54EE535216AAC228F9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fc6955b3-f061-4ebd-a27a-839a2a749c11">
            <name>hexwordRule**</name>
            <content>
                <baseType ref="class_hexwordRule_C60A06FE130C7D6A3D3E5C54EE535216AAC228F9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_identifierRule_6337B1033C3D83467C43058054059544FDC17572">
            <name>identifierRule</name>
        </type>
        <type derived="true" id="type.180b895a-f702-4956-bcbd-4f5173951d8e">
            <name>identifierRule&amp;</name>
            <content>
                <baseType ref="class_identifierRule_6337B1033C3D83467C43058054059544FDC17572"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.538ef589-9f02-4694-9818-a77f86106f8e">
            <name>identifierRule*</name>
            <content>
                <baseType ref="class_identifierRule_6337B1033C3D83467C43058054059544FDC17572"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8eabb8dd-fa93-4968-a48a-5c0bcbdaadc4">
            <name>identifierRule*&amp;</name>
            <content>
                <baseType ref="class_identifierRule_6337B1033C3D83467C43058054059544FDC17572"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d1647a7c-9ed6-4edb-8ee5-4539f8cafc8d">
            <name>identifierRule**</name>
            <content>
                <baseType ref="class_identifierRule_6337B1033C3D83467C43058054059544FDC17572"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8">
            <name>int</name>
        </type>
        <type id="class_intRule_C9B60EB5E5E5BC242EB2AF7EE8F51555F99083F3">
            <name>intRule</name>
        </type>
        <type derived="true" id="type.d8475750-a662-4c83-9712-211df1955dd6">
            <name>intRule&amp;</name>
            <content>
                <baseType ref="class_intRule_C9B60EB5E5E5BC242EB2AF7EE8F51555F99083F3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d45f6414-7bfd-4095-8eec-c3b28bbdcac2">
            <name>intRule*</name>
            <content>
                <baseType ref="class_intRule_C9B60EB5E5E5BC242EB2AF7EE8F51555F99083F3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0415fa86-2eeb-4723-9e69-73f6d16e2bda">
            <name>intRule*&amp;</name>
            <content>
                <baseType ref="class_intRule_C9B60EB5E5E5BC242EB2AF7EE8F51555F99083F3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ae54514f-4f76-4ac0-b2b8-06a6d6d60d08">
            <name>intRule**</name>
            <content>
                <baseType ref="class_intRule_C9B60EB5E5E5BC242EB2AF7EE8F51555F99083F3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.0afdb17a-6699-4dce-ac86-da6f19be4173">
            <name>long</name>
        </type>
        <type id="class_longRule_77A9CD69D78EC42815C0FC1D9E923BB45F598479">
            <name>longRule</name>
        </type>
        <type derived="true" id="type.9b9258c6-bc90-45c5-bf20-ac33a31d2aec">
            <name>longRule&amp;</name>
            <content>
                <baseType ref="class_longRule_77A9CD69D78EC42815C0FC1D9E923BB45F598479"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.08da562c-f8f4-4ca6-bf09-55e87e396dea">
            <name>longRule*</name>
            <content>
                <baseType ref="class_longRule_77A9CD69D78EC42815C0FC1D9E923BB45F598479"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7e911b74-b589-4b52-ad62-a7cbe3c4bec1">
            <name>longRule*&amp;</name>
            <content>
                <baseType ref="class_longRule_77A9CD69D78EC42815C0FC1D9E923BB45F598479"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0e406345-2ebb-4b99-9025-f4f767cd7f74">
            <name>longRule**</name>
            <content>
                <baseType ref="class_longRule_77A9CD69D78EC42815C0FC1D9E923BB45F598479"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_numRule_82785CA74F999E98F4880A2367A8D1DB391A41F6">
            <name>numRule</name>
        </type>
        <type derived="true" id="type.596186df-a622-472d-990a-d5f4ee8fb677">
            <name>numRule&amp;</name>
            <content>
                <baseType ref="class_numRule_82785CA74F999E98F4880A2367A8D1DB391A41F6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.24baae46-6dc8-42c5-9d97-bd554154219e">
            <name>numRule*</name>
            <content>
                <baseType ref="class_numRule_82785CA74F999E98F4880A2367A8D1DB391A41F6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e27b27e7-ff77-4ff8-b4f6-392255c944bf">
            <name>numRule*&amp;</name>
            <content>
                <baseType ref="class_numRule_82785CA74F999E98F4880A2367A8D1DB391A41F6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5b739b20-2f93-46c8-8227-045ec02bbcac">
            <name>numRule**</name>
            <content>
                <baseType ref="class_numRule_82785CA74F999E98F4880A2367A8D1DB391A41F6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_octal_digitRule_8AB21C077892BCF466CAD4D14EB7075838FA0A01">
            <name>octal_digitRule</name>
        </type>
        <type derived="true" id="type.b0c4a047-fab7-4220-ba65-8abe0c59a954">
            <name>octal_digitRule&amp;</name>
            <content>
                <baseType ref="class_octal_digitRule_8AB21C077892BCF466CAD4D14EB7075838FA0A01"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.47b1be1c-086c-4525-8ca6-b290282a1f62">
            <name>octal_digitRule*</name>
            <content>
                <baseType ref="class_octal_digitRule_8AB21C077892BCF466CAD4D14EB7075838FA0A01"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11cd19cb-7cb3-49eb-ac2c-4a87c376f366">
            <name>octal_digitRule*&amp;</name>
            <content>
                <baseType ref="class_octal_digitRule_8AB21C077892BCF466CAD4D14EB7075838FA0A01"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.895c997f-a424-4b96-8dc3-42e89ed62a9f">
            <name>octal_digitRule**</name>
            <content>
                <baseType ref="class_octal_digitRule_8AB21C077892BCF466CAD4D14EB7075838FA0A01"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_qualified_idRule_07E8141D98216D33F6397CC34195255F1E581CB1">
            <name>qualified_idRule</name>
        </type>
        <type derived="true" id="type.b3e21fbd-7070-44eb-a188-7954b403a4f3">
            <name>qualified_idRule&amp;</name>
            <content>
                <baseType ref="class_qualified_idRule_07E8141D98216D33F6397CC34195255F1E581CB1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.da3417fe-2edd-417a-a2fe-933be10e02c3">
            <name>qualified_idRule*</name>
            <content>
                <baseType ref="class_qualified_idRule_07E8141D98216D33F6397CC34195255F1E581CB1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c6f5f2ca-eb25-4bf4-a5cd-bb288d6e9bfa">
            <name>qualified_idRule*&amp;</name>
            <content>
                <baseType ref="class_qualified_idRule_07E8141D98216D33F6397CC34195255F1E581CB1"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.02f0cfdb-913e-4830-81dd-5d6221429bb6">
            <name>qualified_idRule**</name>
            <content>
                <baseType ref="class_qualified_idRule_07E8141D98216D33F6397CC34195255F1E581CB1"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.e267ae8f-cebc-45b6-bc6f-3aed32286256">
            <name>sbyte</name>
        </type>
        <type id="class_sbyteRule_48DC88A1CDBA68713B4A439BD9DF979DE5B2E5B5">
            <name>sbyteRule</name>
        </type>
        <type derived="true" id="type.a16be466-50f7-4edb-8691-371790b75ed0">
            <name>sbyteRule&amp;</name>
            <content>
                <baseType ref="class_sbyteRule_48DC88A1CDBA68713B4A439BD9DF979DE5B2E5B5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d1f18a29-94ce-4c1f-9595-ba84aebe9eca">
            <name>sbyteRule*</name>
            <content>
                <baseType ref="class_sbyteRule_48DC88A1CDBA68713B4A439BD9DF979DE5B2E5B5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.32d4674e-8aa8-442a-b54a-5b3e58016063">
            <name>sbyteRule*&amp;</name>
            <content>
                <baseType ref="class_sbyteRule_48DC88A1CDBA68713B4A439BD9DF979DE5B2E5B5"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2e469e87-6be8-433e-80bb-aa4ce1eb6047">
            <name>sbyteRule**</name>
            <content>
                <baseType ref="class_sbyteRule_48DC88A1CDBA68713B4A439BD9DF979DE5B2E5B5"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.95b0abae-6680-4323-ae03-3fb318983e45">
            <name>short</name>
        </type>
        <type id="class_shortRule_3568A99F5B94132DC6394C821D19F1C3F59780A5">
            <name>shortRule</name>
        </type>
        <type derived="true" id="type.beea2282-2e73-42ad-919a-5ef70f71f521">
            <name>shortRule&amp;</name>
            <content>
                <baseType ref="class_shortRule_3568A99F5B94132DC6394C821D19F1C3F59780A5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c2817a24-1dd5-4c19-bbe7-56ec5d98aca0">
            <name>shortRule*</name>
            <content>
                <baseType ref="class_shortRule_3568A99F5B94132DC6394C821D19F1C3F59780A5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9bc9cc9f-e335-4c3b-a248-15a1f495b749">
            <name>shortRule*&amp;</name>
            <content>
                <baseType ref="class_shortRule_3568A99F5B94132DC6394C821D19F1C3F59780A5"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bbc20c88-e52f-4912-9db6-37d0fe3a4bfc">
            <name>shortRule**</name>
            <content>
                <baseType ref="class_shortRule_3568A99F5B94132DC6394C821D19F1C3F59780A5"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981">
            <name>stdlib</name>
        </type>
        <type derived="true" id="type.34efbd4a-12a6-49e0-8daa-b29520627345">
            <name>stdlib&amp;</name>
            <content>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b744536c-5a75-4daa-a952-e3f0f3997b76">
            <name>stdlib&amp;&amp;</name>
            <content>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.616f369d-84cc-4506-adb7-9666d247ec9d">
            <name>stdlib*</name>
            <content>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_stringRule_C15A8DD35C972FC9227397103AFDE1EA5A0926DE">
            <name>stringRule</name>
        </type>
        <type derived="true" id="type.a1f9429c-e9b2-4782-8a60-5245255c2089">
            <name>stringRule&amp;</name>
            <content>
                <baseType ref="class_stringRule_C15A8DD35C972FC9227397103AFDE1EA5A0926DE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.33a71bc0-76c2-4b75-92da-dd2e43eb62ae">
            <name>stringRule*</name>
            <content>
                <baseType ref="class_stringRule_C15A8DD35C972FC9227397103AFDE1EA5A0926DE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f5c4e7de-e7db-493f-84d2-d4eef0dff07a">
            <name>stringRule*&amp;</name>
            <content>
                <baseType ref="class_stringRule_C15A8DD35C972FC9227397103AFDE1EA5A0926DE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9561ab5c-1d43-48be-9ce0-32130c63f7cf">
            <name>stringRule**</name>
            <content>
                <baseType ref="class_stringRule_C15A8DD35C972FC9227397103AFDE1EA5A0926DE"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.3e479da5-83fc-4378-8722-983fc2faf328">
            <name>uchar</name>
        </type>
        <type derived="true" id="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d">
            <name>uchar&amp;</name>
            <content>
                <baseType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db">
            <name>uchar*</name>
            <content>
                <baseType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9">
            <name>uint</name>
        </type>
        <type derived="true" id="type.c1524672-2d01-49f8-9d70-c1c1521aa6fb">
            <name>uint&amp;</name>
            <content>
                <baseType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ca60f6dd-9436-476f-af7a-f8f55989d9d9">
            <name>uint*</name>
            <content>
                <baseType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_uintRule_8C99C3EEDC7F168ECE5FA11D2130E6B9B1A3241B">
            <name>uintRule</name>
        </type>
        <type derived="true" id="type.7dcdea07-1515-46a8-8944-8d1f7e63b611">
            <name>uintRule&amp;</name>
            <content>
                <baseType ref="class_uintRule_8C99C3EEDC7F168ECE5FA11D2130E6B9B1A3241B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9f5e87b4-06fa-4373-850b-f52b07304ad6">
            <name>uintRule*</name>
            <content>
                <baseType ref="class_uintRule_8C99C3EEDC7F168ECE5FA11D2130E6B9B1A3241B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7ec15cec-3b5d-4eb9-aa59-b2bd4a005e27">
            <name>uintRule*&amp;</name>
            <content>
                <baseType ref="class_uintRule_8C99C3EEDC7F168ECE5FA11D2130E6B9B1A3241B"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fdd59c88-bacc-4cd7-a389-407f6ca5b1a2">
            <name>uintRule**</name>
            <content>
                <baseType ref="class_uintRule_8C99C3EEDC7F168ECE5FA11D2130E6B9B1A3241B"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.787a58ea-5a99-499f-8f8e-6a0690601022">
            <name>ulong</name>
        </type>
        <type derived="true" id="type.b810c316-c824-48cc-861f-c2150ba51f2c">
            <name>ulong&amp;</name>
            <content>
                <baseType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b">
            <name>ulong*</name>
            <content>
                <baseType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ulongRule_D801576710F59A4FB28AF32576733492EA31FDA4">
            <name>ulongRule</name>
        </type>
        <type derived="true" id="type.56b3f052-2147-4ee3-9dc2-967e18ada30d">
            <name>ulongRule&amp;</name>
            <content>
                <baseType ref="class_ulongRule_D801576710F59A4FB28AF32576733492EA31FDA4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7a705f42-e624-43e8-a8bd-26feda5eec14">
            <name>ulongRule*</name>
            <content>
                <baseType ref="class_ulongRule_D801576710F59A4FB28AF32576733492EA31FDA4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9a9f2ab5-59d6-45ca-82be-dd3c402cb61d">
            <name>ulongRule*&amp;</name>
            <content>
                <baseType ref="class_ulongRule_D801576710F59A4FB28AF32576733492EA31FDA4"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.23d8829e-3ab4-43fa-b4fe-e6095ce09a71">
            <name>ulongRule**</name>
            <content>
                <baseType ref="class_ulongRule_D801576710F59A4FB28AF32576733492EA31FDA4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_urealRule_B24D8DC0257FC718085276984EC9F786E03AEE11">
            <name>urealRule</name>
        </type>
        <type derived="true" id="type.eb8e6da7-3ac7-41c9-b3ef-993398c01bb6">
            <name>urealRule&amp;</name>
            <content>
                <baseType ref="class_urealRule_B24D8DC0257FC718085276984EC9F786E03AEE11"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.98d77a28-e4a7-4663-926d-b4af0b38258c">
            <name>urealRule*</name>
            <content>
                <baseType ref="class_urealRule_B24D8DC0257FC718085276984EC9F786E03AEE11"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.896c4190-66e8-4dcf-b12b-ba12102a12cc">
            <name>urealRule*&amp;</name>
            <content>
                <baseType ref="class_urealRule_B24D8DC0257FC718085276984EC9F786E03AEE11"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1b41c3b7-87a9-4e9f-9ca2-744aa9fd8dfd">
            <name>urealRule**</name>
            <content>
                <baseType ref="class_urealRule_B24D8DC0257FC718085276984EC9F786E03AEE11"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.dfe86fe5-969a-478e-a93b-dac021297183">
            <name>ushort</name>
        </type>
        <type id="class_ushortRule_31FEEB5245D1290D3CBCF78C21327711682D0E82">
            <name>ushortRule</name>
        </type>
        <type derived="true" id="type.78c101a4-0264-4d8b-815b-791e312cae19">
            <name>ushortRule&amp;</name>
            <content>
                <baseType ref="class_ushortRule_31FEEB5245D1290D3CBCF78C21327711682D0E82"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f8469471-c643-4012-afec-87d8057d8fe8">
            <name>ushortRule*</name>
            <content>
                <baseType ref="class_ushortRule_31FEEB5245D1290D3CBCF78C21327711682D0E82"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4c23e2ce-5b84-42b4-9ec4-d4fa940e6874">
            <name>ushortRule*&amp;</name>
            <content>
                <baseType ref="class_ushortRule_31FEEB5245D1290D3CBCF78C21327711682D0E82"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4ad34dcc-f68b-4a7c-ae2f-18df310ad2b9">
            <name>ushortRule**</name>
            <content>
                <baseType ref="class_ushortRule_31FEEB5245D1290D3CBCF78C21327711682D0E82"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.b4ae1e1f-5afd-45aa-945a-26060adbacea">
            <name>wchar</name>
        </type>
        <type derived="true" id="type.a0763378-c245-47b1-a07e-877c5a2d11c4">
            <name>wchar&amp;</name>
            <content>
                <baseType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d">
            <name>wchar*</name>
            <content>
                <baseType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <qualifier>*</qualifier>
            </content>
        </type>
    </types>
</library>
