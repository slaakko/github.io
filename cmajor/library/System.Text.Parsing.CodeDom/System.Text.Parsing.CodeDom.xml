<library>
    <name>System.Text.Parsing.CodeDom</name>
    <style>../../style/cmdoc.css</style>
    <namespaces>
        <namespace id="System.Text.Parsing.CodeDom">
            <name>System.Text.Parsing.CodeDom</name>
            <classes>
                <class id="class_Add_D8266E0EBE7DB2DA07CF9189C1A15DF16E9823E3">
                    <name>Add</name>
                    <groupName>Add</groupName>
                    <syntax> public class Add;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Add_FB6264E275DB7FAA75A8DEECA05C3D7403373A46">
                            <name>Add(DomObject* left_, DomObject* right_)</name>
                            <syntax>public Add(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Add_2D13C056B5BA8CB3E35493F4D5573674782B9661">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492">
                    <name>AddressOf</name>
                    <groupName>AddressOf</groupName>
                    <syntax> public class AddressOf;</syntax>
                    <baseClass ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                    <constructors>
                        <constructor id="constructor_AddressOf_106A3FBE271BDC73BFE07A3BC966D08FC4BB4E62">
                            <name>AddressOf(DomObject* subject_)</name>
                            <syntax>public AddressOf(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_AddressOf_1B8A59E3B79039952FA31FBE6693C655C7FBF600">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Array_01D2071770F4541CF86429091B229EF2950656B0">
                    <name>Array</name>
                    <groupName>Array</groupName>
                    <syntax> public class Array;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_Array_4AC1FF82D6CB446F66567B8C8037440967CA386D">
                            <name>Array(DomObject* subject_, DomObject* size_)</name>
                            <syntax>public nothrow Array(DomObject* subject_, DomObject* size_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>size_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Array_CEDE9455D14D4C230B753D3647F78B91D1A93F97">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Name_Array_639333BF53AD47A20A5955223BE4B432A2A8036D">
                            <name>Name() const</name>
                            <syntax>public nothrow override String&lt;uchar> Name() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Print_Array_8B4C206DEDC2348B5A6A366681FBA0BB785184A6">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Arrow_1A144572826274559F7125C012EDEF88A9F72FDB">
                    <name>Arrow</name>
                    <groupName>Arrow</groupName>
                    <syntax> public class Arrow;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_Arrow_DAE8AA001897DBB081656F17CC7E872B386C5D86">
                            <name>Arrow(DomObject* subject_, const String&lt;uchar>&amp; memberId_)</name>
                            <syntax>public nothrow Arrow(DomObject* subject_, const String&lt;uchar>&amp; memberId_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>memberId_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Arrow_7506B42946B4C4C9499B64E0FE48276FA65FC12E">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Name_Arrow_CD8F9745A9B386B065680CEE7FBEFF44DDB421B6">
                            <name>Name() const</name>
                            <syntax>public nothrow override String&lt;uchar> Name() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Print_Arrow_ABF575422FE75204BD6DA7B387CA009E100D8A57">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_As_17FE45AC637C4950CB0B2BBFEE789A84A32233B8">
                    <name>As</name>
                    <groupName>As</groupName>
                    <syntax> public class As;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_As_5AAF0640A29ADE3AB28C8180BB6FD29186EF76A4">
                            <name>As(DomObject* expr_, DomObject* targetTypeExpr_)</name>
                            <syntax>public As(DomObject* expr_, DomObject* targetTypeExpr_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>expr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>targetTypeExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_As_1AA3F9C096B93BEE62C077FF71BC177622A9D4D3">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696">
                    <name>AssertStatement</name>
                    <groupName>AssertStatement</groupName>
                    <syntax> public class AssertStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_AssertStatement_C362F17195DD7FE6CFCD0940CD90E7B36A295AE1">
                            <name>AssertStatement(DomObject* assertExpr_)</name>
                            <syntax>public AssertStatement(DomObject* assertExpr_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>assertExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_AssertStatement_2536451EA08D034B02C8D72B8EA89F54299673C8">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_AssertStatement_07D9867C4438DA3198F57A99127AEEA143E0B6FD">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_AssignmentStatement_CD891DADD31EA0AD502EF64C3B188877E8D8CE3D">
                    <name>AssignmentStatement</name>
                    <groupName>AssignmentStatement</groupName>
                    <syntax> public class AssignmentStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_AssignmentStatement_E8EE9FFB12C0CFFAB328A860640333FA66453791">
                            <name>AssignmentStatement(DomObject* targetExpr_, DomObject* sourceExpr_)</name>
                            <syntax>public AssignmentStatement(DomObject* targetExpr_, DomObject* sourceExpr_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>targetExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>sourceExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_AssignmentStatement_8EF79AEF23226DD42DD33229515C09C154848233">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_AssignmentStatement_A6ACA99E7DAC6430FE64F671EACA2B8D7AEC4541">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Base_73ED723570AFFF8A0EA419972F0FFFB15945ABDB">
                    <name>Base</name>
                    <groupName>Base</groupName>
                    <syntax> public class Base;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="default_constructor_Base_DE88F544D7160BB0FD2947D66889A36A2D9DE160">
                            <name>Base()</name>
                            <syntax>public Base();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Base_21C2E74AB8182B277D6BA8CD00484B34096141D9">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C">
                    <name>BinaryExpression</name>
                    <groupName>BinaryExpression</groupName>
                    <syntax>abstract public class BinaryExpression;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_BinaryExpression_4F625B4717FE668ACF5D4334BB0989210DC8EF36">
                            <name>BinaryExpression(Operator op_, DomObject* left_, DomObject* right_)</name>
                            <syntax>public BinaryExpression(Operator op_, DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>op_</name>
                                    <type ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                                </parameter>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_BinaryExpression_9E40F1D4B944D025D86F3E3D79604DE9F3E55B6B">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_BinaryExpression_3B36FE3D8BA26BA885CD9B3DC9CAA9760D82FD29">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_BitAnd_C18E427EDF0266B9DE4A7AF49DF7814F4508A300">
                    <name>BitAnd</name>
                    <groupName>BitAnd</groupName>
                    <syntax> public class BitAnd;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_BitAnd_AEA4947DC5EBF8C888BDCE349AE3034BA5C4D62E">
                            <name>BitAnd(DomObject* left_, DomObject* right_)</name>
                            <syntax>public BitAnd(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_BitAnd_1EF91C9C8DBECD7438A3DA17C9023535E60EF14D">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_BitOr_7AFF6998C572E610457C1E96CEA6E60FE5F10EE5">
                    <name>BitOr</name>
                    <groupName>BitOr</groupName>
                    <syntax> public class BitOr;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_BitOr_9C775B941A03BDC339528929369C4F81C7A1C6C9">
                            <name>BitOr(DomObject* left_, DomObject* right_)</name>
                            <syntax>public BitOr(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_BitOr_9D75CBEFF73717A9009153AFCD45C5B19E7551A5">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_BitXor_6E4A68B918EAF05039242CA6E5A108EDE3A875CC">
                    <name>BitXor</name>
                    <groupName>BitXor</groupName>
                    <syntax> public class BitXor;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_BitXor_77A2A8CB11E834056FDD0BCD840A413567F57BBC">
                            <name>BitXor(DomObject* left_, DomObject* right_)</name>
                            <syntax>public BitXor(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_BitXor_18866FC5A019D039EE0BA64F6CA4C6BE8A6C4645">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_BoolType_CA99F7D292715338D750C5405548D95A95E200EC">
                    <name>BoolType</name>
                    <groupName>BoolType</groupName>
                    <syntax> public class BoolType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_BoolType_792AB2CC5CC32731C2FF3238D18586DD35D74ED2">
                            <name>BoolType()</name>
                            <syntax>public nothrow BoolType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_BoolType_7B91C970F300714F894F70BE558AB667BD254819">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_BreakStatement_4B85AA125DCD9CEF1305B090C2F86B174A514580">
                    <name>BreakStatement</name>
                    <groupName>BreakStatement</groupName>
                    <syntax> public class BreakStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="default_constructor_BreakStatement_3FD764BB2173314CE967D7ABB7CC80AEDF014CCA">
                            <name>BreakStatement()</name>
                            <syntax>public BreakStatement();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_BreakStatement_6A49393BE27AB8B0A9674B09102302C12D58CBA3">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_BreakStatement_EB526300E7ADDD88D17D7EB380AF0815B29CED46">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ByteType_490AEA1EE94BBCC3A1DFB53231F83959E2168A77">
                    <name>ByteType</name>
                    <groupName>ByteType</groupName>
                    <syntax> public class ByteType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_ByteType_99FC6A7D77D465DDBE8BB7FFD9EE0F109121F52B">
                            <name>ByteType()</name>
                            <syntax>public nothrow ByteType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ByteType_6EBB20F251612E6BE6BC06564E07E298C0F7DA08">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_CaseStatement_C59D9EE2EB215BB01443FA26C029108CF42800A1">
                    <name>CaseStatement</name>
                    <groupName>CaseStatement</groupName>
                    <syntax> public class CaseStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="default_constructor_CaseStatement_7D895A97573B6ABF00749F321D3BCBD6B7BDC674">
                            <name>CaseStatement()</name>
                            <syntax>public CaseStatement();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_CaseStatement_3ED38BF29C4137EA0F55E89E2CC7ED735BEA7B3F">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddCaseExpr_CaseStatement_F3489157DC1C30AE97C79D5ADC80E17E7DB0E525">
                            <name>AddCaseExpr(DomObject* caseExpr)</name>
                            <syntax>public void AddCaseExpr(DomObject* caseExpr);</syntax>
                            <parameters>
                                <parameter>
                                    <name>caseExpr</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddStatement_CaseStatement_6F1DC9BB34C8C90CA8F31148DD539877B1597DAD">
                            <name>AddStatement(Statement* statement)</name>
                            <syntax>public void AddStatement(Statement* statement);</syntax>
                            <parameters>
                                <parameter>
                                    <name>statement</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_CaseStatement_770204373D050CAAB07D7482753E2A92CFF5FBEC">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Cast_9585B1B3446BC83A49E6CDB7486A782150BE11FC">
                    <name>Cast</name>
                    <groupName>Cast</groupName>
                    <syntax> public class Cast;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_Cast_29308124D20BDBA0E7392E83F495EBB90856BFFE">
                            <name>Cast(DomObject* targetTypeExpr_, DomObject* sourceExpr_)</name>
                            <syntax>public Cast(DomObject* targetTypeExpr_, DomObject* sourceExpr_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>targetTypeExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>sourceExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Cast_A4E54F9592C4E2A153CAC3B251D978671A90CDCD">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_Cast_D1E4A5170E18662C0109A6F3A85265C8E980A62C">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Catch_0582D6C1CDCCCB626ECB14F1DA1432D9E2111A37">
                    <name>Catch</name>
                    <groupName>Catch</groupName>
                    <syntax> public class Catch;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_Catch_8FA04C9C68E8230406061986187DFC621C8C02C2">
                            <name>Catch(DomObject* typeExpr_, DomObject* id_, CompoundStatement* catchBlock_)</name>
                            <syntax>public Catch(DomObject* typeExpr_, DomObject* id_, CompoundStatement* catchBlock_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>typeExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>id_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>catchBlock_</name>
                                    <type ref="type.36ef9524-152b-4d56-a223-9deda1c9d47a"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Catch_1572006C4D0B812C7A3A535D6E99ABE0A11800AE">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_Catch_F9485E88285C81A73047AB394FB394EFBC83BBFC">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_CharType_779EBB19F92F0A89BF9304EC9025AA8E9CEC1C15">
                    <name>CharType</name>
                    <groupName>CharType</groupName>
                    <syntax> public class CharType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_CharType_E1B7A1E44A259B89E2E6097CC72D0E814AED0904">
                            <name>CharType()</name>
                            <syntax>public nothrow CharType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_CharType_CDCAD88D6976C04C9DD661DCDA7254865EE31A0C">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5">
                    <name>Complement</name>
                    <groupName>Complement</groupName>
                    <syntax> public class Complement;</syntax>
                    <baseClass ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                    <constructors>
                        <constructor id="constructor_Complement_651BB4CB810D97C5BC7406A830DDA1C5343F7DFA">
                            <name>Complement(DomObject* subject_)</name>
                            <syntax>public Complement(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Complement_6A7106D46D68F50FED6EC9A7EEAD5EBBC3880568">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9">
                    <name>CompoundStatement</name>
                    <groupName>CompoundStatement</groupName>
                    <syntax> public class CompoundStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="default_constructor_CompoundStatement_35FB9F27ED1250559E3297CA012112EFF2F0EE32">
                            <name>CompoundStatement()</name>
                            <syntax>public CompoundStatement();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_CompoundStatement_0D71EBB712C6FCE2948772BFC7E17C7625C7923E">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddStatement_CompoundStatement_6F389D25143A65C1ECD5D2752F54D206560443DA">
                            <name>AddStatement(Statement* statement)</name>
                            <syntax>public void AddStatement(Statement* statement);</syntax>
                            <parameters>
                                <parameter>
                                    <name>statement</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_CompoundStatement_FCC85205CD991E1ED9600E7DB9F88E6763D6F448">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Conjunction_0132C4E38ACB57C960C99B8800089A5ED52CB3AD">
                    <name>Conjunction</name>
                    <groupName>Conjunction</groupName>
                    <syntax> public class Conjunction;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Conjunction_B180AB2ED6DE790A39F6075AE7D9EC71E0821B37">
                            <name>Conjunction(DomObject* left_, DomObject* right_)</name>
                            <syntax>public Conjunction(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Conjunction_07E7C98DC6C6219B169982C0FF255808DB98B5B2">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A">
                    <name>Const</name>
                    <groupName>Const</groupName>
                    <syntax> public class Const;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_Const_A36B9AC5AC815B85CBDD049E38905A8245727ECD">
                            <name>Const(DomObject* subject_)</name>
                            <syntax>public nothrow Const(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Const_B23F75E42AA8D53ABE7D4213D909DA494DE8BEF9">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Name_Const_6526262D38A73227D8E0606BE200F16047FD923E">
                            <name>Name() const</name>
                            <syntax>public nothrow override String&lt;uchar> Name() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Print_Const_72279CD6C965F9E586D3EBDF39128EBCE1B03848">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8">
                    <name>Construct</name>
                    <groupName>Construct</groupName>
                    <syntax> public class Construct;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_Construct_0D34FA7963949A42BB3FA6946B89F8CF090ED4C9">
                            <name>Construct(DomObject* typeExpr_)</name>
                            <syntax>public Construct(DomObject* typeExpr_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>typeExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Construct_97D335DCC83CEAAB93666256F7CE2D724C9EB653">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddArgument_Construct_E46ADD53FB8ACFFF654CF7F5681C691DC41CB7A6">
                            <name>AddArgument(DomObject* argument)</name>
                            <syntax>public override void AddArgument(DomObject* argument);</syntax>
                            <parameters>
                                <parameter>
                                    <name>argument</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_Construct_DC05CDF4E7292AFC426F54CCE1ABA1053AD13624">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ConstructionStatement_0E8F6D33B33CABF85AEE993CBB0F609D7E941AEA">
                    <name>ConstructionStatement</name>
                    <groupName>ConstructionStatement</groupName>
                    <syntax> public class ConstructionStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_ConstructionStatement_A3706F0577B21E5D71EF0A20AF1E8BD155CB5ABF">
                            <name>ConstructionStatement(DomObject* typeExpr_, DomObject* id_)</name>
                            <syntax>public ConstructionStatement(DomObject* typeExpr_, DomObject* id_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>typeExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>id_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ConstructionStatement_5FB3CE625510F056D2FD2A567C6B14DCE5C92F37">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddArgument_ConstructionStatement_A6BB930B4F5AC87F7F78DF11836312464196EBBE">
                            <name>AddArgument(DomObject* argument)</name>
                            <syntax>public override void AddArgument(DomObject* argument);</syntax>
                            <parameters>
                                <parameter>
                                    <name>argument</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_ConstructionStatement_138A4E32294704D1C23C48CE6D73862A01E125C6">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetParens_ConstructionStatement_E07BC32EC1EEEAACF01D7CFCDBF3CDD998A209F5">
                            <name>SetParens()</name>
                            <syntax>public nothrow void SetParens();</syntax>
                        </function>
                    </functions>
                </class>
                <class id="class_ContinueStatement_42B62A34F11C57D46CBD9B9E4C6DC070CA7E1CFC">
                    <name>ContinueStatement</name>
                    <groupName>ContinueStatement</groupName>
                    <syntax> public class ContinueStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="default_constructor_ContinueStatement_9F7D50B0337CF0CCC235B31AE9DE89119E885233">
                            <name>ContinueStatement()</name>
                            <syntax>public ContinueStatement();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ContinueStatement_9B6818853C7F45C850C62180181707D7EA8E0663">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_ContinueStatement_9E9B1D4720C003FA34157E18AE2D391FE9516165">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_DefaultStatement_431BBB02B62D93DF15B8BA112275D930065BD749">
                    <name>DefaultStatement</name>
                    <groupName>DefaultStatement</groupName>
                    <syntax> public class DefaultStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="default_constructor_DefaultStatement_5C2BD34156F53E58A73DF84B2D65A396C5F13892">
                            <name>DefaultStatement()</name>
                            <syntax>public DefaultStatement();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_DefaultStatement_33E13FFDF81A52D5988D2253BDF89D356F7E8C7F">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddStatement_DefaultStatement_AE9DBBDA956204A9665A6075B40860E0406989B7">
                            <name>AddStatement(Statement* statement)</name>
                            <syntax>public void AddStatement(Statement* statement);</syntax>
                            <parameters>
                                <parameter>
                                    <name>statement</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_DefaultStatement_B5CA6ACB809DE4B499DE1C6C9FBA0D926E4C9DC2">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A">
                    <name>DeleteStatement</name>
                    <groupName>DeleteStatement</groupName>
                    <syntax> public class DeleteStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_DeleteStatement_25B7ADB6431D2A504EA2C15134C0E9681F438218">
                            <name>DeleteStatement(DomObject* expression_)</name>
                            <syntax>public DeleteStatement(DomObject* expression_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>expression_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_DeleteStatement_DEB0A761C3FDFF0F297800C8367E17384B347EA8">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_DeleteStatement_C25506CD8D6C409801F827F7E7EEBF79A4528589">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594">
                    <name>Deref</name>
                    <groupName>Deref</groupName>
                    <syntax> public class Deref;</syntax>
                    <baseClass ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                    <constructors>
                        <constructor id="constructor_Deref_FF28839199F4E2C2DEC28AAD4F495CF556BA8480">
                            <name>Deref(DomObject* subject_)</name>
                            <syntax>public Deref(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Deref_99FFA7F4F973D7840CDD7BB09A8E27C7DB31F505">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550">
                    <name>DestroyStatement</name>
                    <groupName>DestroyStatement</groupName>
                    <syntax> public class DestroyStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_DestroyStatement_9F2CFF93B4AF1C0F1A21E92D90ADA807A3E1702D">
                            <name>DestroyStatement(DomObject* expression_)</name>
                            <syntax>public DestroyStatement(DomObject* expression_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>expression_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_DestroyStatement_E90F18047AA6DB785DCCA25296610B2207CC1600">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_DestroyStatement_B006144A691DBAF3E7E4F827B440C588E5F528B5">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Disjunction_F31E3B03B7D35E04D91C7E729F2351D3957CC86E">
                    <name>Disjunction</name>
                    <groupName>Disjunction</groupName>
                    <syntax> public class Disjunction;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Disjunction_1B5EE0E4EA6770F90BBA7757083AD3AE44208277">
                            <name>Disjunction(DomObject* left_, DomObject* right_)</name>
                            <syntax>public Disjunction(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Disjunction_AA1155E2C1F466D85041177BE18E605556F5F773">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Div_870BC7AD6CF194517E350C8AF37CEAA3E22F8231">
                    <name>Div</name>
                    <groupName>Div</groupName>
                    <syntax> public class Div;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Div_53B798EAF23879F742A8CD086C250067649F056C">
                            <name>Div(DomObject* left_, DomObject* right_)</name>
                            <syntax>public Div(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Div_9BF48920D9B109813CB790FA1E2C9E1C928282DF">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_DoStatement_2DE84CAC1D895D9020F0342FAD7D807D41BC6D0E">
                    <name>DoStatement</name>
                    <groupName>DoStatement</groupName>
                    <syntax> public class DoStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_DoStatement_5EF42A6681B009E37BE9405448BCEA8EFA04F7E8">
                            <name>DoStatement(DomObject* condition_, Statement* statement_)</name>
                            <syntax>public DoStatement(DomObject* condition_, Statement* statement_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>condition_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>statement_</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_DoStatement_8FFAF0D96F83556BDE9A3BD083E669AC57ED95DD">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_DoStatement_FFA320A5A8D61175626A25E560105289CD07BCCE">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF">
                    <name>DomObject</name>
                    <groupName>DomObject</groupName>
                    <syntax>abstract public class DomObject;</syntax>
                    <constructors>
                        <constructor id="constructor_DomObject_BB42E44FB17A2C144C36E5C531EB57955DB9B6ED">
                            <name>DomObject(const String&lt;uchar>&amp; name_)</name>
                            <syntax>public nothrow DomObject(const String&lt;uchar>&amp; name_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_DomObject_4CA8814E15131A836452A9E7C1283F75EB49AA78">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public abstract void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddArgument_DomObject_4002324F52B1814870A359D13BF3F41033690D39">
                            <name>AddArgument(DomObject* argument)</name>
                            <syntax>public virtual void AddArgument(DomObject* argument);</syntax>
                            <parameters>
                                <parameter>
                                    <name>argument</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Name_DomObject_6D0E0D534FDE9AEFE0AA0D92489FC8CDD8DC7839">
                            <name>Name() const</name>
                            <syntax>public nothrow virtual String&lt;uchar> Name() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Parens_DomObject_5762B876F810623A5AA19DB8D3E8E9A546F2EE32">
                            <name>Parens() const</name>
                            <syntax>public nothrow inline bool Parens() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_Print_DomObject_1246D42C75EE05BDA21694F1AA36881375183A9B">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public virtual void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Rank_DomObject_2686A5B4BCE675013EC2424D0603072B2A15D2EE">
                            <name>Rank() const</name>
                            <syntax>public nothrow virtual int Rank() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                        <function id="member_function_SetName_DomObject_2F016D62E3F95490A58FCD802C70C53E5379D659">
                            <name>SetName(const String&lt;uchar>&amp; name_)</name>
                            <syntax>public nothrow void SetName(const String&lt;uchar>&amp; name_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetParens_DomObject_E242CDA6377C17AB88F8975E04006D60BFA6B353">
                            <name>SetParens()</name>
                            <syntax>public nothrow inline void SetParens();</syntax>
                        </function>
                    </functions>
                </class>
                <class id="class_Dot_3DBFB45CB93A3D81709E97835834A09CB64DBFD8">
                    <name>Dot</name>
                    <groupName>Dot</groupName>
                    <syntax> public class Dot;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_Dot_C2692D1EB06D2B442F0D9855769E507DB30D03EE">
                            <name>Dot(DomObject* subject_, const String&lt;uchar>&amp; memberId_)</name>
                            <syntax>public nothrow Dot(DomObject* subject_, const String&lt;uchar>&amp; memberId_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>memberId_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Dot_FA64586D4849A65088EECCF457C7B54458FDBCF9">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Name_Dot_27A6F1521DFA2F36C8378955073963DDFE7E9F8F">
                            <name>Name() const</name>
                            <syntax>public nothrow override String&lt;uchar> Name() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Print_Dot_4C64FBE740DD174226181C1C295B38741FA93CFE">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_DoubleType_2F54DB2225723BF66747F0EE8930D97AEAC3087B">
                    <name>DoubleType</name>
                    <groupName>DoubleType</groupName>
                    <syntax> public class DoubleType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_DoubleType_7B9BFB3336061617206E6A35728A51C5C9D4E55A">
                            <name>DoubleType()</name>
                            <syntax>public nothrow DoubleType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_DoubleType_245B71EA11A749DD434979D14D1DBEC84783CAE5">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_EmptyStatement_6FB774F9105B54DBC81384D86B6519B51F8CEC1A">
                    <name>EmptyStatement</name>
                    <groupName>EmptyStatement</groupName>
                    <syntax> public class EmptyStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="default_constructor_EmptyStatement_D3FA4A5E7EA5A75A679D4A1F755F0D8F01AB2E74">
                            <name>EmptyStatement()</name>
                            <syntax>public EmptyStatement();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_EmptyStatement_AA42B316DA65EA1A6595E2057BAD0A41AFD3DF60">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_EmptyStatement_FC2B1B707E0D475DB7B9315C050D309C5F02025B">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Equal_3EF4BE86B509FD01F694F7C4806B5C900557528A">
                    <name>Equal</name>
                    <groupName>Equal</groupName>
                    <syntax> public class Equal;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Equal_85A86E2AE844984246B05A7ED2EC4DFB5F1DF85F">
                            <name>Equal(DomObject* left_, DomObject* right_)</name>
                            <syntax>public Equal(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Equal_EF179A960A81918528869543603655C0038043EE">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Expression_63F45770E98CB553F848612A60783A045B1137F7">
                    <name>Expression</name>
                    <groupName>Expression</groupName>
                    <syntax>abstract public class Expression;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_Expression_F3EC2994CDFCE8518383F792F79C6BFC4DF3D6AF">
                            <name>Expression(const String&lt;uchar>&amp; name_, int rank_)</name>
                            <syntax>public nothrow Expression(const String&lt;uchar>&amp; name_, int rank_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                                <parameter>
                                    <name>rank_</name>
                                    <type ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Rank_Expression_73E7C240E1CE1146B2CDDFA7FC21373807437118">
                            <name>Rank() const</name>
                            <syntax>public nothrow override int Rank() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                    </functions>
                </class>
                <class id="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54">
                    <name>ExpressionStatement</name>
                    <groupName>ExpressionStatement</groupName>
                    <syntax> public class ExpressionStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_ExpressionStatement_A0E12EC88A1ECCCBAE1E320F273D742E42296764">
                            <name>ExpressionStatement(DomObject* expression_)</name>
                            <syntax>public ExpressionStatement(DomObject* expression_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>expression_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ExpressionStatement_77A835CCC88201B3C5B2E539F41619FE743E3CDC">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_ExpressionStatement_73C53117C30BD50EFBCF054B2949D8B7FD7CDD27">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_FloatType_F56BE7D1812AE8764A94A3C4A98DBCACB5F6BD11">
                    <name>FloatType</name>
                    <groupName>FloatType</groupName>
                    <syntax> public class FloatType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_FloatType_72515A0BE0D1F56C8F44B939479584C8D0D6A8E7">
                            <name>FloatType()</name>
                            <syntax>public nothrow FloatType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_FloatType_A2FD85ABBAEEC2CA6A59D0BDC55622D4946AFB7F">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ForStatement_2C9CB31D518BF6F5E055FFE544F154898DB891FC">
                    <name>ForStatement</name>
                    <groupName>ForStatement</groupName>
                    <syntax> public class ForStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_ForStatement_F302E1B3B9EB52C899DE40C159DD5066BD5A463C">
                            <name>ForStatement(Statement* initS_, DomObject* condition_, Statement* loopS_, Statement* actionS_)</name>
                            <syntax>public ForStatement(Statement* initS_, DomObject* condition_, Statement* loopS_, Statement* actionS_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>initS_</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                                <parameter>
                                    <name>condition_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>loopS_</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                                <parameter>
                                    <name>actionS_</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ForStatement_12CB382271601C3DA47D1984BBF825FF498AEA66">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_ForStatement_356ED241B53FCA2587B8123C5F55690718D2C52C">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D">
                    <name>GotoCaseStatement</name>
                    <groupName>GotoCaseStatement</groupName>
                    <syntax> public class GotoCaseStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_GotoCaseStatement_E3DF862620B8A365411F81E72C1B362C0DDAB4D2">
                            <name>GotoCaseStatement(DomObject* targetCase_)</name>
                            <syntax>public GotoCaseStatement(DomObject* targetCase_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>targetCase_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_GotoCaseStatement_965BDBC033F3602B8F35D11B89DB256C302C2EC3">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_GotoCaseStatement_34B2C09F51D8FB8AB8F4BB985E9A447E2BB0635C">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_GotoDefaultStatement_A0F05081B3A8A0CF31277B3E9AB698FF523E7B9F">
                    <name>GotoDefaultStatement</name>
                    <groupName>GotoDefaultStatement</groupName>
                    <syntax> public class GotoDefaultStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="default_constructor_GotoDefaultStatement_239546857706AB0793095FDCFC352ABE0EC39465">
                            <name>GotoDefaultStatement()</name>
                            <syntax>public GotoDefaultStatement();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_GotoDefaultStatement_47F65BA43864B18B67C3D6C46B73EAF31FAB4A45">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_GotoDefaultStatement_C47EB42FF7C8BED74EFC5DDFA2B38FB56401AFCC">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E">
                    <name>GotoStatement</name>
                    <groupName>GotoStatement</groupName>
                    <syntax> public class GotoStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_GotoStatement_AC111BA558E2D63E81821C990B9FE1B129BEE2D0">
                            <name>GotoStatement(const String&lt;uchar>&amp; target_)</name>
                            <syntax>public GotoStatement(const String&lt;uchar>&amp; target_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>target_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_GotoStatement_56A12340897DBB13D73A72BC1EA125E8718ED92C">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_GotoStatement_B6D5606A0FA9BC236AB3DE717B0C508A9B95C5C9">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Greater_615FAE96F23C7D50557A473DB2E1090BB39F1311">
                    <name>Greater</name>
                    <groupName>Greater</groupName>
                    <syntax> public class Greater;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Greater_CB9A0699459A3B33E06350B1D1821176C456ABDD">
                            <name>Greater(DomObject* left_, DomObject* right_)</name>
                            <syntax>public Greater(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Greater_EE70BF855E54AB427D41A7ABF66FDB31DEF742DE">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_GreaterOrEqual_4400FB33354DC18FE0061555E68C302AD3CE11E6">
                    <name>GreaterOrEqual</name>
                    <groupName>GreaterOrEqual</groupName>
                    <syntax> public class GreaterOrEqual;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_GreaterOrEqual_1DFC83CB62EEB8DB53E7895737F8E974C343631D">
                            <name>GreaterOrEqual(DomObject* left_, DomObject* right_)</name>
                            <syntax>public GreaterOrEqual(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_GreaterOrEqual_C80615229A0C0E9F9D9BC3BB5DA86A4F12E1C833">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7">
                    <name>Identifier</name>
                    <groupName>Identifier</groupName>
                    <syntax> public class Identifier;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_Identifier_06EA8057993C062B3EF81A9500303464A3F0FFAD">
                            <name>Identifier(const String&lt;uchar>&amp; name_)</name>
                            <syntax>public nothrow Identifier(const String&lt;uchar>&amp; name_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Identifier_8B2EE033F2E7DD641EA5FC1659DE772FD876C998">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Rank_Identifier_DD14320B57C2C28BD9E7EE654A1D6650A33F433B">
                            <name>Rank() const</name>
                            <syntax>public nothrow override int Rank() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                    </functions>
                </class>
                <class id="class_IfStatement_C1EF6483EAB3986BA6A34F9E4C9ED4C0F2F824DE">
                    <name>IfStatement</name>
                    <groupName>IfStatement</groupName>
                    <syntax> public class IfStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_IfStatement_2F5F523924C37FEC1EEE677D441DAF48AE1D1E6D">
                            <name>IfStatement(DomObject* condition_, Statement* thenS_, Statement* elseS_)</name>
                            <syntax>public IfStatement(DomObject* condition_, Statement* thenS_, Statement* elseS_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>condition_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>thenS_</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                                <parameter>
                                    <name>elseS_</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_IfStatement_7CDCB83B87B6DDB0BA9BA03B13F1295B1572CE2F">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_IfStatement_60BC87DAC2FB3CB2DFEB3428719EC2EE5F549A96">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Indexing_F06FD2A01CA08D73D3B848268E78E8185020CBA4">
                    <name>Indexing</name>
                    <groupName>Indexing</groupName>
                    <syntax> public class Indexing;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_Indexing_234AD633DABEC36EFC3E84A553611FF6B16DCE1B">
                            <name>Indexing(DomObject* subject_, DomObject* index_)</name>
                            <syntax>public Indexing(DomObject* subject_, DomObject* index_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>index_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Indexing_1F4CD2105D19BE5EFA2D58AB374588433A2DDF71">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Name_Indexing_4B3A10CFF444D215FB34B7E09E50FFD13C688115">
                            <name>Name() const</name>
                            <syntax>public nothrow override String&lt;uchar> Name() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Print_Indexing_0A36B0A85C4CB87F78ABA0AE30F90D3D6006D24F">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_IntType_40DD4EEE7B839A4874F17F4DF4577431DCA81D97">
                    <name>IntType</name>
                    <groupName>IntType</groupName>
                    <syntax> public class IntType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_IntType_65CE78B0FC0B4F39E48BB85ED17DE93500572E2F">
                            <name>IntType()</name>
                            <syntax>public nothrow IntType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_IntType_A0BEB0435086A9FB6D1238A32DA6E60C24355168">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5">
                    <name>Invoke</name>
                    <groupName>Invoke</groupName>
                    <syntax> public class Invoke;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_Invoke_92B72739DB687F71DA4EF207BFF0F32F2C4FCC46">
                            <name>Invoke(DomObject* subject_)</name>
                            <syntax>public Invoke(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Invoke_67603DECCFDB8F8885DEAD1F07BD40922EE08CFE">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddArgument_Invoke_22164B46D53BD15F327B0CC593BEDBD713B8FB5E">
                            <name>AddArgument(DomObject* argument)</name>
                            <syntax>public override void AddArgument(DomObject* argument);</syntax>
                            <parameters>
                                <parameter>
                                    <name>argument</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_Invoke_8C51DD2578441380A2934C5B2F3849BD32B02AFC">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Is_EC0C6DA58F33941C0957B3F764732D8472F6E088">
                    <name>Is</name>
                    <groupName>Is</groupName>
                    <syntax> public class Is;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Is_B4956514C353D3F636675280CB953A1AFA712187">
                            <name>Is(DomObject* expr_, DomObject* targetTypeExpr_)</name>
                            <syntax>public Is(DomObject* expr_, DomObject* targetTypeExpr_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>expr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>targetTypeExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Is_A6ACA04F445E754031A14D7F5AA5DCEA459DABC3">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Less_1580A37986A6536C269A3DC15DC3E14E4C0804EA">
                    <name>Less</name>
                    <groupName>Less</groupName>
                    <syntax> public class Less;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Less_4778D13997E4BD55ACE54DB44560F58157FFBFBE">
                            <name>Less(DomObject* left_, DomObject* right_)</name>
                            <syntax>public Less(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Less_111DA2A52F16CDEC383AD77BADE1925B191A5B3A">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_LessOrEqual_9091963D31C6715767D56C999742B7722B15871F">
                    <name>LessOrEqual</name>
                    <groupName>LessOrEqual</groupName>
                    <syntax> public class LessOrEqual;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_LessOrEqual_1B5F718D3785EB324F9109519DB1B017DDDDE4C2">
                            <name>LessOrEqual(DomObject* left_, DomObject* right_)</name>
                            <syntax>public LessOrEqual(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_LessOrEqual_D5A25F3B0E6B498F802EBA943BB181C4A87DBEB4">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77">
                    <name>Literal</name>
                    <groupName>Literal</groupName>
                    <syntax> public class Literal;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_Literal_C02938AFB06C9B321096C8EEECD38495C005318E">
                            <name>Literal(const String&lt;uchar>&amp; text)</name>
                            <syntax>public nothrow Literal(const String&lt;uchar>&amp; text);</syntax>
                            <parameters>
                                <parameter>
                                    <name>text</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Literal_14339607FA8681E34F2FB6F8BC7C45BAF78FDB7E">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_LongType_F67B8047273646A168685FD9A0A063CEDFF5131C">
                    <name>LongType</name>
                    <groupName>LongType</groupName>
                    <syntax> public class LongType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_LongType_85E88EFF30C2511112CC4C29F3B4B008C5500C9C">
                            <name>LongType()</name>
                            <syntax>public nothrow LongType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_LongType_C2C43539F32B952471DADDA66190DFEFF664B560">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05">
                    <name>LvalueRef</name>
                    <groupName>LvalueRef</groupName>
                    <syntax> public class LvalueRef;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_LvalueRef_33268CEFAE38C6A1C99C84C80C5FA7C195201347">
                            <name>LvalueRef(DomObject* subject_)</name>
                            <syntax>public nothrow LvalueRef(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_LvalueRef_9113257276B3B5EC54A97BD6A9F433B5B97DCADC">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Name_LvalueRef_F9357CDF8C56E06C69E4098F2B49638B42A2E61F">
                            <name>Name() const</name>
                            <syntax>public nothrow override String&lt;uchar> Name() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Print_LvalueRef_F6FD9A9334444797F38356301D1D325AD17EA49B">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Mul_34532DF2D76B7BA144AA0E44CCBF15EA39D37CCF">
                    <name>Mul</name>
                    <groupName>Mul</groupName>
                    <syntax> public class Mul;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Mul_49633C50D9434A3D47265BD0E483210C35DAAF3E">
                            <name>Mul(DomObject* left_, DomObject* right_)</name>
                            <syntax>public Mul(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Mul_8824CBD274EA8FB4FF9BEE22CB073277D46EE709">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21">
                    <name>New</name>
                    <groupName>New</groupName>
                    <syntax> public class New;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_New_21CBB6331DCA5324034437D42FFD77E43CA3977C">
                            <name>New(DomObject* typeExpr_)</name>
                            <syntax>public New(DomObject* typeExpr_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>typeExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_New_563D3F417AC64BF2787B487CC34D285156FC8791">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddArgument_New_E48425D2132CCF6DCC7570381290B98D8299591A">
                            <name>AddArgument(DomObject* argument)</name>
                            <syntax>public override void AddArgument(DomObject* argument);</syntax>
                            <parameters>
                                <parameter>
                                    <name>argument</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_New_28A2BAC49C1E769BE6A4903626E913A481E2C429">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187">
                    <name>Not</name>
                    <groupName>Not</groupName>
                    <syntax> public class Not;</syntax>
                    <baseClass ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                    <constructors>
                        <constructor id="constructor_Not_E09D73F3998C8D1BE4FCB7F3CBD9D508E3D4A39A">
                            <name>Not(DomObject* subject_)</name>
                            <syntax>public Not(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Not_938BB9975D21A33622CC79FA41C9EF7708620A1B">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_NotEqual_57BE2D644B155B649C949C1AB40D6F621FE9F457">
                    <name>NotEqual</name>
                    <groupName>NotEqual</groupName>
                    <syntax> public class NotEqual;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_NotEqual_66053AB87D8351FCFD9F0A420310301B830C5FDC">
                            <name>NotEqual(DomObject* left_, DomObject* right_)</name>
                            <syntax>public NotEqual(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_NotEqual_4319FDDE20899513DCF292A96A975A1E64E98558">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6">
                    <name>Pointer</name>
                    <groupName>Pointer</groupName>
                    <syntax> public class Pointer;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_Pointer_F5C199343647D691F54D1FF572745C55D1F0667D">
                            <name>Pointer(DomObject* subject_)</name>
                            <syntax>public nothrow Pointer(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Pointer_EF9550CE6336357EF9FFACA7FA5E8715BFA0356A">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Name_Pointer_D5600FA2F4ECD234D77DABF5F31B6C583F3F2716">
                            <name>Name() const</name>
                            <syntax>public nothrow override String&lt;uchar> Name() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Print_Pointer_F25245A4547E9820AAB2D2BB5E704C0EEB2FC2BD">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392">
                    <name>PostfixDecrement</name>
                    <groupName>PostfixDecrement</groupName>
                    <syntax> public class PostfixDecrement;</syntax>
                    <baseClass ref="class_PostfixExpression_09A9F6851C2A6B2C5C4B926050A1F22378DE15A3"/>
                    <constructors>
                        <constructor id="constructor_PostfixDecrement_DC7474395CF5CDAE9DAD1E2FD86BFC05F0B51A00">
                            <name>PostfixDecrement(DomObject* subject_)</name>
                            <syntax>public PostfixDecrement(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_PostfixDecrement_90E778C7672B1E09D16EAAF23A7E7C1AD5B642AB">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_PostfixExpression_09A9F6851C2A6B2C5C4B926050A1F22378DE15A3">
                    <name>PostfixExpression</name>
                    <groupName>PostfixExpression</groupName>
                    <syntax>abstract public class PostfixExpression;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_PostfixExpression_CB4FDDC5858E6036F8A9CBB1607BA2F5D39BDD01">
                            <name>PostfixExpression(DomObject* subject_, Operator op_)</name>
                            <syntax>public PostfixExpression(DomObject* subject_, Operator op_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>op_</name>
                                    <type ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_PostfixExpression_33A0537C68AE78FE90382A2860C2C83E388FA6A8">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_PostfixExpression_F643C3E8F731E55A6EB9CEF8C9F5A13636E5F177">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9">
                    <name>PostfixIncrement</name>
                    <groupName>PostfixIncrement</groupName>
                    <syntax> public class PostfixIncrement;</syntax>
                    <baseClass ref="class_PostfixExpression_09A9F6851C2A6B2C5C4B926050A1F22378DE15A3"/>
                    <constructors>
                        <constructor id="constructor_PostfixIncrement_90C8FBA27B48C0C99938F23A1AFB1D2C590CBB18">
                            <name>PostfixIncrement(DomObject* subject_)</name>
                            <syntax>public PostfixIncrement(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_PostfixIncrement_3FD1090D67FC659751C6828D84B0B2D4627288BE">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0">
                    <name>PrefixDecrement</name>
                    <groupName>PrefixDecrement</groupName>
                    <syntax> public class PrefixDecrement;</syntax>
                    <baseClass ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                    <constructors>
                        <constructor id="constructor_PrefixDecrement_9BA86A49C7BF0B604DEE1BAA953CD14D29FD4269">
                            <name>PrefixDecrement(DomObject* subject_)</name>
                            <syntax>public PrefixDecrement(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_PrefixDecrement_7C3753C3450F67663628EDDC528087D36A5228F8">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948">
                    <name>PrefixExpression</name>
                    <groupName>PrefixExpression</groupName>
                    <syntax>abstract public class PrefixExpression;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_PrefixExpression_55BB390293B66B433E77F50FE7CCBAC01799D294">
                            <name>PrefixExpression(Operator op_, DomObject* subject_)</name>
                            <syntax>public PrefixExpression(Operator op_, DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>op_</name>
                                    <type ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                                </parameter>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_PrefixExpression_ABBE3DF62BBFA881B067C644CBAA563667E3EDC5">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_PrefixExpression_7C3C5C5B839C2ACE36E4562CC9A51AFD905501C3">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D">
                    <name>PrefixIncrement</name>
                    <groupName>PrefixIncrement</groupName>
                    <syntax> public class PrefixIncrement;</syntax>
                    <baseClass ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                    <constructors>
                        <constructor id="constructor_PrefixIncrement_9ED02493F3284F1C7E14159E1FB486E44EFACBE7">
                            <name>PrefixIncrement(DomObject* subject_)</name>
                            <syntax>public PrefixIncrement(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_PrefixIncrement_3B4D1A0B64F9DB0F100DDB3962DA6AC432359CF0">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_RangeForStatement_785371970BF070388FB222CA14A1494243EB9D3E">
                    <name>RangeForStatement</name>
                    <groupName>RangeForStatement</groupName>
                    <syntax> public class RangeForStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_RangeForStatement_57E7A7535F9C92CF526AFDD1F0D4670794795222">
                            <name>RangeForStatement(DomObject* typeExpr_, DomObject* id_, DomObject* container_, Statement* action_)</name>
                            <syntax>public RangeForStatement(DomObject* typeExpr_, DomObject* id_, DomObject* container_, Statement* action_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>typeExpr_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>id_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>container_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>action_</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_RangeForStatement_41B21DC84F65DD51A9063B80B77ED127BF914D2B">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_RangeForStatement_F60E0AC3DBCC0201404F903E827606D56EEFCA0D">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Rem_B6CCE54FD2D032B79B8776E88368A5362BF0845F">
                    <name>Rem</name>
                    <groupName>Rem</groupName>
                    <syntax> public class Rem;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Rem_E096A4C2C1D4E88D581CC75CCF03F8314CA201FE">
                            <name>Rem(DomObject* left_, DomObject* right_)</name>
                            <syntax>public Rem(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Rem_DACEF65994A3EFD7A4FB48A7DA77C7BB98344705">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750">
                    <name>ReturnStatement</name>
                    <groupName>ReturnStatement</groupName>
                    <syntax> public class ReturnStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_ReturnStatement_732BE4EA9A3E5E17B44648C08B1BE691079F903D">
                            <name>ReturnStatement(DomObject* expression_)</name>
                            <syntax>public ReturnStatement(DomObject* expression_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>expression_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ReturnStatement_D9D1C2B0CDC1733E47DEBE4C05F21B62F5AE3A5F">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_ReturnStatement_1CEF02004856480C0E37E0A7BBB8A180F32306F9">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229">
                    <name>RvalueRef</name>
                    <groupName>RvalueRef</groupName>
                    <syntax> public class RvalueRef;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_RvalueRef_C850BD48D7191DB271CC8B042F31F85D91E83A0D">
                            <name>RvalueRef(DomObject* subject_)</name>
                            <syntax>public nothrow RvalueRef(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_RvalueRef_BCDBFBB4C211A5BF48F8469AE783D803BAFEDC26">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Name_RvalueRef_7E7B571CFA547EEEC11F344E4B7D0925AF369A48">
                            <name>Name() const</name>
                            <syntax>public nothrow override String&lt;uchar> Name() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Print_RvalueRef_AB27ED472E64C64FE0013A2D27DC47D2F9ECA5F0">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_SByteType_D39AD49CAA300FB82912697D32C1F0DA20E1CDE8">
                    <name>SByteType</name>
                    <groupName>SByteType</groupName>
                    <syntax> public class SByteType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_SByteType_E1FFD26EF6FB7EA54C3262FD8683FAED7FE2A7E2">
                            <name>SByteType()</name>
                            <syntax>public nothrow SByteType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_SByteType_1EB5449A7EA6370A590CB85DD21E7E4655F03227">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ShiftLeft_0C58636617E67D99E2D4B947D93C487C9EC0EEAE">
                    <name>ShiftLeft</name>
                    <groupName>ShiftLeft</groupName>
                    <syntax> public class ShiftLeft;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_ShiftLeft_AAAB5549C228798366C5B43A7FCD7A4D26FEAEFE">
                            <name>ShiftLeft(DomObject* left_, DomObject* right_)</name>
                            <syntax>public ShiftLeft(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ShiftLeft_EB4CC737C0B0C2AC9C16B24B604539A7FB19D9D1">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ShiftRight_27E7AC65159A3C02A710CE1FA049B105D3C389B9">
                    <name>ShiftRight</name>
                    <groupName>ShiftRight</groupName>
                    <syntax> public class ShiftRight;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_ShiftRight_EB0F780EDEEFEB894514EEFE24F8A208DB24E751">
                            <name>ShiftRight(DomObject* left_, DomObject* right_)</name>
                            <syntax>public ShiftRight(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ShiftRight_1D90E3CCF113308E0F4289CB8C5A44C79160A1B7">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ShortType_F0B48C067139B7007831773D521E957F39E48196">
                    <name>ShortType</name>
                    <groupName>ShortType</groupName>
                    <syntax> public class ShortType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_ShortType_CBAD1184637ECF108C83860332EBCAAC270AD420">
                            <name>ShortType()</name>
                            <syntax>public nothrow ShortType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ShortType_60A135E86AC0A13E8ADBDE4384AE51F3802BEF56">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B">
                    <name>SizeOf</name>
                    <groupName>SizeOf</groupName>
                    <syntax> public class SizeOf;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_SizeOf_80EA00B08359A555AF76FF76C2F0C1A44F9C11A6">
                            <name>SizeOf(DomObject* subject_)</name>
                            <syntax>public SizeOf(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_SizeOf_3B8A538C207F525B50CA40A9B1A7C83DAFFE5704">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_SizeOf_1CCAA2FBEAE9694C8F8F3F5EC34444159527E7EF">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0">
                    <name>Statement</name>
                    <groupName>Statement</groupName>
                    <syntax>abstract public class Statement;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_Statement_74B13AFABA362F759545E017C915BB60B0EBCDB2">
                            <name>Statement(const String&lt;uchar>&amp; name_)</name>
                            <syntax>public Statement(const String&lt;uchar>&amp; name_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Label_Statement_D7E8D4477CF7D94F2C23541FCC40F45BB6AE38C5">
                            <name>Label() const</name>
                            <syntax>public const String&lt;uchar>&amp; Label() const;</syntax>
                            <returnType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                        </function>
                        <function id="member_function_NoNewLine_Statement_C83E8D12172AD188ACD5C9EC1E66230C25656986">
                            <name>NoNewLine() const</name>
                            <syntax>public bool NoNewLine() const;</syntax>
                            <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                        </function>
                        <function id="member_function_SetLabel_Statement_AA2A73F102EFB3EBA16C5396EBC58C1BEF9A84FF">
                            <name>SetLabel(const String&lt;uchar>&amp; label_)</name>
                            <syntax>public void SetLabel(const String&lt;uchar>&amp; label_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>label_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetNoNewLine_Statement_DAF1937FBD23C9FC3C00C0F6879ECD17763639B8">
                            <name>SetNoNewLine()</name>
                            <syntax>public void SetNoNewLine();</syntax>
                        </function>
                    </functions>
                </class>
                <class id="class_Sub_66511E41AA55D3A9AFDEFA0F4167C1D40E23242C">
                    <name>Sub</name>
                    <groupName>Sub</groupName>
                    <syntax> public class Sub;</syntax>
                    <baseClass ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                    <constructors>
                        <constructor id="constructor_Sub_6E8C0D86F99A34B82B35757DE1B27D3E662887B3">
                            <name>Sub(DomObject* left_, DomObject* right_)</name>
                            <syntax>public Sub(DomObject* left_, DomObject* right_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>right_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_Sub_D08EC79D2D95A13E6CC5F672A43B5C3A910CBD94">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E">
                    <name>SwitchStatement</name>
                    <groupName>SwitchStatement</groupName>
                    <syntax> public class SwitchStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_SwitchStatement_5B5983EA00EC2FF44A1EB734B584D9FD8D3BE7E9">
                            <name>SwitchStatement(DomObject* condition_)</name>
                            <syntax>public SwitchStatement(DomObject* condition_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>condition_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_SwitchStatement_7680211634D2C2A46D292370497409DFE3B35DFD">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddCase_SwitchStatement_145079D1FFDE578D8EEE71258ABAA0C81236AD41">
                            <name>AddCase(CaseStatement* caseS)</name>
                            <syntax>public void AddCase(CaseStatement* caseS);</syntax>
                            <parameters>
                                <parameter>
                                    <name>caseS</name>
                                    <type ref="type.50de75a1-bc17-4d7d-a5ae-69444070f1ca"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_SwitchStatement_33408582BE269AF5EFF205B07F476D187284C1CA">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SetDefault_SwitchStatement_DCC7A782721DDBF0594739B6617BDBDD9BBCEF28">
                            <name>SetDefault(DefaultStatement* defaultS_)</name>
                            <syntax>public void SetDefault(DefaultStatement* defaultS_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>defaultS_</name>
                                    <type ref="type.f99bc570-c339-4615-b21c-d988d35d4310"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5">
                    <name>TemplateId</name>
                    <groupName>TemplateId</groupName>
                    <syntax> public class TemplateId;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_TemplateId_ED4A4C2FC2654243E0B2E689B5F1AC7AD019904C">
                            <name>TemplateId(const String&lt;uchar>&amp; name_)</name>
                            <syntax>public nothrow TemplateId(const String&lt;uchar>&amp; name_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_TemplateId_A3C3493BCD2D26A0518B9AB047186E9D48037B9B">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddTemplateArg_TemplateId_E13EA04BD4F2173FBE332CB288362C7457CE81E7">
                            <name>AddTemplateArg(DomObject* templateArg)</name>
                            <syntax>public void AddTemplateArg(DomObject* templateArg);</syntax>
                            <parameters>
                                <parameter>
                                    <name>templateArg</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Name_TemplateId_A23FC861D06F4C323F305678D8A748022F10E946">
                            <name>Name() const</name>
                            <syntax>public nothrow override String&lt;uchar> Name() const;</syntax>
                            <returnType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                        </function>
                        <function id="member_function_Print_TemplateId_8249820E981760EF40A9186A229550FCEA9AF594">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Rank_TemplateId_A44A4F1B8285173E28F32247805DD64F60B354B5">
                            <name>Rank() const</name>
                            <syntax>public nothrow override int Rank() const;</syntax>
                            <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                        </function>
                    </functions>
                </class>
                <class id="class_This_BF8A82301679DE71FF71944DBBFC35FC189B2A08">
                    <name>This</name>
                    <groupName>This</groupName>
                    <syntax> public class This;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="default_constructor_This_457D8657BA6727CEBBA3B226B5C5AE221FC6567F">
                            <name>This()</name>
                            <syntax>public This();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_This_4F1E23E7F738953B666A27C03250150B3F1059DA">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7">
                    <name>ThrowStatement</name>
                    <groupName>ThrowStatement</groupName>
                    <syntax> public class ThrowStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_ThrowStatement_B47DBD2021DF645DB40647E4176E808A0230F26D">
                            <name>ThrowStatement(DomObject* expression_)</name>
                            <syntax>public ThrowStatement(DomObject* expression_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>expression_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ThrowStatement_7392CE8B6D0F0FA6FAEC28E761FD393C39A03B8E">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_ThrowStatement_9A9B82A1A71E0BCCFCD9754567D23A4056861CE2">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96">
                    <name>TryStatement</name>
                    <groupName>TryStatement</groupName>
                    <syntax> public class TryStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_TryStatement_EBC83DE64EB4CB6FD6F926871AA1EECA21192F75">
                            <name>TryStatement(CompoundStatement* tryBlock_)</name>
                            <syntax>public TryStatement(CompoundStatement* tryBlock_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>tryBlock_</name>
                                    <type ref="type.36ef9524-152b-4d56-a223-9deda1c9d47a"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_TryStatement_A89A3AA77E19E797C37720414B366D80A3C70BFF">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_AddCatch_TryStatement_7458A53970C51B0D699A7D988408F238B37BBD42">
                            <name>AddCatch(Catch* catch_)</name>
                            <syntax>public void AddCatch(Catch* catch_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>catch_</name>
                                    <type ref="type.17cd3b54-005d-42c8-8164-87f2935870b4"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_TryStatement_641AA7A6822F4B0ABC7A80ACE7F355C9E84D0030">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3">
                    <name>Type</name>
                    <groupName>Type</groupName>
                    <syntax>abstract public class Type;</syntax>
                    <baseClass ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                    <constructors>
                        <constructor id="constructor_Type_B303B86671D6CB6D5EEA32107CD9DDD13764D47B">
                            <name>Type(const String&lt;uchar>&amp; name_)</name>
                            <syntax>public nothrow Type(const String&lt;uchar>&amp; name_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>name_</name>
                                    <type ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                </class>
                <class id="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB">
                    <name>TypeName</name>
                    <groupName>TypeName</groupName>
                    <syntax> public class TypeName;</syntax>
                    <baseClass ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                    <constructors>
                        <constructor id="constructor_TypeName_F996002831E5187DA6B02FCF91E526AF5A62A894">
                            <name>TypeName(DomObject* subject_)</name>
                            <syntax>public TypeName(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_TypeName_3199B1BBF3CB383BCD71810C515EFC584362301B">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_TypeName_0B8E9CE526EE6810D2F4F902AF4089BB0B48EFAE">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_UCharType_74BA7B3E41E59E7C17C07A7B6CD92191F1E76A13">
                    <name>UCharType</name>
                    <groupName>UCharType</groupName>
                    <syntax> public class UCharType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_UCharType_55927AEB46DDBBB9673D48E0C4E528510BC0F76B">
                            <name>UCharType()</name>
                            <syntax>public nothrow UCharType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_UCharType_19F6A00A1A7684639AC6C6CFF7CD4AA547C69AEA">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_UIntType_DB3E1F90B7FE1BC815B68BB1953CE0A8495E3D24">
                    <name>UIntType</name>
                    <groupName>UIntType</groupName>
                    <syntax> public class UIntType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_UIntType_B7BFDBCEC6C8C967FC69F81DBA2CB8719639F76A">
                            <name>UIntType()</name>
                            <syntax>public nothrow UIntType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_UIntType_4B2B5CF5613FE5AAEAC382E5405839777352740B">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_ULongType_5010BECDDEC8CE9D9573F3789BC52249D9F2FA7C">
                    <name>ULongType</name>
                    <groupName>ULongType</groupName>
                    <syntax> public class ULongType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_ULongType_AF725CA8E9D472301292BCC031B9FBD6F950CC55">
                            <name>ULongType()</name>
                            <syntax>public nothrow ULongType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_ULongType_3AE24932A279F74188F31E1C9432715CB35E2DD6">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_UShortType_CD493F6AAE316F9E9C75A94CD714D34E9C1CD54F">
                    <name>UShortType</name>
                    <groupName>UShortType</groupName>
                    <syntax> public class UShortType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_UShortType_71010419314BCE47091A9FCA172BC70F1EC65AE7">
                            <name>UShortType()</name>
                            <syntax>public nothrow UShortType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_UShortType_6E436A39550867DD6AB5E0E86FD13FE955CD5F34">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F">
                    <name>UnaryMinus</name>
                    <groupName>UnaryMinus</groupName>
                    <syntax> public class UnaryMinus;</syntax>
                    <baseClass ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                    <constructors>
                        <constructor id="constructor_UnaryMinus_2222612418F7A159AD9199788EA89A170B0B2D74">
                            <name>UnaryMinus(DomObject* subject_)</name>
                            <syntax>public UnaryMinus(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_UnaryMinus_A3B80D54A36F6C9082B9A7227D400D24AE731A3C">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2">
                    <name>UnaryPlus</name>
                    <groupName>UnaryPlus</groupName>
                    <syntax> public class UnaryPlus;</syntax>
                    <baseClass ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                    <constructors>
                        <constructor id="constructor_UnaryPlus_2B326BA9D6196DC0CA0D3A0219F961C5B92B7500">
                            <name>UnaryPlus(DomObject* subject_)</name>
                            <syntax>public UnaryPlus(DomObject* subject_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>subject_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_UnaryPlus_A2A49AB332F20D114CA806DEF99AA71AF43A3B70">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_Visitor_20FFECD046DAE045FE9E47404AA9013F309AFDED">
                    <name>Visitor</name>
                    <groupName>Visitor</groupName>
                    <syntax> public class Visitor;</syntax>
                    <functions>
                        <function id="function_group_Visit_C70DAD81AEA92968DDC755106A5EA0CE350437F1">
                            <name>Visit</name>
                            <overloads>
                                <overload id="member_function_Visit_Visitor_0789948E9F966221696C405170523CBD9D8FB7FE">
                                    <name>Visit(Add&amp; add)</name>
                                    <syntax>public virtual void Visit(Add&amp; add);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>add</name>
                                            <type ref="type.c4f49418-7083-4467-bc3a-921ad9905a7f"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_B7FC29A95DB6FC426BB8F56BC1F3D0019AAD0009">
                                    <name>Visit(AddressOf&amp; addressOf)</name>
                                    <syntax>public virtual void Visit(AddressOf&amp; addressOf);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>addressOf</name>
                                            <type ref="type.a9a53179-6b83-4126-b3e6-a6f0ffd6fc7d"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_6790D02F10CB74718DCEA50BDC12AD124518A0E3">
                                    <name>Visit(Array&amp; array)</name>
                                    <syntax>public virtual void Visit(Array&amp; array);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>array</name>
                                            <type ref="type.2bcf50ac-6841-45af-9f54-cc58f25aa5cb"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_41D1286C7468DD1834015190F77FD85AC277296E">
                                    <name>Visit(Arrow&amp; arrow)</name>
                                    <syntax>public virtual void Visit(Arrow&amp; arrow);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>arrow</name>
                                            <type ref="type.c7ac3e3a-3bcb-4f65-af0d-74754f233a56"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_A7D43685851CD2D781FBF4BFBAE233C22F62F317">
                                    <name>Visit(As&amp; as_)</name>
                                    <syntax>public virtual void Visit(As&amp; as_);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>as_</name>
                                            <type ref="type.486aded2-c6e2-4619-83d9-6fe631e88493"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_BB462344D9057BD5B402132DE8B40CDA457C4B0B">
                                    <name>Visit(AssertStatement&amp; assertStatement)</name>
                                    <syntax>public virtual void Visit(AssertStatement&amp; assertStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>assertStatement</name>
                                            <type ref="type.1ea2e461-9bbd-4843-be4e-7df792e2695b"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_0942547ABC6D83EC5E6E1357B2C0DEC1154E124C">
                                    <name>Visit(AssignmentStatement&amp; assignmentStatement)</name>
                                    <syntax>public virtual void Visit(AssignmentStatement&amp; assignmentStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>assignmentStatement</name>
                                            <type ref="type.170a1ae2-90d8-4a55-88d9-98022cb88713"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_28FD0EEDE7BEA0B60246063A5A870A61BAE9C3C1">
                                    <name>Visit(Base&amp; base_)</name>
                                    <syntax>public virtual void Visit(Base&amp; base_);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>base_</name>
                                            <type ref="type.f8efbcf4-3d7f-4f19-80ee-87f66b385d52"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_FF190CDC2B8BABD2EA2D03F221CA912E52221AF7">
                                    <name>Visit(BitAnd&amp; bitAnd)</name>
                                    <syntax>public virtual void Visit(BitAnd&amp; bitAnd);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>bitAnd</name>
                                            <type ref="type.47d1624c-2044-49c8-8969-2da8dca9ceb8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_CF12672ACCBC04C669111FA2050B290BDAF6D3F5">
                                    <name>Visit(BitOr&amp; bitOr)</name>
                                    <syntax>public virtual void Visit(BitOr&amp; bitOr);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>bitOr</name>
                                            <type ref="type.ef868a36-d758-4066-9976-775414ccd918"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_6357C2E9393348094047A2F1F1B79BD0C69E2EA9">
                                    <name>Visit(BitXor&amp; bitXor)</name>
                                    <syntax>public virtual void Visit(BitXor&amp; bitXor);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>bitXor</name>
                                            <type ref="type.6de658c4-cfde-44ce-8722-26c5d7cd59ba"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_7B9481A99AF6A82796DAE60FA810FBBBFCD78D15">
                                    <name>Visit(BoolType&amp; boolType)</name>
                                    <syntax>public virtual void Visit(BoolType&amp; boolType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>boolType</name>
                                            <type ref="type.863c4fd5-4162-4475-9b45-7411a69a8d10"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_340CF7CF2AD5F18E8A21ED63D47D2699A0CC867A">
                                    <name>Visit(BreakStatement&amp; breakStatement)</name>
                                    <syntax>public virtual void Visit(BreakStatement&amp; breakStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>breakStatement</name>
                                            <type ref="type.55a89cae-79d2-4396-bd93-e5e6696bead1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_CEB478500603DD8B7BA7555807104710BCB1FAB5">
                                    <name>Visit(ByteType&amp; byteType)</name>
                                    <syntax>public virtual void Visit(ByteType&amp; byteType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>byteType</name>
                                            <type ref="type.f7261206-a6cb-4950-a2f5-b34e7c66a837"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_DA46B59F81DC227014BE970630F322653229F511">
                                    <name>Visit(CaseStatement&amp; caseStatement)</name>
                                    <syntax>public virtual void Visit(CaseStatement&amp; caseStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>caseStatement</name>
                                            <type ref="type.d7fc206c-d5d6-4b52-afc6-9ef9c4d80c33"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_7B00DB5C66D1D6768BC33EEA51D05E71D6E4821C">
                                    <name>Visit(Cast&amp; cast_)</name>
                                    <syntax>public virtual void Visit(Cast&amp; cast_);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>cast_</name>
                                            <type ref="type.f5ad09cb-43d7-47fd-a9ec-3da10c53ac5a"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_B16EFB072A13B89C76B9C2295F1F3F0D865105BE">
                                    <name>Visit(Catch&amp; catch_)</name>
                                    <syntax>public virtual void Visit(Catch&amp; catch_);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>catch_</name>
                                            <type ref="type.a01feffb-a271-486a-a0c8-fbeeacd1c22c"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_68142FC5BE67DDC4F9E18C83D07B419B4A525769">
                                    <name>Visit(CharType&amp; charType)</name>
                                    <syntax>public virtual void Visit(CharType&amp; charType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>charType</name>
                                            <type ref="type.b5815b3e-6594-44bd-97fc-c69b2f2dfab4"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_A64912B10DAD6052727DBD1734646CA5C10EB926">
                                    <name>Visit(Complement&amp; complement)</name>
                                    <syntax>public virtual void Visit(Complement&amp; complement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>complement</name>
                                            <type ref="type.f008d4d2-1d2d-4b45-9ddd-34eb79ae4cc9"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_CD32C031A3BFE406065C0EB275CFE1297952E7EC">
                                    <name>Visit(CompoundStatement&amp; compoundStatement)</name>
                                    <syntax>public virtual void Visit(CompoundStatement&amp; compoundStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>compoundStatement</name>
                                            <type ref="type.8b8e4614-0b2e-43dd-bc2a-e3eb4c60234a"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_B41616607C59BC152935C07B7940B0F9810D3E66">
                                    <name>Visit(Conjunction&amp; conjunction)</name>
                                    <syntax>public virtual void Visit(Conjunction&amp; conjunction);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>conjunction</name>
                                            <type ref="type.ee43ea3d-75e6-43fe-8b1d-c49b306817c7"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_2607F2E2D5292BB10ECBD838EC7281E921B39E4F">
                                    <name>Visit(Const&amp; const_)</name>
                                    <syntax>public virtual void Visit(Const&amp; const_);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>const_</name>
                                            <type ref="type.325c6481-d00e-429e-8c51-10181ee8f5b4"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_50FED16EC5D9D1A2096DE87C271380BAADBD5D08">
                                    <name>Visit(Construct&amp; construct_)</name>
                                    <syntax>public virtual void Visit(Construct&amp; construct_);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>construct_</name>
                                            <type ref="type.91f95670-16c8-44de-9bb3-e425f8739c50"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_88B39263F414C14FE79B8B038B258905DCE4F5E0">
                                    <name>Visit(ConstructionStatement&amp; constructionStatement)</name>
                                    <syntax>public virtual void Visit(ConstructionStatement&amp; constructionStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>constructionStatement</name>
                                            <type ref="type.c7e78b02-1db9-4249-95de-6369809eab78"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_0BB172B597CB17C3BF8C85431A247B95B81241B6">
                                    <name>Visit(ContinueStatement&amp; continueStatement)</name>
                                    <syntax>public virtual void Visit(ContinueStatement&amp; continueStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>continueStatement</name>
                                            <type ref="type.1bc6a0f1-fcc4-42dc-9980-6a3947720abd"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_03A4710A1C39ED239A767F3AA291FB000CD680D6">
                                    <name>Visit(DefaultStatement&amp; defaultStatement)</name>
                                    <syntax>public virtual void Visit(DefaultStatement&amp; defaultStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>defaultStatement</name>
                                            <type ref="type.0d4c5f88-d4ff-4e16-92b8-18e236ea0da0"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_D37042BF2C3DD0756855A3B557B3058902D983EC">
                                    <name>Visit(DeleteStatement&amp; deleteStatement)</name>
                                    <syntax>public virtual void Visit(DeleteStatement&amp; deleteStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>deleteStatement</name>
                                            <type ref="type.be4d5f9d-1a21-40d5-9ef3-a41ce352648a"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_280382812463BCAE665FEA8AB2E11C7661B82202">
                                    <name>Visit(Deref&amp; deref)</name>
                                    <syntax>public virtual void Visit(Deref&amp; deref);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>deref</name>
                                            <type ref="type.db142a1a-8d41-4178-9503-0f6a23a5b0a1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_CAB491A63162CBFC893C3DC7A71A90A20F3D6126">
                                    <name>Visit(DestroyStatement&amp; destroyStatement)</name>
                                    <syntax>public virtual void Visit(DestroyStatement&amp; destroyStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>destroyStatement</name>
                                            <type ref="type.bce163ff-43c8-4013-8c4a-a87ba1b28564"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_D241765948E494F31661F9D086C8484B37093056">
                                    <name>Visit(Disjunction&amp; disjunction)</name>
                                    <syntax>public virtual void Visit(Disjunction&amp; disjunction);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>disjunction</name>
                                            <type ref="type.37f37003-f5e9-4f8d-8347-89a582d9992e"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_219C0CA351D8AB2210A0775409DBC05DB244635E">
                                    <name>Visit(Div&amp; div)</name>
                                    <syntax>public virtual void Visit(Div&amp; div);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>div</name>
                                            <type ref="type.7668a87b-08cf-4a54-bc55-fcb4a541eb3a"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_DE75BE2E5DCA79E57D3A95C0D9CD5024C3744FA8">
                                    <name>Visit(DoStatement&amp; doStatement)</name>
                                    <syntax>public virtual void Visit(DoStatement&amp; doStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>doStatement</name>
                                            <type ref="type.9a3b99da-fe5b-46d0-82eb-d2286571d170"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_91ED66CADEF340BBCD3088D943821A79698EF509">
                                    <name>Visit(Dot&amp; dot)</name>
                                    <syntax>public virtual void Visit(Dot&amp; dot);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>dot</name>
                                            <type ref="type.46b58a3f-fb4f-4731-b9dc-991f89a68c38"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_1DC966AA1A2C3ABD5E1BF1CA8B0C886981B6BD8B">
                                    <name>Visit(DoubleType&amp; doubleType)</name>
                                    <syntax>public virtual void Visit(DoubleType&amp; doubleType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>doubleType</name>
                                            <type ref="type.2e9942fc-0e9f-40c6-b6e3-c38f8f70b264"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_8FD55B7DC51BB803C49A652985306788516ED133">
                                    <name>Visit(EmptyStatement&amp; emptyStatement)</name>
                                    <syntax>public virtual void Visit(EmptyStatement&amp; emptyStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>emptyStatement</name>
                                            <type ref="type.99324dfd-0ffd-4ef4-8185-a1cb04cb4d1f"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_E8002EA1632204B8ABBB920FD571F561B04A1FB2">
                                    <name>Visit(Equal&amp; equal)</name>
                                    <syntax>public virtual void Visit(Equal&amp; equal);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>equal</name>
                                            <type ref="type.5e644cc0-39b9-4088-86a4-2e01f2f98c11"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_8D7E58DA70FAC989C8A1EF654B03BA5FD0879588">
                                    <name>Visit(ExpressionStatement&amp; expressionStatement)</name>
                                    <syntax>public virtual void Visit(ExpressionStatement&amp; expressionStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>expressionStatement</name>
                                            <type ref="type.df4fcb6a-fdae-469d-b47b-32ead15b6819"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_B21129F5AFD85D32927D89AFC8148C2AC1073CF1">
                                    <name>Visit(FloatType&amp; floatType)</name>
                                    <syntax>public virtual void Visit(FloatType&amp; floatType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>floatType</name>
                                            <type ref="type.e7366ef4-7dea-4e93-9939-bc396220e97d"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_6CBC3B42FA2FE2CE6F52933429CB696240B71015">
                                    <name>Visit(ForStatement&amp; forStatement)</name>
                                    <syntax>public virtual void Visit(ForStatement&amp; forStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>forStatement</name>
                                            <type ref="type.f1a5739c-0168-448a-9e9a-d870622982f2"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_97D12C3A68DF35D6D2F0B8601334A3BB67D44F7F">
                                    <name>Visit(GotoCaseStatement&amp; gotoCaseStatement)</name>
                                    <syntax>public virtual void Visit(GotoCaseStatement&amp; gotoCaseStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>gotoCaseStatement</name>
                                            <type ref="type.01a88b4e-b52f-4064-9ada-a9c810631f14"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_B5EF70FF27DE9081BA03A98701E9EFF6FC89C2F1">
                                    <name>Visit(GotoDefaultStatement&amp; gotoDefaultStatement)</name>
                                    <syntax>public virtual void Visit(GotoDefaultStatement&amp; gotoDefaultStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>gotoDefaultStatement</name>
                                            <type ref="type.d36b536d-aa8f-4bfb-9777-9a603377743c"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_0701E2DC68AFFA096276B3B8836FB4C40FD84D60">
                                    <name>Visit(GotoStatement&amp; gotoStatement)</name>
                                    <syntax>public virtual void Visit(GotoStatement&amp; gotoStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>gotoStatement</name>
                                            <type ref="type.7ee5fde5-5d90-446e-b3ff-f5f531dad107"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_BDCB831141529F121755E5E8400EB43264D368B6">
                                    <name>Visit(Greater&amp; greater)</name>
                                    <syntax>public virtual void Visit(Greater&amp; greater);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>greater</name>
                                            <type ref="type.49897e6f-790a-4061-adc9-e8f8b3c569c4"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_48EB4C9C696CA0D9239EFCB0654A0CA0A99C1705">
                                    <name>Visit(GreaterOrEqual&amp; greaterOrEqual)</name>
                                    <syntax>public virtual void Visit(GreaterOrEqual&amp; greaterOrEqual);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>greaterOrEqual</name>
                                            <type ref="type.e7334a83-29d4-4c53-9f8c-a6c94c41a401"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_E0769B3932F3EB98F43008BAAE46F34297C364D8">
                                    <name>Visit(Identifier&amp; identifier)</name>
                                    <syntax>public virtual void Visit(Identifier&amp; identifier);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>identifier</name>
                                            <type ref="type.5b209244-c04e-492e-a649-42b1ab07eca0"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_7D88F1D45BD30EF66543B910BA537741C5A19012">
                                    <name>Visit(IfStatement&amp; ifStatement)</name>
                                    <syntax>public virtual void Visit(IfStatement&amp; ifStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>ifStatement</name>
                                            <type ref="type.0cbb090a-6829-46f9-8006-ace3fbe0d5a8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_5CB8643757D700752CD9D5EB41CEDF0A2D11D8C6">
                                    <name>Visit(Indexing&amp; indexing)</name>
                                    <syntax>public virtual void Visit(Indexing&amp; indexing);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>indexing</name>
                                            <type ref="type.1ad66509-bbe4-4553-9751-e7984df511aa"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_A2C783612A56E83BC0FE75009029220D1B6F0B97">
                                    <name>Visit(IntType&amp; intType)</name>
                                    <syntax>public virtual void Visit(IntType&amp; intType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>intType</name>
                                            <type ref="type.9a16b8dc-c23e-46d3-9dee-c53509083a01"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_967D0A92822BEDDB877FB771FB4B930354CC4851">
                                    <name>Visit(Invoke&amp; invoke)</name>
                                    <syntax>public virtual void Visit(Invoke&amp; invoke);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>invoke</name>
                                            <type ref="type.858f20bc-3fb2-4c6f-b877-f2b3ca1aeed3"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_CF54F1ABDFD1D883A5EB26F11992FA6EDE3F5769">
                                    <name>Visit(Is&amp; is_)</name>
                                    <syntax>public virtual void Visit(Is&amp; is_);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>is_</name>
                                            <type ref="type.c9b51c7a-f6aa-4902-b6a7-f32a2a2d8891"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_BCBDF8A932AC3ACAC8B2F13D4249690C7EDADE9B">
                                    <name>Visit(Less&amp; less)</name>
                                    <syntax>public virtual void Visit(Less&amp; less);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>less</name>
                                            <type ref="type.6b2dc802-a859-467d-86f5-4467bc350c0b"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_AFDF0C6CD98664ADE9EC7B2A47D8DDEF4C73149C">
                                    <name>Visit(LessOrEqual&amp; lessOrEqual)</name>
                                    <syntax>public virtual void Visit(LessOrEqual&amp; lessOrEqual);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>lessOrEqual</name>
                                            <type ref="type.b7533f91-fcd5-4143-98d3-2cd8589f3d2c"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_CE16541429EE3ADA4F6F7CB29B42807BF3C7900A">
                                    <name>Visit(Literal&amp; literal)</name>
                                    <syntax>public virtual void Visit(Literal&amp; literal);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>literal</name>
                                            <type ref="type.85c8271e-8df9-4abb-858e-38113539b092"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_24E049654FA4850CC5920E9D919C9165C6C2C334">
                                    <name>Visit(LongType&amp; longType)</name>
                                    <syntax>public virtual void Visit(LongType&amp; longType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>longType</name>
                                            <type ref="type.9e759d6c-9223-4618-ba39-6c450262de6f"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_8D7DC3C0459344F0B1C69B655D48B70061B0E37B">
                                    <name>Visit(LvalueRef&amp; lvalueRef)</name>
                                    <syntax>public virtual void Visit(LvalueRef&amp; lvalueRef);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>lvalueRef</name>
                                            <type ref="type.492b362e-1f64-4dcb-a4b8-e15a263b574e"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_3A90620F108D9068E9F8EC4DE928F62004CE074F">
                                    <name>Visit(Mul&amp; mul)</name>
                                    <syntax>public virtual void Visit(Mul&amp; mul);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>mul</name>
                                            <type ref="type.429864a6-ab3e-43a6-bd66-70da3b2f7c78"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_319541A4B279C09FF0A083970339A6C516B007F2">
                                    <name>Visit(New&amp; new_)</name>
                                    <syntax>public virtual void Visit(New&amp; new_);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>new_</name>
                                            <type ref="type.b9540fde-35fe-47f3-b86d-56204a81c3b5"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_F8BD2118606D1E6BE7F5BC4E0CBD6D475519BA04">
                                    <name>Visit(Not&amp; not_)</name>
                                    <syntax>public virtual void Visit(Not&amp; not_);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>not_</name>
                                            <type ref="type.63a4cc96-04de-442a-96ca-718cfc77187e"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_C1BF57DDE1351085C0208B72ED3A45B18382AF49">
                                    <name>Visit(NotEqual&amp; notEqual)</name>
                                    <syntax>public virtual void Visit(NotEqual&amp; notEqual);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>notEqual</name>
                                            <type ref="type.30d7fa7f-b0f7-487a-9caa-c3253e1f97e8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_CC914D02BF74C000FAB3E92007E660C3C34350C2">
                                    <name>Visit(Pointer&amp; pointer)</name>
                                    <syntax>public virtual void Visit(Pointer&amp; pointer);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>pointer</name>
                                            <type ref="type.f7fd5eaa-293c-4a3d-8304-628270684f16"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_CA9CC61841F4D3070F4044760118D8AC9D10D468">
                                    <name>Visit(PostfixDecrement&amp; postfixDecrement)</name>
                                    <syntax>public virtual void Visit(PostfixDecrement&amp; postfixDecrement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>postfixDecrement</name>
                                            <type ref="type.9696089f-9ff2-4921-bd51-4ee192cf6b9a"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_E5DC808B60F46AAD97FF40F07EC3315FA1EC95E2">
                                    <name>Visit(PostfixIncrement&amp; postfixIncrement)</name>
                                    <syntax>public virtual void Visit(PostfixIncrement&amp; postfixIncrement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>postfixIncrement</name>
                                            <type ref="type.fe170fbe-1776-4202-b559-57ea94ed07ca"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_E356A607D1E00821F4C223AB6AEDB8F3AE34D24D">
                                    <name>Visit(PrefixDecrement&amp; prefixDecrement)</name>
                                    <syntax>public virtual void Visit(PrefixDecrement&amp; prefixDecrement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>prefixDecrement</name>
                                            <type ref="type.3ff52e89-82cc-42f3-9783-7c21325f497e"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_7BF2D82E33C18E26BB92077FFE1DC12000C2B616">
                                    <name>Visit(PrefixIncrement&amp; prefixIncrement)</name>
                                    <syntax>public virtual void Visit(PrefixIncrement&amp; prefixIncrement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>prefixIncrement</name>
                                            <type ref="type.62b0ef48-4a97-4e36-8d68-7754a887ee06"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_9AA520081FF6F746884A3FA221A1AA6515048CEF">
                                    <name>Visit(RangeForStatement&amp; rangeForStatement)</name>
                                    <syntax>public virtual void Visit(RangeForStatement&amp; rangeForStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>rangeForStatement</name>
                                            <type ref="type.427ccbda-7fa7-4a7b-90ab-2ad02224f2d1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_EED4C734205C9BA3DE800A56D6CABFA6F704A9DA">
                                    <name>Visit(Rem&amp; rem)</name>
                                    <syntax>public virtual void Visit(Rem&amp; rem);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>rem</name>
                                            <type ref="type.21003dcc-8d33-45c2-90b3-0074b2ea7cdc"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_A55020B5383EA9D46EA1D284637498256019BBB1">
                                    <name>Visit(ReturnStatement&amp; returnStatement)</name>
                                    <syntax>public virtual void Visit(ReturnStatement&amp; returnStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>returnStatement</name>
                                            <type ref="type.7a10c956-573e-4aac-8037-27416048fbf9"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_19CD26E83F19DF1389FDFF4B063CA82EAC7B34D9">
                                    <name>Visit(RvalueRef&amp; rvalueRef)</name>
                                    <syntax>public virtual void Visit(RvalueRef&amp; rvalueRef);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>rvalueRef</name>
                                            <type ref="type.90634c62-8a88-4d57-80b3-96c95b412895"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_3B8937371654B5334421B5811EE92AAB09C12F35">
                                    <name>Visit(SByteType&amp; sbyteType)</name>
                                    <syntax>public virtual void Visit(SByteType&amp; sbyteType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>sbyteType</name>
                                            <type ref="type.9ce24d4d-d68b-4c98-ad20-ba1cbf7c9db8"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_ECB50C7731E255C02E6A983C68A2F2C772F76D29">
                                    <name>Visit(ShiftLeft&amp; shiftLeft)</name>
                                    <syntax>public virtual void Visit(ShiftLeft&amp; shiftLeft);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>shiftLeft</name>
                                            <type ref="type.b7743d8b-25f8-4aec-8538-afc56e58de12"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_AC20D5262DBCB8A077E9DC7BFF22F5E5DCB496E8">
                                    <name>Visit(ShiftRight&amp; shiftRight)</name>
                                    <syntax>public virtual void Visit(ShiftRight&amp; shiftRight);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>shiftRight</name>
                                            <type ref="type.0e3775ce-8e49-4358-afaf-318a12dd4255"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_9C1B883CE273D6A8287E5A1DD0320B851B803796">
                                    <name>Visit(ShortType&amp; shortType)</name>
                                    <syntax>public virtual void Visit(ShortType&amp; shortType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>shortType</name>
                                            <type ref="type.940adc27-e705-4705-b101-294039db0f5c"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_1D11CD37D9E3C054585364E3F146C70A8A2CFD53">
                                    <name>Visit(SizeOf&amp; sizeOf)</name>
                                    <syntax>public virtual void Visit(SizeOf&amp; sizeOf);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>sizeOf</name>
                                            <type ref="type.0dcd468a-f940-4cbb-941a-4c4819ab50fc"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_075400A45DC5C1534DCBCF2382E11ADA1D15AA6E">
                                    <name>Visit(Sub&amp; sub)</name>
                                    <syntax>public virtual void Visit(Sub&amp; sub);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>sub</name>
                                            <type ref="type.1c0c963d-3b4f-4390-b408-4b7b1a5a399e"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_C35482BE7A44D7BC07AD6314B5DBA83C79E98E75">
                                    <name>Visit(SwitchStatement&amp; switchStatement)</name>
                                    <syntax>public virtual void Visit(SwitchStatement&amp; switchStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>switchStatement</name>
                                            <type ref="type.1c676ea9-2961-41b6-a33e-6221bbbab4db"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_CE6AEA08FEDB45DBDC2EBBC60F33EBC0086E18A7">
                                    <name>Visit(TemplateId&amp; templateId)</name>
                                    <syntax>public virtual void Visit(TemplateId&amp; templateId);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>templateId</name>
                                            <type ref="type.a1cf6a55-7548-470c-8e46-33aabb0bf7fa"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_B22620481E19E5DF0AC49B9DA76C8098A8642C19">
                                    <name>Visit(This&amp; this_)</name>
                                    <syntax>public virtual void Visit(This&amp; this_);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>this_</name>
                                            <type ref="type.6dfb88a2-6c5a-4719-9707-3d6e0cef7ddf"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_E47BC201FE16901F71609542EE03226428CFCF00">
                                    <name>Visit(ThrowStatement&amp; throwStatement)</name>
                                    <syntax>public virtual void Visit(ThrowStatement&amp; throwStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>throwStatement</name>
                                            <type ref="type.9c425e27-f85d-4c4d-91f2-d10a926e7871"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_1951CFAEB61C83AF7A78ABA6468CF8B13B37C438">
                                    <name>Visit(TryStatement&amp; tryStatement)</name>
                                    <syntax>public virtual void Visit(TryStatement&amp; tryStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>tryStatement</name>
                                            <type ref="type.dfef0a94-95e8-49e8-a1c8-6345bc441fc9"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_E4762E1F0B8D6BC1B131E3247AA55873AAFA1B01">
                                    <name>Visit(TypeName&amp; typeName)</name>
                                    <syntax>public virtual void Visit(TypeName&amp; typeName);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>typeName</name>
                                            <type ref="type.42ccbd65-b9a6-46aa-b5b9-0781dc3a0c2f"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_18D081EB3D72FB1E970F1FB84537C1988DB70E4E">
                                    <name>Visit(UCharType&amp; ucharType)</name>
                                    <syntax>public virtual void Visit(UCharType&amp; ucharType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>ucharType</name>
                                            <type ref="type.c4f6331a-7d1a-4e1a-bf47-55e7983a2b09"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_C51190D1D5AB7CF8250E4867961649FEC0A2CB57">
                                    <name>Visit(UIntType&amp; uintType)</name>
                                    <syntax>public virtual void Visit(UIntType&amp; uintType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>uintType</name>
                                            <type ref="type.c0be19a7-aeed-4103-b4c5-8c745312bd81"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_FBF14EB9917578F9705C98DF7563B78F1816E5A5">
                                    <name>Visit(ULongType&amp; ulongType)</name>
                                    <syntax>public virtual void Visit(ULongType&amp; ulongType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>ulongType</name>
                                            <type ref="type.42e68d87-aa1d-4b51-9170-64a384bda3b3"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_1DFED039450AED76833BB98F61404A434CF55B50">
                                    <name>Visit(UShortType&amp; ushortType)</name>
                                    <syntax>public virtual void Visit(UShortType&amp; ushortType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>ushortType</name>
                                            <type ref="type.61ea2253-202b-4865-902b-7a95faa9c48a"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_469A13B8811792D7388816F01766EA0C559BE941">
                                    <name>Visit(UnaryMinus&amp; unaryMinus)</name>
                                    <syntax>public virtual void Visit(UnaryMinus&amp; unaryMinus);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>unaryMinus</name>
                                            <type ref="type.6032e387-d446-43fa-8807-8e59c9b8ad80"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_8AC89CD7B8B94961FC77DA51C152384BA205F1D6">
                                    <name>Visit(UnaryPlus&amp; unaryPlus)</name>
                                    <syntax>public virtual void Visit(UnaryPlus&amp; unaryPlus);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>unaryPlus</name>
                                            <type ref="type.66ec8924-58a0-4a4d-af52-e321b3358b3e"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_C2A9BEC66BA42E6CE859781327EFA651C556105C">
                                    <name>Visit(VoidType&amp; voidType)</name>
                                    <syntax>public virtual void Visit(VoidType&amp; voidType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>voidType</name>
                                            <type ref="type.ff0862dc-aae4-4788-9a5a-9a0649a5ea4c"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_B75FAB11477E12DD5D6F09B5C0C7D1FA5D38FC0C">
                                    <name>Visit(WCharType&amp; wcharType)</name>
                                    <syntax>public virtual void Visit(WCharType&amp; wcharType);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>wcharType</name>
                                            <type ref="type.ce59dbc4-9365-4a2a-b8bd-f2f3ac1d744a"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Visit_Visitor_32F344C982BD5DB73A8E9DEA06A52C52016D2866">
                                    <name>Visit(WhileStatement&amp; whileStatement)</name>
                                    <syntax>public virtual void Visit(WhileStatement&amp; whileStatement);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>whileStatement</name>
                                            <type ref="type.d027be90-0b45-498f-923e-dc3b0377f495"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                    </functions>
                </class>
                <class id="class_VoidType_F2D7E59A076EE94BAEF44C2456DB40E6BFD77B0F">
                    <name>VoidType</name>
                    <groupName>VoidType</groupName>
                    <syntax> public class VoidType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_VoidType_C39A19C686824E5CFA431F1CD2606B709CB0B187">
                            <name>VoidType()</name>
                            <syntax>public nothrow VoidType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_VoidType_6075A55A783CD2850F7E92E14CCA3BC8DEB4BB76">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_WCharType_37CA4173121AAEC55D38A900C4F4DD90FFB9655E">
                    <name>WCharType</name>
                    <groupName>WCharType</groupName>
                    <syntax> public class WCharType;</syntax>
                    <baseClass ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                    <constructors>
                        <constructor id="default_constructor_WCharType_566EC0706401885DADD0AFFAB38275BEF7A6440A">
                            <name>WCharType()</name>
                            <syntax>public nothrow WCharType();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_WCharType_4FFA2F9556CE4E37E83680CEBDBBBD1838B4AE30">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_WhileStatement_73BA811E542035F6EB0CDBB6874FA3BEF573C0F3">
                    <name>WhileStatement</name>
                    <groupName>WhileStatement</groupName>
                    <syntax> public class WhileStatement;</syntax>
                    <baseClass ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                    <constructors>
                        <constructor id="constructor_WhileStatement_E0EAB2EED2F6A4A12324621B9BAEADC3B92829A7">
                            <name>WhileStatement(DomObject* condition_, Statement* statement_)</name>
                            <syntax>public WhileStatement(DomObject* condition_, Statement* statement_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>condition_</name>
                                    <type ref="type.9a512402-860a-4be3-9615-25c9bb384b86"/>
                                </parameter>
                                <parameter>
                                    <name>statement_</name>
                                    <type ref="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_WhileStatement_5B9D2F6C9907076FAA595EE6CA228E7181CF1D0F">
                            <name>Accept(Visitor&amp; visitor)</name>
                            <syntax>public override void Accept(Visitor&amp; visitor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>visitor</name>
                                    <type ref="type.6252381c-d678-460c-98f8-98f77275190d"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Print_WhileStatement_B54C9BDD7F57D7367ACDB8B677F47423254BFD71">
                            <name>Print(CodeFormatter&amp; formatter)</name>
                            <syntax>public override void Print(CodeFormatter&amp; formatter);</syntax>
                            <parameters>
                                <parameter>
                                    <name>formatter</name>
                                    <type ref="type.f438b00a-1f69-4963-90e0-6f599acdf3fe"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
            </classes>
            <functions>
                <function id="function_GetBinOpRank_1C24D42F4A9DC2C2883C43076F0E2683AC00C593">
                    <name>GetBinOpRank(Operator op)</name>
                    <syntax>public nothrow int GetBinOpRank(Operator op);</syntax>
                    <parameters>
                        <parameter>
                            <name>op</name>
                            <type ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                </function>
                <function id="function_MakeBinOpName_7116D8612E30043694F7E2D7E0F09C829642681B">
                    <name>MakeBinOpName(Operator op)</name>
                    <syntax>public nothrow String&lt;char> MakeBinOpName(Operator op);</syntax>
                    <parameters>
                        <parameter>
                            <name>op</name>
                            <type ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.a08e7b96-65b1-4902-bc7e-40a22e01d134"/>
                </function>
                <function id="function_MakePostfixOpName_C35EAB3DFB07FEA5D4A0FBF1924F51852EE04E25">
                    <name>MakePostfixOpName(Operator op)</name>
                    <syntax>public nothrow String&lt;char> MakePostfixOpName(Operator op);</syntax>
                    <parameters>
                        <parameter>
                            <name>op</name>
                            <type ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.a08e7b96-65b1-4902-bc7e-40a22e01d134"/>
                </function>
                <function id="function_MakePrefixOpName_9C5BA91466A36EBDE9324B32691A9107D010E2BA">
                    <name>MakePrefixOpName(Operator op)</name>
                    <syntax>public nothrow String&lt;char> MakePrefixOpName(Operator op);</syntax>
                    <parameters>
                        <parameter>
                            <name>op</name>
                            <type ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.a08e7b96-65b1-4902-bc7e-40a22e01d134"/>
                </function>
                <function id="function_op_eq_563965FE6E3299477616A93C6AA10F266ED8038F">
                    <name>operator==(Operator left, Operator right)</name>
                    <syntax>public bool operator==(Operator left, Operator right);</syntax>
                    <parameters>
                        <parameter>
                            <name>left</name>
                            <type ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                        </parameter>
                        <parameter>
                            <name>right</name>
                            <type ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.ae1b2da6-78d6-4792-bc0f-242912b31062"/>
                </function>
            </functions>
            <enumerations>
                <enumeration id="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87">
                    <name>Operator</name>
                    <syntax>public enum Operator;</syntax>
                    <underlyingType ref="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8"/>
                    <enumConstant>
                        <name>disjunction</name>
                        <value>0</value>
                    </enumConstant>
                    <enumConstant>
                        <name>conjunction</name>
                        <value>1</value>
                    </enumConstant>
                    <enumConstant>
                        <name>bitOr</name>
                        <value>2</value>
                    </enumConstant>
                    <enumConstant>
                        <name>bitXor</name>
                        <value>3</value>
                    </enumConstant>
                    <enumConstant>
                        <name>bitAnd</name>
                        <value>4</value>
                    </enumConstant>
                    <enumConstant>
                        <name>equal</name>
                        <value>5</value>
                    </enumConstant>
                    <enumConstant>
                        <name>notEqual</name>
                        <value>6</value>
                    </enumConstant>
                    <enumConstant>
                        <name>less</name>
                        <value>7</value>
                    </enumConstant>
                    <enumConstant>
                        <name>greater</name>
                        <value>8</value>
                    </enumConstant>
                    <enumConstant>
                        <name>lessOrEqual</name>
                        <value>9</value>
                    </enumConstant>
                    <enumConstant>
                        <name>greaterOrEqual</name>
                        <value>10</value>
                    </enumConstant>
                    <enumConstant>
                        <name>shiftLeft</name>
                        <value>11</value>
                    </enumConstant>
                    <enumConstant>
                        <name>shiftRight</name>
                        <value>12</value>
                    </enumConstant>
                    <enumConstant>
                        <name>add</name>
                        <value>13</value>
                    </enumConstant>
                    <enumConstant>
                        <name>sub</name>
                        <value>14</value>
                    </enumConstant>
                    <enumConstant>
                        <name>mul</name>
                        <value>15</value>
                    </enumConstant>
                    <enumConstant>
                        <name>div</name>
                        <value>16</value>
                    </enumConstant>
                    <enumConstant>
                        <name>rem</name>
                        <value>17</value>
                    </enumConstant>
                    <enumConstant>
                        <name>not_</name>
                        <value>18</value>
                    </enumConstant>
                    <enumConstant>
                        <name>deref</name>
                        <value>19</value>
                    </enumConstant>
                    <enumConstant>
                        <name>addressOf</name>
                        <value>20</value>
                    </enumConstant>
                    <enumConstant>
                        <name>increment</name>
                        <value>21</value>
                    </enumConstant>
                    <enumConstant>
                        <name>decrement</name>
                        <value>22</value>
                    </enumConstant>
                    <enumConstant>
                        <name>unaryPlus</name>
                        <value>23</value>
                    </enumConstant>
                    <enumConstant>
                        <name>unaryMinus</name>
                        <value>24</value>
                    </enumConstant>
                    <enumConstant>
                        <name>complement</name>
                        <value>25</value>
                    </enumConstant>
                    <enumConstant>
                        <name>is_</name>
                        <value>26</value>
                    </enumConstant>
                    <enumConstant>
                        <name>as_</name>
                        <value>27</value>
                    </enumConstant>
                </enumeration>
            </enumerations>
        </namespace>
    </namespaces>
    <types>
        <type id="class_Add_D8266E0EBE7DB2DA07CF9189C1A15DF16E9823E3">
            <name>Add</name>
        </type>
        <type derived="true" id="type.c4f49418-7083-4467-bc3a-921ad9905a7f">
            <name>Add&amp;</name>
            <content>
                <baseType ref="class_Add_D8266E0EBE7DB2DA07CF9189C1A15DF16E9823E3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4f6a1b36-c257-4921-a277-716c6f74f24c">
            <name>Add*</name>
            <content>
                <baseType ref="class_Add_D8266E0EBE7DB2DA07CF9189C1A15DF16E9823E3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492">
            <name>AddressOf</name>
        </type>
        <type derived="true" id="type.a9a53179-6b83-4126-b3e6-a6f0ffd6fc7d">
            <name>AddressOf&amp;</name>
            <content>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0fce7057-df3f-4ad0-b5f2-4e334616e435">
            <name>AddressOf&amp;&amp;</name>
            <content>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.019b9a06-db1e-4d39-8525-653016880687">
            <name>AddressOf*</name>
            <content>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Array_01D2071770F4541CF86429091B229EF2950656B0">
            <name>Array</name>
        </type>
        <type derived="true" id="type.2bcf50ac-6841-45af-9f54-cc58f25aa5cb">
            <name>Array&amp;</name>
            <content>
                <baseType ref="class_Array_01D2071770F4541CF86429091B229EF2950656B0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8b7c55e9-41b1-4732-9b4b-f33fbdd74bb7">
            <name>Array*</name>
            <content>
                <baseType ref="class_Array_01D2071770F4541CF86429091B229EF2950656B0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Arrow_1A144572826274559F7125C012EDEF88A9F72FDB">
            <name>Arrow</name>
        </type>
        <type derived="true" id="type.c7ac3e3a-3bcb-4f65-af0d-74754f233a56">
            <name>Arrow&amp;</name>
            <content>
                <baseType ref="class_Arrow_1A144572826274559F7125C012EDEF88A9F72FDB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.146781a1-38e9-4170-a0ac-3dfb138bf284">
            <name>Arrow*</name>
            <content>
                <baseType ref="class_Arrow_1A144572826274559F7125C012EDEF88A9F72FDB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_As_17FE45AC637C4950CB0B2BBFEE789A84A32233B8">
            <name>As</name>
        </type>
        <type derived="true" id="type.486aded2-c6e2-4619-83d9-6fe631e88493">
            <name>As&amp;</name>
            <content>
                <baseType ref="class_As_17FE45AC637C4950CB0B2BBFEE789A84A32233B8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c1a6693e-4a96-412f-b0b4-ab1d031d9659">
            <name>As*</name>
            <content>
                <baseType ref="class_As_17FE45AC637C4950CB0B2BBFEE789A84A32233B8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696">
            <name>AssertStatement</name>
        </type>
        <type derived="true" id="type.1ea2e461-9bbd-4843-be4e-7df792e2695b">
            <name>AssertStatement&amp;</name>
            <content>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bd3390a6-5673-483e-89df-864e5d5feb42">
            <name>AssertStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a363dbd1-01ee-4122-ab8e-6e2625333b9b">
            <name>AssertStatement*</name>
            <content>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AssignmentStatement_CD891DADD31EA0AD502EF64C3B188877E8D8CE3D">
            <name>AssignmentStatement</name>
        </type>
        <type derived="true" id="type.170a1ae2-90d8-4a55-88d9-98022cb88713">
            <name>AssignmentStatement&amp;</name>
            <content>
                <baseType ref="class_AssignmentStatement_CD891DADD31EA0AD502EF64C3B188877E8D8CE3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cc766dfa-c232-4b1c-af5b-33dc0a03aae8">
            <name>AssignmentStatement*</name>
            <content>
                <baseType ref="class_AssignmentStatement_CD891DADD31EA0AD502EF64C3B188877E8D8CE3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A" specialization="true">
            <name>BackInsertIterator&lt;C></name>
            <content>
                <primaryType ref="class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <argumentType ref="0b483091-b02c-4d65-a743-ae37f2af0801"/>
            </content>
        </type>
        <type derived="true" id="type.beaed00d-a5a7-440b-a5ff-b299e3310ec8">
            <name>BackInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.88ab8d1b-9666-4147-b692-956228391775">
            <name>BackInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD" specialization="true">
            <name>BackInsertProxy&lt;C></name>
            <content>
                <primaryType ref="class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <argumentType ref="0b483091-b02c-4d65-a743-ae37f2af0801"/>
            </content>
        </type>
        <type derived="true" id="type.2bfd48a3-6b20-4154-9372-6ef4ae18dd25">
            <name>BackInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.662c8cfe-ff56-4c18-bc2a-b763d2806677">
            <name>BackInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c7c9887e-a173-476f-9ea6-aeec0facf28c">
            <name>BackInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_Base_73ED723570AFFF8A0EA419972F0FFFB15945ABDB">
            <name>Base</name>
        </type>
        <type derived="true" id="type.f8efbcf4-3d7f-4f19-80ee-87f66b385d52">
            <name>Base&amp;</name>
            <content>
                <baseType ref="class_Base_73ED723570AFFF8A0EA419972F0FFFB15945ABDB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fab6df5e-5b23-4f39-8d2a-d2612be87530">
            <name>Base*</name>
            <content>
                <baseType ref="class_Base_73ED723570AFFF8A0EA419972F0FFFB15945ABDB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C">
            <name>BinaryExpression</name>
        </type>
        <type derived="true" id="type.1239fe34-c188-48e3-826b-35baec69e444">
            <name>BinaryExpression&amp;</name>
            <content>
                <baseType ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.145f4ebb-e3c9-4042-8148-d267ff568543">
            <name>BinaryExpression*</name>
            <content>
                <baseType ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9d190282-2354-4e3e-b358-918ef19a03a6">
            <name>BinaryExpression*&amp;</name>
            <content>
                <baseType ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b1354891-fa17-4cd2-9e87-da8526b2aac2">
            <name>BinaryExpression**</name>
            <content>
                <baseType ref="class_BinaryExpression_93262124EF63CBB063122FD6670BB1C7FA5AF80C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_BitAnd_C18E427EDF0266B9DE4A7AF49DF7814F4508A300">
            <name>BitAnd</name>
        </type>
        <type derived="true" id="type.47d1624c-2044-49c8-8969-2da8dca9ceb8">
            <name>BitAnd&amp;</name>
            <content>
                <baseType ref="class_BitAnd_C18E427EDF0266B9DE4A7AF49DF7814F4508A300"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a627cba3-362f-4a9f-ae94-620978588e48">
            <name>BitAnd*</name>
            <content>
                <baseType ref="class_BitAnd_C18E427EDF0266B9DE4A7AF49DF7814F4508A300"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_BitOr_7AFF6998C572E610457C1E96CEA6E60FE5F10EE5">
            <name>BitOr</name>
        </type>
        <type derived="true" id="type.ef868a36-d758-4066-9976-775414ccd918">
            <name>BitOr&amp;</name>
            <content>
                <baseType ref="class_BitOr_7AFF6998C572E610457C1E96CEA6E60FE5F10EE5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.75fd4527-1bf0-407f-9694-10d17a256fe6">
            <name>BitOr*</name>
            <content>
                <baseType ref="class_BitOr_7AFF6998C572E610457C1E96CEA6E60FE5F10EE5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_BitXor_6E4A68B918EAF05039242CA6E5A108EDE3A875CC">
            <name>BitXor</name>
        </type>
        <type derived="true" id="type.6de658c4-cfde-44ce-8722-26c5d7cd59ba">
            <name>BitXor&amp;</name>
            <content>
                <baseType ref="class_BitXor_6E4A68B918EAF05039242CA6E5A108EDE3A875CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9ac726b5-3eb5-4e13-ac5f-adc817926f92">
            <name>BitXor*</name>
            <content>
                <baseType ref="class_BitXor_6E4A68B918EAF05039242CA6E5A108EDE3A875CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_BoolType_CA99F7D292715338D750C5405548D95A95E200EC">
            <name>BoolType</name>
        </type>
        <type derived="true" id="type.863c4fd5-4162-4475-9b45-7411a69a8d10">
            <name>BoolType&amp;</name>
            <content>
                <baseType ref="class_BoolType_CA99F7D292715338D750C5405548D95A95E200EC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8e6bc0c1-b2ad-47e9-b314-694199047c38">
            <name>BoolType*</name>
            <content>
                <baseType ref="class_BoolType_CA99F7D292715338D750C5405548D95A95E200EC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_BreakStatement_4B85AA125DCD9CEF1305B090C2F86B174A514580">
            <name>BreakStatement</name>
        </type>
        <type derived="true" id="type.55a89cae-79d2-4396-bd93-e5e6696bead1">
            <name>BreakStatement&amp;</name>
            <content>
                <baseType ref="class_BreakStatement_4B85AA125DCD9CEF1305B090C2F86B174A514580"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c1bc5ede-4199-4225-84e7-7ba2cc386796">
            <name>BreakStatement*</name>
            <content>
                <baseType ref="class_BreakStatement_4B85AA125DCD9CEF1305B090C2F86B174A514580"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9b58d269-828c-427c-9e25-0b6c5b1cae28" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.c4a27508-78eb-4385-bd5e-8aac35f0ab48">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9b58d269-828c-427c-9e25-0b6c5b1cae28"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9" specialization="true">
            <name>Bucket&lt;T></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="59a666a4-caab-49c0-96b5-4c967d4999f2"/>
            </content>
        </type>
        <type derived="true" id="type.cf66a380-954c-4eb0-9f21-a253cbdb9340">
            <name>Bucket&lt;T>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE" specialization="true">
            <name>Bucket&lt;ValueType></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="8e5332b6-c054-4eb4-934f-5d11acbfb871"/>
            </content>
        </type>
        <type derived="true" id="type.0c73224f-1d5d-4ea4-8acd-363a609f1d97">
            <name>Bucket&lt;ValueType>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_ByteType_490AEA1EE94BBCC3A1DFB53231F83959E2168A77">
            <name>ByteType</name>
        </type>
        <type derived="true" id="type.f7261206-a6cb-4950-a2f5-b34e7c66a837">
            <name>ByteType&amp;</name>
            <content>
                <baseType ref="class_ByteType_490AEA1EE94BBCC3A1DFB53231F83959E2168A77"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d337addc-4577-4192-99c5-1d2e1d8345fb">
            <name>ByteType*</name>
            <content>
                <baseType ref="class_ByteType_490AEA1EE94BBCC3A1DFB53231F83959E2168A77"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CaseStatement_C59D9EE2EB215BB01443FA26C029108CF42800A1">
            <name>CaseStatement</name>
        </type>
        <type derived="true" id="type.d7fc206c-d5d6-4b52-afc6-9ef9c4d80c33">
            <name>CaseStatement&amp;</name>
            <content>
                <baseType ref="class_CaseStatement_C59D9EE2EB215BB01443FA26C029108CF42800A1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.50de75a1-bc17-4d7d-a5ae-69444070f1ca">
            <name>CaseStatement*</name>
            <content>
                <baseType ref="class_CaseStatement_C59D9EE2EB215BB01443FA26C029108CF42800A1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.76c65d4c-1a72-4e81-ad06-9d0e26be6a7b">
            <name>CaseStatement*&amp;</name>
            <content>
                <baseType ref="class_CaseStatement_C59D9EE2EB215BB01443FA26C029108CF42800A1"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1a0dbff5-d5e8-4147-adda-5997b296f8a0">
            <name>CaseStatement**</name>
            <content>
                <baseType ref="class_CaseStatement_C59D9EE2EB215BB01443FA26C029108CF42800A1"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Cast_9585B1B3446BC83A49E6CDB7486A782150BE11FC">
            <name>Cast</name>
        </type>
        <type derived="true" id="type.f5ad09cb-43d7-47fd-a9ec-3da10c53ac5a">
            <name>Cast&amp;</name>
            <content>
                <baseType ref="class_Cast_9585B1B3446BC83A49E6CDB7486A782150BE11FC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f1bf092b-8f63-4366-9069-c79921a6d635">
            <name>Cast*</name>
            <content>
                <baseType ref="class_Cast_9585B1B3446BC83A49E6CDB7486A782150BE11FC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Catch_0582D6C1CDCCCB626ECB14F1DA1432D9E2111A37">
            <name>Catch</name>
        </type>
        <type derived="true" id="type.a01feffb-a271-486a-a0c8-fbeeacd1c22c">
            <name>Catch&amp;</name>
            <content>
                <baseType ref="class_Catch_0582D6C1CDCCCB626ECB14F1DA1432D9E2111A37"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.17cd3b54-005d-42c8-8164-87f2935870b4">
            <name>Catch*</name>
            <content>
                <baseType ref="class_Catch_0582D6C1CDCCCB626ECB14F1DA1432D9E2111A37"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1013cd0c-c66a-4813-af0b-dabb90a7ec20">
            <name>Catch*&amp;</name>
            <content>
                <baseType ref="class_Catch_0582D6C1CDCCCB626ECB14F1DA1432D9E2111A37"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.728f187a-4e13-4caf-a923-0add1acaa963">
            <name>Catch**</name>
            <content>
                <baseType ref="class_Catch_0582D6C1CDCCCB626ECB14F1DA1432D9E2111A37"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CharType_779EBB19F92F0A89BF9304EC9025AA8E9CEC1C15">
            <name>CharType</name>
        </type>
        <type derived="true" id="type.b5815b3e-6594-44bd-97fc-c69b2f2dfab4">
            <name>CharType&amp;</name>
            <content>
                <baseType ref="class_CharType_779EBB19F92F0A89BF9304EC9025AA8E9CEC1C15"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9e0d312e-f71a-4cb0-8f73-77683bae1396">
            <name>CharType*</name>
            <content>
                <baseType ref="class_CharType_779EBB19F92F0A89BF9304EC9025AA8E9CEC1C15"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f438b00a-1f69-4963-90e0-6f599acdf3fe">
            <name>CodeFormatter&amp;</name>
            <content>
                <baseType ref="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e36b21f3-3672-4b3f-8869-5880131f247e">
            <name>CodeFormatter&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5">
            <name>Complement</name>
        </type>
        <type derived="true" id="type.f008d4d2-1d2d-4b45-9ddd-34eb79ae4cc9">
            <name>Complement&amp;</name>
            <content>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2d5dad73-22f3-46b5-bca5-ebbae6bb6216">
            <name>Complement&amp;&amp;</name>
            <content>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a5f88c9e-2845-4bd4-b178-1ca30920a55e">
            <name>Complement*</name>
            <content>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9">
            <name>CompoundStatement</name>
        </type>
        <type derived="true" id="type.8b8e4614-0b2e-43dd-bc2a-e3eb4c60234a">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.00c453d3-9b55-4ad8-be44-209d5e77d85a">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.36ef9524-152b-4d56-a223-9deda1c9d47a">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e110bcf3-b016-4be9-a860-1aa29ce94f96">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.01c2d99c-de5c-4799-afe5-fa8fa616ad50">
            <name>CompoundStatement*&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e4368a0b-63c7-4847-8d31-fe4bfaa47f43">
            <name>CompoundStatement**</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Conjunction_0132C4E38ACB57C960C99B8800089A5ED52CB3AD">
            <name>Conjunction</name>
        </type>
        <type derived="true" id="type.ee43ea3d-75e6-43fe-8b1d-c49b306817c7">
            <name>Conjunction&amp;</name>
            <content>
                <baseType ref="class_Conjunction_0132C4E38ACB57C960C99B8800089A5ED52CB3AD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6ce4c74f-cf53-4498-95a4-ca21e67f15ba">
            <name>Conjunction*</name>
            <content>
                <baseType ref="class_Conjunction_0132C4E38ACB57C960C99B8800089A5ED52CB3AD"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A">
            <name>Const</name>
        </type>
        <type derived="true" id="type.325c6481-d00e-429e-8c51-10181ee8f5b4">
            <name>Const&amp;</name>
            <content>
                <baseType ref="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9c3b2482-a191-4671-85a8-3e08d114fb28">
            <name>Const&amp;&amp;</name>
            <content>
                <baseType ref="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.601c3256-00d4-43c1-9a63-134d815d5345">
            <name>Const*</name>
            <content>
                <baseType ref="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8">
            <name>Construct</name>
        </type>
        <type derived="true" id="type.91f95670-16c8-44de-9bb3-e425f8739c50">
            <name>Construct&amp;</name>
            <content>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.01c8bf9b-8cd0-4afb-8a87-50337a70104a">
            <name>Construct&amp;&amp;</name>
            <content>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.511bc56f-4f30-4239-9aa6-497a637c5a7d">
            <name>Construct*</name>
            <content>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ConstructionStatement_0E8F6D33B33CABF85AEE993CBB0F609D7E941AEA">
            <name>ConstructionStatement</name>
        </type>
        <type derived="true" id="type.c7e78b02-1db9-4249-95de-6369809eab78">
            <name>ConstructionStatement&amp;</name>
            <content>
                <baseType ref="class_ConstructionStatement_0E8F6D33B33CABF85AEE993CBB0F609D7E941AEA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.58b86746-5d82-4194-a21e-60c70ccd8e74">
            <name>ConstructionStatement*</name>
            <content>
                <baseType ref="class_ConstructionStatement_0E8F6D33B33CABF85AEE993CBB0F609D7E941AEA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ContinueStatement_42B62A34F11C57D46CBD9B9E4C6DC070CA7E1CFC">
            <name>ContinueStatement</name>
        </type>
        <type derived="true" id="type.1bc6a0f1-fcc4-42dc-9980-6a3947720abd">
            <name>ContinueStatement&amp;</name>
            <content>
                <baseType ref="class_ContinueStatement_42B62A34F11C57D46CBD9B9E4C6DC070CA7E1CFC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7c63b4c1-5b8e-4d48-8638-82cf5db1aefe">
            <name>ContinueStatement*</name>
            <content>
                <baseType ref="class_ContinueStatement_42B62A34F11C57D46CBD9B9E4C6DC070CA7E1CFC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.42b7f893-26a8-437d-bf79-8d4e6336479c" specialization="true">
            <name>Counter&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30" specialization="true">
            <name>Counter&lt;T></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="e12acfaf-6162-421d-8781-e62af09c89f0"/>
            </content>
        </type>
        <type derived="true" id="type.b59abe44-2332-4e75-8c15-bb7e86b34f79">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.72be5edc-977c-482b-afe5-b71a30395267">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8417c590-410f-49e2-b05e-9eb723bf09fd">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fc4ae33a-31b0-4072-bab8-9ff60b9f5dea">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d6c52680-c594-4dde-b30e-d7a3dd4af0a8">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e502689c-3565-497a-a109-3c5587f4edbc">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A" specialization="true">
            <name>Counter&lt;U></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="111873c5-0fff-419c-9178-66847999eec5"/>
            </content>
        </type>
        <type id="class_DefaultStatement_431BBB02B62D93DF15B8BA112275D930065BD749">
            <name>DefaultStatement</name>
        </type>
        <type derived="true" id="type.0d4c5f88-d4ff-4e16-92b8-18e236ea0da0">
            <name>DefaultStatement&amp;</name>
            <content>
                <baseType ref="class_DefaultStatement_431BBB02B62D93DF15B8BA112275D930065BD749"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f99bc570-c339-4615-b21c-d988d35d4310">
            <name>DefaultStatement*</name>
            <content>
                <baseType ref="class_DefaultStatement_431BBB02B62D93DF15B8BA112275D930065BD749"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d68e928f-c3b2-4331-8907-b13add6bed11">
            <name>DefaultStatement*&amp;</name>
            <content>
                <baseType ref="class_DefaultStatement_431BBB02B62D93DF15B8BA112275D930065BD749"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d31afe25-0490-4a5c-b385-643477f43f6e">
            <name>DefaultStatement**</name>
            <content>
                <baseType ref="class_DefaultStatement_431BBB02B62D93DF15B8BA112275D930065BD749"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A">
            <name>DeleteStatement</name>
        </type>
        <type derived="true" id="type.be4d5f9d-1a21-40d5-9ef3-a41ce352648a">
            <name>DeleteStatement&amp;</name>
            <content>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dfcab020-3887-42ea-92d1-b38e942cba75">
            <name>DeleteStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4e670812-1eec-4287-ae68-5f826cc58b26">
            <name>DeleteStatement*</name>
            <content>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594">
            <name>Deref</name>
        </type>
        <type derived="true" id="type.db142a1a-8d41-4178-9503-0f6a23a5b0a1">
            <name>Deref&amp;</name>
            <content>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1a2866b0-cec4-4caa-b930-438ef0665c19">
            <name>Deref&amp;&amp;</name>
            <content>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ca2270a5-078b-4fa4-8692-99dac6da2a00">
            <name>Deref*</name>
            <content>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550">
            <name>DestroyStatement</name>
        </type>
        <type derived="true" id="type.bce163ff-43c8-4013-8c4a-a87ba1b28564">
            <name>DestroyStatement&amp;</name>
            <content>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.58413e2a-fa72-4648-ae6a-c9781d51e2c8">
            <name>DestroyStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5e733654-4164-4c49-810a-decf933bffd5">
            <name>DestroyStatement*</name>
            <content>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Disjunction_F31E3B03B7D35E04D91C7E729F2351D3957CC86E">
            <name>Disjunction</name>
        </type>
        <type derived="true" id="type.37f37003-f5e9-4f8d-8347-89a582d9992e">
            <name>Disjunction&amp;</name>
            <content>
                <baseType ref="class_Disjunction_F31E3B03B7D35E04D91C7E729F2351D3957CC86E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.83d2562f-d1f9-414f-af67-4bbd6f9739a6">
            <name>Disjunction*</name>
            <content>
                <baseType ref="class_Disjunction_F31E3B03B7D35E04D91C7E729F2351D3957CC86E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Div_870BC7AD6CF194517E350C8AF37CEAA3E22F8231">
            <name>Div</name>
        </type>
        <type derived="true" id="type.7668a87b-08cf-4a54-bc55-fcb4a541eb3a">
            <name>Div&amp;</name>
            <content>
                <baseType ref="class_Div_870BC7AD6CF194517E350C8AF37CEAA3E22F8231"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.92c2fe55-53ff-454b-8268-125728c90ac6">
            <name>Div*</name>
            <content>
                <baseType ref="class_Div_870BC7AD6CF194517E350C8AF37CEAA3E22F8231"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DoStatement_2DE84CAC1D895D9020F0342FAD7D807D41BC6D0E">
            <name>DoStatement</name>
        </type>
        <type derived="true" id="type.9a3b99da-fe5b-46d0-82eb-d2286571d170">
            <name>DoStatement&amp;</name>
            <content>
                <baseType ref="class_DoStatement_2DE84CAC1D895D9020F0342FAD7D807D41BC6D0E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cce3db5d-b27f-48d1-9a86-8b4c67af0108">
            <name>DoStatement*</name>
            <content>
                <baseType ref="class_DoStatement_2DE84CAC1D895D9020F0342FAD7D807D41BC6D0E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF">
            <name>DomObject</name>
        </type>
        <type derived="true" id="type.28634929-a5a4-4e41-b7c5-4ee761a132ef">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a18d4d17-f10c-463c-a9c8-c1270e8d56d2">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fa743429-9db7-476c-a61f-a2aa5979e555">
            <name>DomObject&amp;&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9a512402-860a-4be3-9615-25c9bb384b86">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c2f269c5-0274-4e89-9b59-ed3de7803839">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9a512402-860a-4be3-9615-25c9bb384b86">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ef6c5a93-51a4-4bac-8840-9efd83feebe1">
            <name>DomObject*&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.52574cc7-576c-4d63-959f-b3be534a3c19">
            <name>DomObject**</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Dot_3DBFB45CB93A3D81709E97835834A09CB64DBFD8">
            <name>Dot</name>
        </type>
        <type derived="true" id="type.46b58a3f-fb4f-4731-b9dc-991f89a68c38">
            <name>Dot&amp;</name>
            <content>
                <baseType ref="class_Dot_3DBFB45CB93A3D81709E97835834A09CB64DBFD8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f44ed7a7-c673-49f6-9abf-f99ffb665aea">
            <name>Dot*</name>
            <content>
                <baseType ref="class_Dot_3DBFB45CB93A3D81709E97835834A09CB64DBFD8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DoubleType_2F54DB2225723BF66747F0EE8930D97AEAC3087B">
            <name>DoubleType</name>
        </type>
        <type derived="true" id="type.2e9942fc-0e9f-40c6-b6e3-c38f8f70b264">
            <name>DoubleType&amp;</name>
            <content>
                <baseType ref="class_DoubleType_2F54DB2225723BF66747F0EE8930D97AEAC3087B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b4725e9b-5b22-418e-ad9e-506102e31caf">
            <name>DoubleType*</name>
            <content>
                <baseType ref="class_DoubleType_2F54DB2225723BF66747F0EE8930D97AEAC3087B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EmptyStatement_6FB774F9105B54DBC81384D86B6519B51F8CEC1A">
            <name>EmptyStatement</name>
        </type>
        <type derived="true" id="type.99324dfd-0ffd-4ef4-8185-a1cb04cb4d1f">
            <name>EmptyStatement&amp;</name>
            <content>
                <baseType ref="class_EmptyStatement_6FB774F9105B54DBC81384D86B6519B51F8CEC1A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a0f0806a-adbc-4355-a197-50403cbb3a26">
            <name>EmptyStatement*</name>
            <content>
                <baseType ref="class_EmptyStatement_6FB774F9105B54DBC81384D86B6519B51F8CEC1A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Equal_3EF4BE86B509FD01F694F7C4806B5C900557528A">
            <name>Equal</name>
        </type>
        <type derived="true" id="type.5e644cc0-39b9-4088-86a4-2e01f2f98c11">
            <name>Equal&amp;</name>
            <content>
                <baseType ref="class_Equal_3EF4BE86B509FD01F694F7C4806B5C900557528A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e2ba70ca-0d47-4293-acbf-dcb4995f9248">
            <name>Equal*</name>
            <content>
                <baseType ref="class_Equal_3EF4BE86B509FD01F694F7C4806B5C900557528A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Expression_63F45770E98CB553F848612A60783A045B1137F7">
            <name>Expression</name>
        </type>
        <type derived="true" id="type.82c6e0a7-9e0c-40a5-85a5-999468e7a7ad">
            <name>Expression&amp;</name>
            <content>
                <baseType ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.11c687ff-c2db-4965-9033-2380dbb99a4c">
            <name>Expression*</name>
            <content>
                <baseType ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54">
            <name>ExpressionStatement</name>
        </type>
        <type derived="true" id="type.df4fcb6a-fdae-469d-b47b-32ead15b6819">
            <name>ExpressionStatement&amp;</name>
            <content>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b608e34b-b0a7-41b7-9928-1357c881c0ce">
            <name>ExpressionStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1bbb01ef-e26c-4db3-beed-fc8937755aa9">
            <name>ExpressionStatement*</name>
            <content>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_FloatType_F56BE7D1812AE8764A94A3C4A98DBCACB5F6BD11">
            <name>FloatType</name>
        </type>
        <type derived="true" id="type.e7366ef4-7dea-4e93-9939-bc396220e97d">
            <name>FloatType&amp;</name>
            <content>
                <baseType ref="class_FloatType_F56BE7D1812AE8764A94A3C4A98DBCACB5F6BD11"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0ee540db-1134-4ca9-adaa-fb87a2e88966">
            <name>FloatType*</name>
            <content>
                <baseType ref="class_FloatType_F56BE7D1812AE8764A94A3C4A98DBCACB5F6BD11"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ForStatement_2C9CB31D518BF6F5E055FFE544F154898DB891FC">
            <name>ForStatement</name>
        </type>
        <type derived="true" id="type.f1a5739c-0168-448a-9e9a-d870622982f2">
            <name>ForStatement&amp;</name>
            <content>
                <baseType ref="class_ForStatement_2C9CB31D518BF6F5E055FFE544F154898DB891FC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.63781f98-2ef5-46a9-812a-0ec6721eeb4e">
            <name>ForStatement*</name>
            <content>
                <baseType ref="class_ForStatement_2C9CB31D518BF6F5E055FFE544F154898DB891FC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051" specialization="true">
            <name>ForwardList&lt;T></name>
            <content>
                <primaryType ref="class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <argumentType ref="88ea128c-abf7-4278-a98b-ddd12f6cd256"/>
            </content>
        </type>
        <type derived="true" id="type.fd3c13b5-36f7-483d-a72b-aae48b1f207c">
            <name>ForwardList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA" specialization="true">
            <name>ForwardListNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="4cf6ec60-4efd-46d8-ae39-6b5ae79f6596"/>
                <argumentType ref="468e6a4c-ef5e-4ad1-a141-55ffc196aae9"/>
                <argumentType ref="3ad1eca4-6d16-4c0e-a731-1cec8c0a324d"/>
            </content>
        </type>
        <type derived="true" id="type.67b8f678-d93a-4303-a94d-3b56d6d57e00">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fe359bc9-ba69-47d4-bec7-285ae084f8ea">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84" specialization="true">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="88ea128c-abf7-4278-a98b-ddd12f6cd256"/>
                <argumentType ref="type.2d9e8d2c-ed80-45dd-ade5-486e2a29ff63"/>
                <argumentType ref="type.4ec4929b-5eb8-424b-b2a2-f171898eab3f"/>
            </content>
        </type>
        <type derived="true" id="type.df803931-dc39-47a8-829b-d222c1a448eb">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.61842596-e211-4566-9085-7c0516d238ca">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.de0d9ad1-9c6e-4892-8374-407154e69d21">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3" specialization="true">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="8dc30a06-25a2-45c6-8f19-dcf483533d15"/>
                <argumentType ref="type.fde9983b-3654-40f8-ba5f-e9206a509160"/>
                <argumentType ref="type.ac9ef8e6-0f1c-4856-a830-e6171dbf9ed5"/>
            </content>
        </type>
        <type derived="true" id="type.0b6ec6fd-a5f3-4872-a24c-09e48019bcbe">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.26b6e22b-0ae2-430f-966d-a2ef80e111d3">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3422091b-ca61-4151-8a47-e58d54dde39a">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8" specialization="true">
            <name>FrontInsertIterator&lt;C></name>
            <content>
                <primaryType ref="class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <argumentType ref="0f0a9135-17cc-4e75-8fa4-3a64b58f1ebb"/>
            </content>
        </type>
        <type derived="true" id="type.465276c9-eb1c-43cc-bc38-5bb24477be66">
            <name>FrontInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.187003ec-51ca-42c9-a26e-6dafa35488c0">
            <name>FrontInsertIterator&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467" specialization="true">
            <name>FrontInsertProxy&lt;C></name>
            <content>
                <primaryType ref="class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <argumentType ref="7209e1b7-6508-4ad9-802f-fb8d6ed1fffc"/>
            </content>
        </type>
        <type derived="true" id="type.90152dac-826a-4b90-a3f8-b4e3190df40c">
            <name>FrontInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a149bd48-b23c-4329-b7d6-629e6d1b3fa8">
            <name>FrontInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e9ecbf26-5104-4ec0-b06c-de11c24f0892">
            <name>FrontInsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7e3f1d44-e8b3-4404-9693-c93cf4b7166e">
            <name>FunctionProfiler&amp;&amp;</name>
            <content>
                <baseType ref="class_FunctionProfiler_809E118D4757DEA417E0CB7F4E658DF7C4B79B00"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D">
            <name>GotoCaseStatement</name>
        </type>
        <type derived="true" id="type.01a88b4e-b52f-4064-9ada-a9c810631f14">
            <name>GotoCaseStatement&amp;</name>
            <content>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5f713cfa-e640-4c1c-81b7-8390518420e7">
            <name>GotoCaseStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5d38095b-faa6-4ec1-8bf0-48a1d2c107e8">
            <name>GotoCaseStatement*</name>
            <content>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_GotoDefaultStatement_A0F05081B3A8A0CF31277B3E9AB698FF523E7B9F">
            <name>GotoDefaultStatement</name>
        </type>
        <type derived="true" id="type.d36b536d-aa8f-4bfb-9777-9a603377743c">
            <name>GotoDefaultStatement&amp;</name>
            <content>
                <baseType ref="class_GotoDefaultStatement_A0F05081B3A8A0CF31277B3E9AB698FF523E7B9F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3603ae84-2f65-48e7-b61c-a3b777fd6305">
            <name>GotoDefaultStatement*</name>
            <content>
                <baseType ref="class_GotoDefaultStatement_A0F05081B3A8A0CF31277B3E9AB698FF523E7B9F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E">
            <name>GotoStatement</name>
        </type>
        <type derived="true" id="type.7ee5fde5-5d90-446e-b3ff-f5f531dad107">
            <name>GotoStatement&amp;</name>
            <content>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.87b62e21-6bdc-486f-9341-c89366320538">
            <name>GotoStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5a1c6b66-76ef-473a-8ae2-85b5953e2db4">
            <name>GotoStatement*</name>
            <content>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Greater_615FAE96F23C7D50557A473DB2E1090BB39F1311">
            <name>Greater</name>
        </type>
        <type derived="true" id="type.49897e6f-790a-4061-adc9-e8f8b3c569c4">
            <name>Greater&amp;</name>
            <content>
                <baseType ref="class_Greater_615FAE96F23C7D50557A473DB2E1090BB39F1311"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b2c556dc-8aee-4a3d-b3a3-135e2544e26d">
            <name>Greater*</name>
            <content>
                <baseType ref="class_Greater_615FAE96F23C7D50557A473DB2E1090BB39F1311"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_GreaterOrEqual_4400FB33354DC18FE0061555E68C302AD3CE11E6">
            <name>GreaterOrEqual</name>
        </type>
        <type derived="true" id="type.e7334a83-29d4-4c53-9f8c-a6c94c41a401">
            <name>GreaterOrEqual&amp;</name>
            <content>
                <baseType ref="class_GreaterOrEqual_4400FB33354DC18FE0061555E68C302AD3CE11E6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2d6d7f86-7587-483d-879e-e3130a1b908d">
            <name>GreaterOrEqual*</name>
            <content>
                <baseType ref="class_GreaterOrEqual_4400FB33354DC18FE0061555E68C302AD3CE11E6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B" specialization="true">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="4da7762f-8c5e-4d4e-a185-605883df46f1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <argumentType ref="ede62ec2-8b40-4997-b09d-38f70b1810e2"/>
                <argumentType ref="7309693c-b3f3-4960-abaa-888b23e61971"/>
            </content>
        </type>
        <type derived="true" id="type.fb900c19-24b5-4438-b5b0-4e034fa095ff">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2" specialization="true">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="6731076c-f39f-4b1a-901e-acda07d86381"/>
                <argumentType ref="8e5332b6-c054-4eb4-934f-5d11acbfb871"/>
                <argumentType ref="89b6f68f-9374-4572-93c6-4590f3b6c892"/>
                <argumentType ref="b13fc40d-014a-4f37-ae20-8382f9a3d657"/>
                <argumentType ref="2ab7d8aa-35f4-4927-9369-03b27972eee6"/>
            </content>
        </type>
        <type derived="true" id="type.490d9e14-270b-4f88-9668-b611a8693db2">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C" specialization="true">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="59a666a4-caab-49c0-96b5-4c967d4999f2"/>
                <argumentType ref="59a666a4-caab-49c0-96b5-4c967d4999f2"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="6dc86999-6cd9-4f12-90a3-436362b9dda2"/>
                <argumentType ref="2a624689-21a4-43ae-8fed-0fcdfe1af1ab"/>
            </content>
        </type>
        <type derived="true" id="type.34d2f5fd-3780-47e0-a021-43fcaa6e6f68">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7">
            <name>Identifier</name>
        </type>
        <type derived="true" id="type.5b209244-c04e-492e-a649-42b1ab07eca0">
            <name>Identifier&amp;</name>
            <content>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.507b9fcb-8625-4248-a1bf-edbfd4a83309">
            <name>Identifier&amp;&amp;</name>
            <content>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e71140d5-f995-4e0a-9e72-9a8b59af9c9f">
            <name>Identifier*</name>
            <content>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_IfStatement_C1EF6483EAB3986BA6A34F9E4C9ED4C0F2F824DE">
            <name>IfStatement</name>
        </type>
        <type derived="true" id="type.0cbb090a-6829-46f9-8006-ace3fbe0d5a8">
            <name>IfStatement&amp;</name>
            <content>
                <baseType ref="class_IfStatement_C1EF6483EAB3986BA6A34F9E4C9ED4C0F2F824DE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2f959db2-85de-4a4f-b8cc-2379b4728ebb">
            <name>IfStatement*</name>
            <content>
                <baseType ref="class_IfStatement_C1EF6483EAB3986BA6A34F9E4C9ED4C0F2F824DE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Indexing_F06FD2A01CA08D73D3B848268E78E8185020CBA4">
            <name>Indexing</name>
        </type>
        <type derived="true" id="type.1ad66509-bbe4-4553-9751-e7984df511aa">
            <name>Indexing&amp;</name>
            <content>
                <baseType ref="class_Indexing_F06FD2A01CA08D73D3B848268E78E8185020CBA4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.02aa3663-c2f5-4794-8a4e-27577aecce03">
            <name>Indexing*</name>
            <content>
                <baseType ref="class_Indexing_F06FD2A01CA08D73D3B848268E78E8185020CBA4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A" specialization="true">
            <name>InsertProxy&lt;C></name>
            <content>
                <primaryType ref="class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <argumentType ref="907d0156-4c29-40f8-9e0d-3a2654086ae5"/>
            </content>
        </type>
        <type derived="true" id="type.96b2a8b5-02fa-4856-8c26-3b67880a0a95">
            <name>InsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.821d513b-97dd-4b74-aa4b-2576d3c463a5">
            <name>InsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3dd65cd9-1d4a-4f4a-a93e-5dd60fe5b2eb">
            <name>InsertProxy&lt;C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_IntType_40DD4EEE7B839A4874F17F4DF4577431DCA81D97">
            <name>IntType</name>
        </type>
        <type derived="true" id="type.9a16b8dc-c23e-46d3-9dee-c53509083a01">
            <name>IntType&amp;</name>
            <content>
                <baseType ref="class_IntType_40DD4EEE7B839A4874F17F4DF4577431DCA81D97"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.584834b1-7479-4637-9112-5a42d48c4ab4">
            <name>IntType*</name>
            <content>
                <baseType ref="class_IntType_40DD4EEE7B839A4874F17F4DF4577431DCA81D97"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5">
            <name>Invoke</name>
        </type>
        <type derived="true" id="type.858f20bc-3fb2-4c6f-b877-f2b3ca1aeed3">
            <name>Invoke&amp;</name>
            <content>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9c192da9-ab99-4806-8abc-d69d36a596a1">
            <name>Invoke&amp;&amp;</name>
            <content>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5d9de3a6-1b83-4fe3-a73c-5f29b176a7cc">
            <name>Invoke*</name>
            <content>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Is_EC0C6DA58F33941C0957B3F764732D8472F6E088">
            <name>Is</name>
        </type>
        <type derived="true" id="type.c9b51c7a-f6aa-4902-b6a7-f32a2a2d8891">
            <name>Is&amp;</name>
            <content>
                <baseType ref="class_Is_EC0C6DA58F33941C0957B3F764732D8472F6E088"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7e4b6b2a-942c-4dc9-a4d0-19caaadd2992">
            <name>Is*</name>
            <content>
                <baseType ref="class_Is_EC0C6DA58F33941C0957B3F764732D8472F6E088"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Less_1580A37986A6536C269A3DC15DC3E14E4C0804EA">
            <name>Less</name>
        </type>
        <type derived="true" id="type.6b2dc802-a859-467d-86f5-4467bc350c0b">
            <name>Less&amp;</name>
            <content>
                <baseType ref="class_Less_1580A37986A6536C269A3DC15DC3E14E4C0804EA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2de0fc24-52d6-49a9-819a-97b251392ec1">
            <name>Less*</name>
            <content>
                <baseType ref="class_Less_1580A37986A6536C269A3DC15DC3E14E4C0804EA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_LessOrEqual_9091963D31C6715767D56C999742B7722B15871F">
            <name>LessOrEqual</name>
        </type>
        <type derived="true" id="type.b7533f91-fcd5-4143-98d3-2cd8589f3d2c">
            <name>LessOrEqual&amp;</name>
            <content>
                <baseType ref="class_LessOrEqual_9091963D31C6715767D56C999742B7722B15871F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.475bbbda-1a40-4feb-a53d-e183bbbcee8f">
            <name>LessOrEqual*</name>
            <content>
                <baseType ref="class_LessOrEqual_9091963D31C6715767D56C999742B7722B15871F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20" specialization="true">
            <name>LinkedList&lt;T></name>
            <content>
                <primaryType ref="class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <argumentType ref="82127f68-863f-4641-97a3-cd93de4496dd"/>
            </content>
        </type>
        <type derived="true" id="type.7bf3e037-b7a7-4b3f-b95f-08aadaf5f7af">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f9a4cba8-c1ce-468f-93e1-960213eb7d04">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.10711801-51a9-45ee-84b1-b162fd57e9b5" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.c4ec49f9-1545-4f27-98a1-8fc5374cd10a"/>
            </content>
        </type>
        <type derived="true" id="type.500221e4-c979-4d64-b00c-b636ac91bbe0">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.10711801-51a9-45ee-84b1-b162fd57e9b5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4bbee38f-110b-4d10-bc93-9dcf2df9c2ce" specialization="true">
            <name>List&lt;Bucket&lt;T>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.187def8d-8e90-4b0a-add9-f09106520202"/>
            </content>
        </type>
        <type derived="true" id="type.445a76e0-f977-4db6-9b6e-ef73b80c305a">
            <name>List&lt;Bucket&lt;T>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4bbee38f-110b-4d10-bc93-9dcf2df9c2ce"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a782f7fd-5afc-47da-92d1-748f94bf8453" specialization="true">
            <name>List&lt;Bucket&lt;ValueType>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.8acef2ca-a4de-4966-80f0-57f202100e34"/>
            </content>
        </type>
        <type derived="true" id="type.8a0ccd21-0039-48ce-add9-992d419f72db">
            <name>List&lt;Bucket&lt;ValueType>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.a782f7fd-5afc-47da-92d1-748f94bf8453"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a1dd6545-842e-455a-a568-1ccbe3fad759" specialization="true">
            <name>List&lt;String&lt;CharT>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
            </content>
        </type>
        <type derived="true" id="type.00ecb758-94e0-48bd-b9b2-3e6c49431bf1">
            <name>List&lt;String&lt;CharT>>&amp;&amp;</name>
            <content>
                <baseType ref="type.a1dd6545-842e-455a-a568-1ccbe3fad759"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="998b6c44-792d-4efd-ac23-12cdabf7a36f"/>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="7146fe99-6b99-4c2c-b35d-5df901fb77d8"/>
            </content>
        </type>
        <type derived="true" id="type.97fdbf3d-c80c-4a7a-a09f-310e0fabcc62">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c27ade19-8ad7-4f6e-a1d3-e188323e643e">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6863dcde-2764-473b-a11a-cfdd3d172f2f">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.2a329468-2409-463c-820f-9b19b6d2fa90" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
            </content>
        </type>
        <type derived="true" id="type.ff7a8134-f706-443f-8f67-1ccca5f7f7c4">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>>&amp;</name>
            <content>
                <baseType ref="type.2a329468-2409-463c-820f-9b19b6d2fa90"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c4c2f895-29b3-4c51-9fa6-d0305e9c89cd">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>>&amp;&amp;</name>
            <content>
                <baseType ref="type.2a329468-2409-463c-820f-9b19b6d2fa90"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.367655db-a0a2-4195-9326-7b943de56314">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>>*</name>
            <content>
                <baseType ref="type.2a329468-2409-463c-820f-9b19b6d2fa90"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8d59325f-2936-4d0b-9200-39ffb2fd9484" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
            </content>
        </type>
        <type derived="true" id="type.53f9f581-52e3-4201-a903-1de06b1a5606">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>>&amp;</name>
            <content>
                <baseType ref="type.8d59325f-2936-4d0b-9200-39ffb2fd9484"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0fb2a9d0-0c9e-4754-a7b5-6e90872e8743">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>>&amp;&amp;</name>
            <content>
                <baseType ref="type.8d59325f-2936-4d0b-9200-39ffb2fd9484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.78be0be5-905e-4148-905b-30efe95b2a4f">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>>*</name>
            <content>
                <baseType ref="type.8d59325f-2936-4d0b-9200-39ffb2fd9484"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.7424ce3b-e581-429a-93ed-24be04c68e1a" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
            </content>
        </type>
        <type derived="true" id="type.ad58c719-9542-450b-88ef-80431dfbf396">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>>&amp;</name>
            <content>
                <baseType ref="type.7424ce3b-e581-429a-93ed-24be04c68e1a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c1afc5c2-32d5-4d30-8e3c-c2117d8d8f8b">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>>&amp;&amp;</name>
            <content>
                <baseType ref="type.7424ce3b-e581-429a-93ed-24be04c68e1a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.23f521f8-79cd-45a0-88e6-f4f4b86461a1">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>>*</name>
            <content>
                <baseType ref="type.7424ce3b-e581-429a-93ed-24be04c68e1a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.bccf26ee-054b-49eb-923a-574eb42d4c6a" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
            </content>
        </type>
        <type derived="true" id="type.91913bf3-4209-42f0-8a24-b8147d1ceee4">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>>&amp;</name>
            <content>
                <baseType ref="type.bccf26ee-054b-49eb-923a-574eb42d4c6a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c10bc021-6ff4-473c-8fc0-a05bc5d298e2">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>>&amp;&amp;</name>
            <content>
                <baseType ref="type.bccf26ee-054b-49eb-923a-574eb42d4c6a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f596d0fb-fed1-4ae8-ac64-7d5af4fd3ddc">
            <name>List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>>*</name>
            <content>
                <baseType ref="type.bccf26ee-054b-49eb-923a-574eb42d4c6a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77">
            <name>Literal</name>
        </type>
        <type derived="true" id="type.85c8271e-8df9-4abb-858e-38113539b092">
            <name>Literal&amp;</name>
            <content>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e6921d03-54ff-4291-9f12-4f4696864a7f">
            <name>Literal&amp;&amp;</name>
            <content>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.27f2f8cb-9b57-4e0f-8015-3f1b88b731f9">
            <name>Literal*</name>
            <content>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1" specialization="true">
            <name>LockGuard&lt;Mtx></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="17f0a187-2da0-4e25-9e8c-a86eb1ce1f8f"/>
            </content>
        </type>
        <type derived="true" id="type.f20e69ff-3835-4888-8c73-89b60876d0ae">
            <name>LockGuard&lt;Mtx>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.fa4abbcc-d5c3-4d23-a6d1-a05311f67255" specialization="true">
            <name>LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.740afbf0-2e35-4100-995a-2d2cce7aac7e">
            <name>LockGuard&lt;System.Threading.Mutex>&amp;&amp;</name>
            <content>
                <baseType ref="type.fa4abbcc-d5c3-4d23-a6d1-a05311f67255"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_LongType_F67B8047273646A168685FD9A0A063CEDFF5131C">
            <name>LongType</name>
        </type>
        <type derived="true" id="type.9e759d6c-9223-4618-ba39-6c450262de6f">
            <name>LongType&amp;</name>
            <content>
                <baseType ref="class_LongType_F67B8047273646A168685FD9A0A063CEDFF5131C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0dfa3e71-9f1c-49a6-888c-070e46ed523a">
            <name>LongType*</name>
            <content>
                <baseType ref="class_LongType_F67B8047273646A168685FD9A0A063CEDFF5131C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05">
            <name>LvalueRef</name>
        </type>
        <type derived="true" id="type.492b362e-1f64-4dcb-a4b8-e15a263b574e">
            <name>LvalueRef&amp;</name>
            <content>
                <baseType ref="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a1989f7f-4399-4e2a-af67-6733a83301f1">
            <name>LvalueRef&amp;&amp;</name>
            <content>
                <baseType ref="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f019f4c2-f181-4fa1-be9f-f0cf64dc3a59">
            <name>LvalueRef*</name>
            <content>
                <baseType ref="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9ff7074d-998e-4c3c-8c26-cde6ed9d4ad1">
            <name>Mtx&amp;</name>
            <content>
                <baseType ref="17f0a187-2da0-4e25-9e8c-a86eb1ce1f8f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="class_Mul_34532DF2D76B7BA144AA0E44CCBF15EA39D37CCF">
            <name>Mul</name>
        </type>
        <type derived="true" id="type.429864a6-ab3e-43a6-bd66-70da3b2f7c78">
            <name>Mul&amp;</name>
            <content>
                <baseType ref="class_Mul_34532DF2D76B7BA144AA0E44CCBF15EA39D37CCF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4b6ca3a4-0c24-45c1-8d7b-81e327f228d6">
            <name>Mul*</name>
            <content>
                <baseType ref="class_Mul_34532DF2D76B7BA144AA0E44CCBF15EA39D37CCF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21">
            <name>New</name>
        </type>
        <type derived="true" id="type.b9540fde-35fe-47f3-b86d-56204a81c3b5">
            <name>New&amp;</name>
            <content>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c115c71c-abf5-42a3-a689-607a7d7d5be7">
            <name>New&amp;&amp;</name>
            <content>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.edad9301-0518-472f-82ac-0bdf9304392c">
            <name>New*</name>
            <content>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187">
            <name>Not</name>
        </type>
        <type derived="true" id="type.63a4cc96-04de-442a-96ca-718cfc77187e">
            <name>Not&amp;</name>
            <content>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.27db486c-a57e-44b5-9b45-3a0ea273974e">
            <name>Not&amp;&amp;</name>
            <content>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.02815ae0-e9d3-4487-aacc-225b278c2427">
            <name>Not*</name>
            <content>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_NotEqual_57BE2D644B155B649C949C1AB40D6F621FE9F457">
            <name>NotEqual</name>
        </type>
        <type derived="true" id="type.30d7fa7f-b0f7-487a-9caa-c3253e1f97e8">
            <name>NotEqual&amp;</name>
            <content>
                <baseType ref="class_NotEqual_57BE2D644B155B649C949C1AB40D6F621FE9F457"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.215377dc-6531-411f-ab39-9baddfbc2612">
            <name>NotEqual*</name>
            <content>
                <baseType ref="class_NotEqual_57BE2D644B155B649C949C1AB40D6F621FE9F457"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87">
            <name>Operator</name>
        </type>
        <type derived="true" id="type.e8098e23-d8e6-4cd3-a72e-3820de0919e7">
            <name>Operator&amp;</name>
            <content>
                <baseType ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c8ed35aa-b29f-4d69-a17f-da4c86353318">
            <name>Operator&amp;&amp;</name>
            <content>
                <baseType ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d2f68899-67a3-4a23-bceb-fdf07ca3c640">
            <name>Operator*</name>
            <content>
                <baseType ref="enumerated_type_Operator_4F0018C24F233767C89E790B72E5C84238A85A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9" specialization="true">
            <name>Pair&lt;T, U></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="170940f2-876b-462a-af93-f8878fb19cf2"/>
                <argumentType ref="2df605e5-b653-4b8e-ae34-764906a561f9"/>
            </content>
        </type>
        <type id="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6">
            <name>Pointer</name>
        </type>
        <type derived="true" id="type.f7fd5eaa-293c-4a3d-8304-628270684f16">
            <name>Pointer&amp;</name>
            <content>
                <baseType ref="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9d24b2ab-a8e4-4e6a-add5-e0a479309e0f">
            <name>Pointer&amp;&amp;</name>
            <content>
                <baseType ref="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.913de2fc-f133-4904-bab7-ebba56e463d0">
            <name>Pointer*</name>
            <content>
                <baseType ref="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392">
            <name>PostfixDecrement</name>
        </type>
        <type derived="true" id="type.9696089f-9ff2-4921-bd51-4ee192cf6b9a">
            <name>PostfixDecrement&amp;</name>
            <content>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c7e45031-fd46-4bf2-806a-85db713cadfe">
            <name>PostfixDecrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.30974169-a159-4f68-bdd4-4d78b63346bb">
            <name>PostfixDecrement*</name>
            <content>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PostfixExpression_09A9F6851C2A6B2C5C4B926050A1F22378DE15A3">
            <name>PostfixExpression</name>
        </type>
        <type derived="true" id="type.f23e4aca-c1e6-48ee-8346-3fd551397d24">
            <name>PostfixExpression&amp;</name>
            <content>
                <baseType ref="class_PostfixExpression_09A9F6851C2A6B2C5C4B926050A1F22378DE15A3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2d6af690-437d-4adc-aaa7-75dbb34309e9">
            <name>PostfixExpression*</name>
            <content>
                <baseType ref="class_PostfixExpression_09A9F6851C2A6B2C5C4B926050A1F22378DE15A3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.72f704f9-e2ec-4eff-b6f4-94bcdde1857b">
            <name>PostfixExpression*&amp;</name>
            <content>
                <baseType ref="class_PostfixExpression_09A9F6851C2A6B2C5C4B926050A1F22378DE15A3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee397e8a-2757-4f90-9087-b1de62176fa4">
            <name>PostfixExpression**</name>
            <content>
                <baseType ref="class_PostfixExpression_09A9F6851C2A6B2C5C4B926050A1F22378DE15A3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9">
            <name>PostfixIncrement</name>
        </type>
        <type derived="true" id="type.fe170fbe-1776-4202-b559-57ea94ed07ca">
            <name>PostfixIncrement&amp;</name>
            <content>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2b8a2bcf-3fb2-463b-8954-3365dc4b3256">
            <name>PostfixIncrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fa314c2d-2d2c-49f0-a296-88ad434dbf3a">
            <name>PostfixIncrement*</name>
            <content>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0">
            <name>PrefixDecrement</name>
        </type>
        <type derived="true" id="type.3ff52e89-82cc-42f3-9783-7c21325f497e">
            <name>PrefixDecrement&amp;</name>
            <content>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4723ca51-040f-49ca-8a5d-7eaf015d1c76">
            <name>PrefixDecrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.40f1b0a5-1acc-4b42-910d-54fea272ac44">
            <name>PrefixDecrement*</name>
            <content>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948">
            <name>PrefixExpression</name>
        </type>
        <type derived="true" id="type.ae9b88cf-e820-440a-9fab-dfff40a49a6a">
            <name>PrefixExpression&amp;</name>
            <content>
                <baseType ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3730a514-6936-49b0-9910-501e3181281d">
            <name>PrefixExpression*</name>
            <content>
                <baseType ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a23ab468-2c73-4b0c-84d8-3f26216f5dd6">
            <name>PrefixExpression*&amp;</name>
            <content>
                <baseType ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2830a822-ae1d-45cb-a9b9-1e185f6251ee">
            <name>PrefixExpression**</name>
            <content>
                <baseType ref="class_PrefixExpression_54423C4D20F88D06F79420BDBE11404D5B729948"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D">
            <name>PrefixIncrement</name>
        </type>
        <type derived="true" id="type.62b0ef48-4a97-4e36-8d68-7754a887ee06">
            <name>PrefixIncrement&amp;</name>
            <content>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.05fadbb7-90d6-42ce-90db-a079efaf8671">
            <name>PrefixIncrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9de75336-3ea9-471c-a1a1-69d680312cba">
            <name>PrefixIncrement*</name>
            <content>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.fcddf120-4256-4ec4-9962-9f5c16e2ba99" specialization="true">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.930a06a6-07f0-4507-af6d-38f9c5212186"/>
                <argumentType ref="type.0854487d-3552-46e7-adfe-0c701f104d67"/>
                <argumentType ref="type.52acbdc6-be0f-41e9-b790-51967ccf33d4"/>
            </content>
        </type>
        <type derived="true" id="type.d5800b45-d9da-463a-bf34-67b59dec1421">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**>&amp;&amp;</name>
            <content>
                <baseType ref="type.fcddf120-4256-4ec4-9962-9f5c16e2ba99"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.cff7adb6-5712-4d6d-9081-08aced9a992f" specialization="true">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e4064d7b-41b6-418b-9c8c-6e020817c5da"/>
                <argumentType ref="type.c27de41d-66f1-4b40-bc60-20613446f63e"/>
                <argumentType ref="type.623c3530-8cc6-4fec-960f-dbcf8ef78c41"/>
            </content>
        </type>
        <type derived="true" id="type.4d52378c-34d6-488e-8584-364c12e84df5">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.cff7adb6-5712-4d6d-9081-08aced9a992f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.d7011730-5dba-48df-b114-ee73204a58f9" specialization="true">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8f845359-a82a-4442-9ba7-d60a5347ce6b"/>
                <argumentType ref="type.d0aa53a7-9159-492e-9441-3fd9267e66ca"/>
                <argumentType ref="type.3ebf1ebc-fb17-48e5-9635-007d687c14f5"/>
            </content>
        </type>
        <type derived="true" id="type.7f230cbd-ad35-4d96-a0e9-0e6d7ecc67d8">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**>&amp;&amp;</name>
            <content>
                <baseType ref="type.d7011730-5dba-48df-b114-ee73204a58f9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.dfae8521-e19e-430b-8b9a-fa26aefc8a5d" specialization="true">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.cf0d3a58-d179-483c-8b42-f70840af1c5d"/>
                <argumentType ref="type.7ba68b07-71df-4fca-95d4-4945d718870f"/>
                <argumentType ref="type.1c07d9f3-0385-4024-beaa-25b15932846d"/>
            </content>
        </type>
        <type derived="true" id="type.3643b402-8d88-4290-a87e-1c0da11dfb61">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.dfae8521-e19e-430b-8b9a-fa26aefc8a5d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.c8c3e0ec-6552-4012-9744-f49d16203205" specialization="true">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.81843ff4-3d69-4bf7-a238-d779f04d3ad5"/>
                <argumentType ref="type.7b047d8f-ba81-4d36-bd7b-264d37818922"/>
                <argumentType ref="type.4706779b-65ee-46b7-a109-0cd7c4e288b8"/>
            </content>
        </type>
        <type derived="true" id="type.b0f5065c-cf40-4a87-a88f-3293ffd33579">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**>&amp;&amp;</name>
            <content>
                <baseType ref="type.c8c3e0ec-6552-4012-9744-f49d16203205"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.e90ae4a7-a3e4-4daa-beee-d8c183ce2a0c" specialization="true">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.c27500e9-72f8-4e80-9a1b-a97af5787a27"/>
                <argumentType ref="type.a861f32e-3aad-459c-9b6b-c40844da9135"/>
                <argumentType ref="type.d86f2183-ab98-4a97-a183-be7bd8ee065c"/>
            </content>
        </type>
        <type derived="true" id="type.52858b82-b0f2-43ca-abd3-537343afe803">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**>&amp;&amp;</name>
            <content>
                <baseType ref="type.e90ae4a7-a3e4-4daa-beee-d8c183ce2a0c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.f3a2a3a3-f1d9-4166-af79-a6d2eb0f4f71" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.6ba54a31-322e-4765-91ce-cf6b62b5a0c9"/>
                <argumentType ref="type.fd792736-ab04-4941-a6a2-346e9afd2d9f"/>
                <argumentType ref="type.6439e12f-85c7-4bdb-a347-27b2b1356f03"/>
            </content>
        </type>
        <type id="type.9efe58bb-77ac-45e4-87eb-e852ef8c073a" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.c4ec49f9-1545-4f27-98a1-8fc5374cd10a"/>
                <argumentType ref="type.74156a6d-40f1-4908-a368-ab8d1a573691"/>
                <argumentType ref="type.019e739e-4085-4370-ac53-489ae2386c3e"/>
            </content>
        </type>
        <type derived="true" id="type.7f6ce327-4b8d-4214-bd5a-e1965f6040a3">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.f3a2a3a3-f1d9-4166-af79-a6d2eb0f4f71"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3f228606-86da-4f04-85cc-4faf38655102">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9efe58bb-77ac-45e4-87eb-e852ef8c073a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.0ace0e80-4b4d-408e-94f4-7e88ff32728c" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.6ba54a31-322e-4765-91ce-cf6b62b5a0c9"/>
                <argumentType ref="type.bc64ec6c-f716-406e-9a6e-6fc462dd1992"/>
                <argumentType ref="type.96c13bca-2814-40b3-b612-829f33e0ad4b"/>
            </content>
        </type>
        <type id="type.c0813236-bde2-4aa3-89ac-c665daad3299" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.c4ec49f9-1545-4f27-98a1-8fc5374cd10a"/>
                <argumentType ref="type.07a888c5-345d-412c-a58d-ba4d3cc7483e"/>
                <argumentType ref="type.b3a13940-a8dc-4fbd-b793-203591f5af6c"/>
            </content>
        </type>
        <type id="type.0ace0e80-4b4d-408e-94f4-7e88ff32728c" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.6ba54a31-322e-4765-91ce-cf6b62b5a0c9"/>
                <argumentType ref="type.bc64ec6c-f716-406e-9a6e-6fc462dd1992"/>
                <argumentType ref="type.96c13bca-2814-40b3-b612-829f33e0ad4b"/>
            </content>
        </type>
        <type derived="true" id="type.54515234-fca1-4fae-854d-9f6feb3ce5f4">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.0ace0e80-4b4d-408e-94f4-7e88ff32728c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.593eb01f-2bd1-4012-b849-2d0690fa44d5">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.c0813236-bde2-4aa3-89ac-c665daad3299"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.cd70928a-28d2-4892-8ed6-633eb74a0d07" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.80d53d7a-948d-4216-98c3-2dfe79d335bf"/>
                <argumentType ref="type.9d5a5587-5b7d-48b2-911c-0c46ba2d330d"/>
                <argumentType ref="type.40a138d6-2442-45f6-968c-4d3d21ddf1f4"/>
            </content>
        </type>
        <type derived="true" id="type.947235d3-3eb7-4daf-8858-8f77796f8a83">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.cd70928a-28d2-4892-8ed6-633eb74a0d07"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a949ae30-abb4-46b0-8a56-98c9de58cc29" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.80d53d7a-948d-4216-98c3-2dfe79d335bf"/>
                <argumentType ref="type.59dcad08-49a8-40c7-adc4-1c0d549cefe7"/>
                <argumentType ref="type.6b5f4112-2492-45ab-8b3a-a2440b8b8f06"/>
            </content>
        </type>
        <type derived="true" id="type.306d0497-1c67-41c8-b921-e0d916de2922">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.a949ae30-abb4-46b0-8a56-98c9de58cc29"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.292f6c91-8613-4105-acf4-2994da4887db" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f2574b87-e8e3-46de-9d10-dcfa1b2b63fd"/>
                <argumentType ref="type.cb5bcc8c-0dc5-4fcd-8f2d-2b4fe8c7edf8"/>
                <argumentType ref="type.1c0d0ca0-be22-4505-af49-be4bab3b36ac"/>
            </content>
        </type>
        <type derived="true" id="type.d3cf7394-c242-46dd-9611-2f5ea7c88487">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.292f6c91-8613-4105-acf4-2994da4887db"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.fa92e807-05bc-48f8-8271-f9c6722a474f" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f2574b87-e8e3-46de-9d10-dcfa1b2b63fd"/>
                <argumentType ref="type.48092098-37a7-4ca3-a0fe-fc30cf21a2a2"/>
                <argumentType ref="type.41175915-10a4-4333-8132-a6b701279f13"/>
            </content>
        </type>
        <type derived="true" id="type.c9903e79-018c-4a88-8667-7d1f402cb0f1">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.fa92e807-05bc-48f8-8271-f9c6722a474f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.13d789ef-9c72-489d-91b2-42c164de2702" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.87c2f730-b033-4c1b-813e-21f12b9114b1"/>
                <argumentType ref="type.7b403906-0990-4601-ade7-b218b1e16579"/>
                <argumentType ref="type.e981281c-a819-4dcb-9949-0d47886c9b74"/>
            </content>
        </type>
        <type derived="true" id="type.d92d7a05-a24a-4d00-bbfa-a8ff5f7d062b">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.13d789ef-9c72-489d-91b2-42c164de2702"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.90f19112-dae6-4068-9ae8-8289865945dc" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.87c2f730-b033-4c1b-813e-21f12b9114b1"/>
                <argumentType ref="type.181d9ac0-608e-42ec-86a4-3ee4fa0969a6"/>
                <argumentType ref="type.a1fb5c02-b9ed-460a-9e3a-03ca6bdc496f"/>
            </content>
        </type>
        <type derived="true" id="type.ef9409e6-db6b-46e3-a1c6-f8d2f465f3b7">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.90f19112-dae6-4068-9ae8-8289865945dc"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.17a0b3cd-62bf-4f2d-97be-559a1c036ded" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3b84435c-ed91-428f-970c-02f6cf164c50"/>
                <argumentType ref="type.0f35b18c-55fc-4f5f-9102-abf3dbb5613b"/>
                <argumentType ref="type.0c7e66c4-e179-4864-84b7-de8241e6cf41"/>
            </content>
        </type>
        <type derived="true" id="type.b3f3b4c8-9a37-44c4-875b-1e02005aaa17">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.17a0b3cd-62bf-4f2d-97be-559a1c036ded"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8720c39b-c563-41c1-a334-a0064efb6514" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3b84435c-ed91-428f-970c-02f6cf164c50"/>
                <argumentType ref="type.869cc334-fd3e-4fb9-925d-5ad7c4b24595"/>
                <argumentType ref="type.16ea45a7-b47d-4de9-a539-179b4ae857ba"/>
            </content>
        </type>
        <type derived="true" id="type.68e72123-c6cb-4968-b2f3-ddfb45c4ba8b">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8720c39b-c563-41c1-a334-a0064efb6514"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5f3bc993-8960-48b5-b90e-b85c6cdf0c97" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2d5881ba-ad8b-43eb-8f9d-4acc864fee2c"/>
                <argumentType ref="type.aac609e7-b7be-45f7-9ceb-5b79e4f7ab0a"/>
                <argumentType ref="type.894c4e37-79a2-44b6-903f-dd6fe44b9f9d"/>
            </content>
        </type>
        <type derived="true" id="type.098c520c-eaf9-40e3-af44-8e9f13340600">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5f3bc993-8960-48b5-b90e-b85c6cdf0c97"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8c3bf2f4-fe07-4b44-a6a4-30316401e82c" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2d5881ba-ad8b-43eb-8f9d-4acc864fee2c"/>
                <argumentType ref="type.09fbb04d-910c-4575-94a1-ec993bd95e14"/>
                <argumentType ref="type.c0bdedf5-e089-4971-8fc6-a591c88d9e08"/>
            </content>
        </type>
        <type derived="true" id="type.6536ec60-4bec-4324-878d-b92a8255c854">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8c3bf2f4-fe07-4b44-a6a4-30316401e82c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.38632b47-51e7-4561-8adf-e6ba5d274b28" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5b372742-e83c-4dd1-9a33-56f92201cac7"/>
                <argumentType ref="type.81862372-2421-4a30-801d-66f29b5147b3"/>
                <argumentType ref="type.300533c2-a6a1-409a-b792-0823425090fe"/>
            </content>
        </type>
        <type derived="true" id="type.997c1051-e3b5-4c50-b0b1-8a9719f05c26">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.38632b47-51e7-4561-8adf-e6ba5d274b28"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.e4a295da-3128-46b9-9e1a-43b55a9dc978" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5b372742-e83c-4dd1-9a33-56f92201cac7"/>
                <argumentType ref="type.553619da-8236-4d9c-8f21-0f0ba98abedc"/>
                <argumentType ref="type.bb234915-9a9f-489e-bf80-ccdebd04f946"/>
            </content>
        </type>
        <type derived="true" id="type.c15dd153-e6c5-4e02-b221-c16564dc06df">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.e4a295da-3128-46b9-9e1a-43b55a9dc978"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.17d05809-0085-4ce6-8d19-68e959e6834d" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a7d8da29-e996-4387-a705-70bf06d94ed1"/>
                <argumentType ref="type.06ccbedd-a60a-43df-8890-6f373a0fe22e"/>
                <argumentType ref="type.1332450c-8d05-428d-b586-11063d2ad57f"/>
            </content>
        </type>
        <type derived="true" id="type.6d7adce9-641e-4cea-8f43-f68a061d9549">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.17d05809-0085-4ce6-8d19-68e959e6834d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4e10e2d8-3d62-4eee-83cf-bc83981f97a7" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a7d8da29-e996-4387-a705-70bf06d94ed1"/>
                <argumentType ref="type.9106a28a-5b3f-40e1-912c-da0083b460bd"/>
                <argumentType ref="type.1691cb97-0c2d-4cef-9fca-ca2171664825"/>
            </content>
        </type>
        <type derived="true" id="type.e9c217d9-7f4f-486a-aaf4-251830b3c4d7">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4e10e2d8-3d62-4eee-83cf-bc83981f97a7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.43e5ce6d-35c8-4188-9171-e3d97bcc8d0e" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a53521ab-bde5-4a65-b773-398cf33240c2"/>
                <argumentType ref="type.07f78cbf-5ebe-4268-8569-737c82c283ae"/>
                <argumentType ref="type.4a3e8fb2-cafe-488a-9780-b6870aca4f79"/>
            </content>
        </type>
        <type derived="true" id="type.e529d8ad-62ee-4f02-9688-2a92e7177413">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.43e5ce6d-35c8-4188-9171-e3d97bcc8d0e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.152f7378-5435-4288-81e1-331a5cb35114" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a53521ab-bde5-4a65-b773-398cf33240c2"/>
                <argumentType ref="type.873942f6-e8e2-4a1e-865c-3ebff47f9af8"/>
                <argumentType ref="type.48936098-345d-4186-b937-bc8d281ebe90"/>
            </content>
        </type>
        <type derived="true" id="type.cc57fe9d-d7f2-4dec-ba38-7749c5325215">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.152f7378-5435-4288-81e1-331a5cb35114"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.2959b8a8-d2f5-4801-b603-fe0328e48f44" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.52d0c278-ada7-41c5-a59b-db38a5d2c23f"/>
                <argumentType ref="type.bab1340e-e7a0-426b-83c4-b1463254ac58"/>
                <argumentType ref="type.b5bfdaf4-8cd6-465d-a0ca-3e5af2b61893"/>
            </content>
        </type>
        <type derived="true" id="type.bcfd4f5a-7d69-40d4-8857-741a809380cf">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.2959b8a8-d2f5-4801-b603-fe0328e48f44"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.980f6f63-eb69-495b-a7a7-df91ba316250" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.52d0c278-ada7-41c5-a59b-db38a5d2c23f"/>
                <argumentType ref="type.b6381326-710f-4e60-9555-ea58516d1e96"/>
                <argumentType ref="type.e72d593c-e3be-44ab-b4ef-4e78f6bec47d"/>
            </content>
        </type>
        <type derived="true" id="type.d93c5d11-cb97-48b6-a066-e0d26cdde6cd">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.980f6f63-eb69-495b-a7a7-df91ba316250"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.cfe53aff-3947-47c7-b730-8d1d38a4b034" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.0fa92d72-125e-4c1c-92cf-67b896ac6e90"/>
                <argumentType ref="type.62bb334f-5241-4846-8878-035ed59373bc"/>
                <argumentType ref="type.970ad439-0d0f-4ff0-b0b4-47dfd93b052b"/>
            </content>
        </type>
        <type derived="true" id="type.a31084d8-3c49-46b3-bf35-c53d68a8fa6a">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.cfe53aff-3947-47c7-b730-8d1d38a4b034"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.414bfd9a-2a63-4f2c-8ce5-d2f4bfda0bdd" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.0fa92d72-125e-4c1c-92cf-67b896ac6e90"/>
                <argumentType ref="type.77f6f315-ebf8-4744-b16f-8681080b8c5a"/>
                <argumentType ref="type.1ae2945d-148f-4043-b9d6-ef8b3ddc0f99"/>
            </content>
        </type>
        <type derived="true" id="type.d0f28345-c062-4ce7-b60b-dd407ceb8464">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.414bfd9a-2a63-4f2c-8ce5-d2f4bfda0bdd"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.188b29e1-23db-4bea-9b06-e754e6d350c0" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f00b47f5-a60e-4c80-9315-fa0ae2d1c2d1"/>
                <argumentType ref="type.7c4fab81-3a9f-4aec-9c21-cc4ad2257ff2"/>
                <argumentType ref="type.5fa4283a-7cb0-4576-a931-57635ba3c5bf"/>
            </content>
        </type>
        <type derived="true" id="type.b37f01d8-0892-4308-a30e-4393599087ec">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.188b29e1-23db-4bea-9b06-e754e6d350c0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.838e1dc5-49a2-47c4-aafe-3ad74aa0ec46" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f00b47f5-a60e-4c80-9315-fa0ae2d1c2d1"/>
                <argumentType ref="type.c9a86756-d504-4bc7-a124-5d0511a1c9a4"/>
                <argumentType ref="type.f88af620-e7d7-421a-90c4-e25541c9d373"/>
            </content>
        </type>
        <type derived="true" id="type.562d1e6a-afdc-4bc3-8179-e1955b07b383">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.838e1dc5-49a2-47c4-aafe-3ad74aa0ec46"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a58f3026-1a8e-45ec-8a99-226066d0f6d4" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9739e135-0116-42d0-b8bb-f38ebfbd7ac7"/>
                <argumentType ref="type.26595e12-4b77-4178-af99-cbd214c20add"/>
                <argumentType ref="type.b2099bb4-5ba2-4a3c-9e49-53d4042ec82a"/>
            </content>
        </type>
        <type derived="true" id="type.3c5c436e-ac03-4c32-8459-20cf05d89395">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.a58f3026-1a8e-45ec-8a99-226066d0f6d4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.c29ced04-7a44-4cd2-8ca2-c451324f52cf" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9739e135-0116-42d0-b8bb-f38ebfbd7ac7"/>
                <argumentType ref="type.55bc90bc-8055-412b-8216-be850f9047c9"/>
                <argumentType ref="type.66268fc5-49c3-4926-bcfa-e6b5a792e029"/>
            </content>
        </type>
        <type derived="true" id="type.17070d16-fdb0-423b-9f2f-04b5e932849d">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.c29ced04-7a44-4cd2-8ca2-c451324f52cf"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.7bd36f61-452d-43e1-ab66-37a31351823c" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f42fc4ef-b0f9-4ff5-83d0-0179c18b832f"/>
                <argumentType ref="type.a13d9935-d8d9-4b96-bebf-a87c9bf32f30"/>
                <argumentType ref="type.3c3a90a1-0786-4343-aa6f-1b7c74ae3db5"/>
            </content>
        </type>
        <type derived="true" id="type.fe8bf068-c9c6-4533-8846-5db525eda9c2">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.7bd36f61-452d-43e1-ab66-37a31351823c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.cb387829-546c-4990-9440-978dff7427dc" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f42fc4ef-b0f9-4ff5-83d0-0179c18b832f"/>
                <argumentType ref="type.a5788d74-48db-4ea9-8d45-4d1daa041702"/>
                <argumentType ref="type.4f2c8ce4-9343-4f52-b627-bc2774024b2b"/>
            </content>
        </type>
        <type derived="true" id="type.dba6fd13-4772-416f-b789-ab0ed83d69d7">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.cb387829-546c-4990-9440-978dff7427dc"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.7bdbf816-c632-45b8-9f34-23b0cbbbeb2b" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e876e162-ab4e-4058-8bbb-867eb5313a7e"/>
                <argumentType ref="type.24059305-9a46-4a55-8f77-c299b1105df6"/>
                <argumentType ref="type.f5f6f06e-a3ad-4adc-91c1-a8348ae694d0"/>
            </content>
        </type>
        <type derived="true" id="type.227c3490-ee7c-45ff-bc11-1ebe15360463">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.7bdbf816-c632-45b8-9f34-23b0cbbbeb2b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.40511840-5b13-44c0-b8a0-18f4d667a026" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e876e162-ab4e-4058-8bbb-867eb5313a7e"/>
                <argumentType ref="type.195ee093-3127-4d2a-bfae-48481471a95e"/>
                <argumentType ref="type.794bc4b4-352e-4ce8-8e4a-c352826eaab2"/>
            </content>
        </type>
        <type derived="true" id="type.96e96ecf-bb9f-4173-a852-b0c8bc763996">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.40511840-5b13-44c0-b8a0-18f4d667a026"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.097dddbb-918e-4b14-b94b-a4607b429ea5" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.ac8adbf1-2dd5-403c-adb3-6a98add7d050"/>
                <argumentType ref="type.abc2b593-eb7d-4160-90b2-3f89e33b0938"/>
                <argumentType ref="type.63ddf129-0408-4857-9215-ac28c3b5a44a"/>
            </content>
        </type>
        <type derived="true" id="type.c22005ae-c683-475a-9b3e-724942ae1b9e">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.097dddbb-918e-4b14-b94b-a4607b429ea5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.84699c60-1e04-4972-b440-bf611fd5e653" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.ac8adbf1-2dd5-403c-adb3-6a98add7d050"/>
                <argumentType ref="type.3a54d67a-1f69-41fe-98ad-873eb9de72e1"/>
                <argumentType ref="type.b08612b1-7b6b-45d1-af06-75add4bc3217"/>
            </content>
        </type>
        <type derived="true" id="type.1279d67b-3974-4023-9586-095c28b0b5d4">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.84699c60-1e04-4972-b440-bf611fd5e653"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.fc049920-0ccf-4854-b444-15aa78af03d6" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9545fd33-bf6b-4f5f-8ae8-f9f17f3fc288"/>
                <argumentType ref="type.11f2b658-ba63-4ad1-bcd0-28eb4050764e"/>
                <argumentType ref="type.1e6a0b41-cb80-42ba-99d9-442a7bf300f0"/>
            </content>
        </type>
        <type derived="true" id="type.5594034c-4fb5-40c9-a649-56aee9b05a2e">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.fc049920-0ccf-4854-b444-15aa78af03d6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.f7180c7b-5516-445d-8c2b-73efe9a0439f" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9545fd33-bf6b-4f5f-8ae8-f9f17f3fc288"/>
                <argumentType ref="type.97405acc-1603-4dd5-be2e-06c4d68f8f5e"/>
                <argumentType ref="type.d695fbe0-efae-4a79-8b12-3827639e7669"/>
            </content>
        </type>
        <type derived="true" id="type.85664939-61d4-47e9-bf7e-3fd1528a794e">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.f7180c7b-5516-445d-8c2b-73efe9a0439f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.d50187f3-bf64-43ea-99f6-ae3046d0c9c9" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1350076d-126f-4519-9332-41c06b713844"/>
                <argumentType ref="type.d1284522-9406-4d7e-9674-dbad597805b8"/>
                <argumentType ref="type.0689868d-6e7e-4d65-afc0-49d707f68d76"/>
            </content>
        </type>
        <type derived="true" id="type.055b8673-e12f-43f6-a0ff-5f7085576c56">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.d50187f3-bf64-43ea-99f6-ae3046d0c9c9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.0942d978-6e96-4ed9-be62-bb50e580e02e" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1350076d-126f-4519-9332-41c06b713844"/>
                <argumentType ref="type.3833841c-3ad9-46bf-af24-b1dd11d05b53"/>
                <argumentType ref="type.1e5ce353-813a-474a-890b-1c3cdb489ac6"/>
            </content>
        </type>
        <type derived="true" id="type.4c4a6f98-d272-4b69-adbe-2b4d9b2b1d05">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.0942d978-6e96-4ed9-be62-bb50e580e02e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.50167742-f2a6-4215-a2d5-98b0ca606b57" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.852fb2d2-fe04-4987-83c9-e1ee871659ae"/>
                <argumentType ref="type.a2c23b67-519b-4e5a-bb9b-a46d5bb46fa0"/>
                <argumentType ref="type.13b20aab-4264-485b-bdca-be32e11e68f6"/>
            </content>
        </type>
        <type derived="true" id="type.52129ebd-1694-4c3b-aec6-591e15f7a2cd">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.50167742-f2a6-4215-a2d5-98b0ca606b57"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.2bd2d509-1079-4ce0-b1a9-86892d14bb75" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.852fb2d2-fe04-4987-83c9-e1ee871659ae"/>
                <argumentType ref="type.0b189da8-b936-4432-953d-0263435d4145"/>
                <argumentType ref="type.fbadfc1b-d9e2-4cd1-b5cf-7e741478cfa7"/>
            </content>
        </type>
        <type derived="true" id="type.6c369979-5ee6-4e4c-8f98-3d40740918d9">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.2bd2d509-1079-4ce0-b1a9-86892d14bb75"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.dd453251-6d37-4a78-a248-d2c811c1e0ab" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b2109fb1-72e6-43e0-b48d-e1308e9517e8"/>
                <argumentType ref="type.dbb28db8-2d13-41d5-9f4c-3ecc531f3aa2"/>
                <argumentType ref="type.68213dc2-d404-464a-947b-ea44961401ba"/>
            </content>
        </type>
        <type id="type.3230275b-d81f-4a4e-8d69-f766142a48e9" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.187def8d-8e90-4b0a-add9-f09106520202"/>
                <argumentType ref="type.8c770d19-fbd0-4b0a-908e-d544053030f0"/>
                <argumentType ref="type.470b39df-11fe-4da4-bf7b-d0497dfb0a40"/>
            </content>
        </type>
        <type id="type.dd453251-6d37-4a78-a248-d2c811c1e0ab" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b2109fb1-72e6-43e0-b48d-e1308e9517e8"/>
                <argumentType ref="type.dbb28db8-2d13-41d5-9f4c-3ecc531f3aa2"/>
                <argumentType ref="type.68213dc2-d404-464a-947b-ea44961401ba"/>
            </content>
        </type>
        <type derived="true" id="type.e8cd2f8b-a473-46de-85ed-e7eeb12811ee">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.dd453251-6d37-4a78-a248-d2c811c1e0ab"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8b18b0d3-b393-4850-88a7-a64f7ba4b009">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.3230275b-d81f-4a4e-8d69-f766142a48e9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.90f35962-3976-4ace-a6e8-a1673f222e01" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b2109fb1-72e6-43e0-b48d-e1308e9517e8"/>
                <argumentType ref="type.6f2890e0-47e9-4c21-b823-f301925a97e1"/>
                <argumentType ref="type.0ae60864-198f-4471-b9fa-7db572f29ad5"/>
            </content>
        </type>
        <type id="type.658b3bdd-f2f8-45b6-b22b-f412073b33af" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.187def8d-8e90-4b0a-add9-f09106520202"/>
                <argumentType ref="type.62496e91-711c-4aab-adab-b01aae4a13b4"/>
                <argumentType ref="type.80420961-ee34-4930-bc6b-fea52a8698a3"/>
            </content>
        </type>
        <type id="type.90f35962-3976-4ace-a6e8-a1673f222e01" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b2109fb1-72e6-43e0-b48d-e1308e9517e8"/>
                <argumentType ref="type.6f2890e0-47e9-4c21-b823-f301925a97e1"/>
                <argumentType ref="type.0ae60864-198f-4471-b9fa-7db572f29ad5"/>
            </content>
        </type>
        <type derived="true" id="type.96ffe5aa-45f1-428e-b6de-081937d933b3">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.658b3bdd-f2f8-45b6-b22b-f412073b33af"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.774fb078-ab04-4302-94d5-666e4c8be828">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.90f35962-3976-4ace-a6e8-a1673f222e01"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.637eb634-3860-4e9b-9dff-388a7da3c235" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8acef2ca-a4de-4966-80f0-57f202100e34"/>
                <argumentType ref="type.e28b5404-e2c7-4f7f-a193-ae59e732ebb7"/>
                <argumentType ref="type.7052d636-a85c-4118-8112-0a9148883041"/>
            </content>
        </type>
        <type derived="true" id="type.dc7e7776-892d-4a81-b116-dc8553136a61">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.637eb634-3860-4e9b-9dff-388a7da3c235"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.b4b4e472-f9b3-4a9e-9d05-f7f80d810550" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8acef2ca-a4de-4966-80f0-57f202100e34"/>
                <argumentType ref="type.52e4b1e9-9489-4c58-ba85-95d47a81fa1b"/>
                <argumentType ref="type.d88bfd49-dd3e-425b-8275-c64be8581268"/>
            </content>
        </type>
        <type derived="true" id="type.883ac5ae-4100-46ce-ae0c-6d8c5469c156">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.b4b4e472-f9b3-4a9e-9d05-f7f80d810550"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF" specialization="true">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="1e32a6f8-cf16-4f26-8625-40734c3f16b0"/>
                <argumentType ref="type.77cb9a51-3941-4ed5-9307-e46174833c94"/>
                <argumentType ref="type.d8660d6f-ff6e-433a-b67e-de3f902516cd"/>
            </content>
        </type>
        <type derived="true" id="type.815b0f6a-aa45-4cb2-88e8-101da96450ba">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9c908189-56cd-4d44-bbfb-9c7cac9f5a20">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f2e76cf1-760c-4239-9ed5-f58614e54395">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0b3854b5-2275-444f-abcd-b31fa9c4a691">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c8d32fde-cc90-4f67-b175-0320197cbc8f">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7127d40c-91df-44d7-9674-3cf5e6eba230">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.16cadfc8-a42d-447f-afd3-02343b3d5c36">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966" specialization="true">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="71e28082-daad-49ca-ae5a-58f901a23893"/>
                <argumentType ref="type.60e12667-629e-44cc-a810-fd9f993409ce"/>
                <argumentType ref="type.fdd186d9-a700-4369-ae85-58d59a1d92d7"/>
            </content>
        </type>
        <type derived="true" id="type.fb24bc09-3ad0-4104-96ef-1d672e00fa60">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.843b261e-6747-479a-b7db-c250d5f58b32">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6fe02794-b134-47fa-9695-aa5358985024">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6f57cffc-c834-474c-b3be-14dbff5e27bc">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.095ffabd-78ca-4b69-bda6-af748dfffec8">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.612e08ab-990a-4818-abf7-d8684a9e3d9b">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.01928de6-89de-4dde-9bbc-b5ef6df9d64e">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.56300690-1313-41b5-926d-8f00f9a9f4d2" specialization="true">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.dd878add-efd9-4c76-a011-36060cf2fcca"/>
                <argumentType ref="type.d52b4251-14c1-42c5-bb60-ce67f9790b0c"/>
                <argumentType ref="type.3571d126-ae92-4338-bff3-e2f3d38d24bb"/>
            </content>
        </type>
        <type derived="true" id="type.a5df4a5e-a33b-4b4c-9cf2-9817c8cc0990">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**>&amp;&amp;</name>
            <content>
                <baseType ref="type.56300690-1313-41b5-926d-8f00f9a9f4d2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.20152770-683e-46e8-81d2-35eda0e2ffa4" specialization="true">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e630721c-0538-48f6-891a-8914ee7f1e2a"/>
                <argumentType ref="type.089db9d8-48ce-4529-a813-ce2dd1788ada"/>
                <argumentType ref="type.0e29e3ce-e749-485f-801b-f15647e08f76"/>
            </content>
        </type>
        <type derived="true" id="type.d0bfac70-294c-4d3b-8479-bf03ca052aea">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.20152770-683e-46e8-81d2-35eda0e2ffa4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.3c07d21d-d1db-4057-99ec-5d178e7d460d" specialization="true">
            <name>RandomAccessIter&lt;Pair&lt;int, String&lt;char>>, Pair&lt;int, String&lt;char>>&amp;, Pair&lt;int, String&lt;char>>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e5db27f3-6800-47ab-8da5-9d3b9d7ebe45"/>
                <argumentType ref="type.c5bada96-06cd-462c-b113-a8a6544acc0a"/>
                <argumentType ref="type.e2813932-673d-4135-9a2b-585ae99013a4"/>
            </content>
        </type>
        <type derived="true" id="type.020cab8c-8754-4935-9ef4-14a9d0cb9f05">
            <name>RandomAccessIter&lt;Pair&lt;int, String&lt;char>>, Pair&lt;int, String&lt;char>>&amp;, Pair&lt;int, String&lt;char>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3c07d21d-d1db-4057-99ec-5d178e7d460d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.ceb84fa6-c42a-4468-9ff8-767aa1b16706" specialization="true">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.e03a0bc7-d246-4cf4-9848-cf29ffebee94"/>
                <argumentType ref="type.a6dda7ef-14ac-483a-a353-da413777dda3"/>
                <argumentType ref="type.a34c8220-0ee4-4612-a5eb-fe9e0c28315b"/>
            </content>
        </type>
        <type derived="true" id="type.6898dbe3-2b21-46a7-ae78-b89a27e92652">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**>&amp;&amp;</name>
            <content>
                <baseType ref="type.ceb84fa6-c42a-4468-9ff8-767aa1b16706"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.55040c2d-2120-47bd-b0ee-c6d18137af04" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.263e93aa-308d-41c4-9871-8a478436f10e"/>
                <argumentType ref="type.a2476928-a21d-4ebb-8117-e6533b432411"/>
            </content>
        </type>
        <type id="type.909ff4bd-0e57-4b73-85cc-64a8ce6805ab" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5fa3ca84-d725-459d-ad06-76a86c2f8065"/>
                <argumentType ref="type.99a779d6-f5b7-4444-a705-dd3ba612a8df"/>
            </content>
        </type>
        <type id="type.c1bbf78c-1692-4ebe-95dc-2ffcb3aa4ec8" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.c6c1bb7c-daf9-4ae7-9995-c2fcb393ebec"/>
                <argumentType ref="type.09ab00c2-f0c8-4584-a924-bf16cd5c853e"/>
            </content>
        </type>
        <type id="type.fc6b4307-ce58-43ef-a8d7-6c19bef2123d" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.d4113053-b440-44ac-9f97-d3438852187c"/>
                <argumentType ref="type.10f00b22-a6be-487a-9fdf-fe55d1055af5"/>
            </content>
        </type>
        <type id="type.b6f9bc35-e777-444e-9f0b-969d5ece97f5" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.abceca1b-4a5b-4b12-be3e-67a769dd57c3"/>
                <argumentType ref="type.848f8ec3-fd34-4c3c-b27e-14fb4d2c07b4"/>
            </content>
        </type>
        <type id="type.1dca3bfd-cf05-4080-b083-79d0af05571e" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.6c0869e9-f9ee-4168-aac2-54776296141b"/>
                <argumentType ref="type.7d8c77b5-4a95-4413-a0b2-ebabc5cae3e2"/>
            </content>
        </type>
        <type id="type.c5eb1e31-7297-41ae-a37c-cf14bf1e3776" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.3634480c-49e0-4fcf-8b51-29bb8dad91ab"/>
                <argumentType ref="type.0367a3ea-7027-4143-84e3-4c74c4147323"/>
            </content>
        </type>
        <type derived="true" id="type.8774501b-6c47-4715-8e11-6853674d4a74">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.b6f9bc35-e777-444e-9f0b-969d5ece97f5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bfec417e-a0e0-46fb-a197-b734e9de890d">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.909ff4bd-0e57-4b73-85cc-64a8ce6805ab"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.42f4ff36-1682-4fc2-ada9-4b445a0bb10b">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.55040c2d-2120-47bd-b0ee-c6d18137af04"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.702d1d95-55ba-4fbf-9701-1f0e353b253c">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c1bbf78c-1692-4ebe-95dc-2ffcb3aa4ec8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4757c20f-2180-41b6-9659-e354213d31da">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c5eb1e31-7297-41ae-a37c-cf14bf1e3776"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c32acd9e-2bd4-43e6-96da-672a7ff628a4">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.fc6b4307-ce58-43ef-a8d7-6c19bef2123d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.978b60ea-dcdb-4389-aeaa-61dc88065ac6">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1dca3bfd-cf05-4080-b083-79d0af05571e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.44eb20d9-df42-437d-b012-250653e4ae77" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.cb300d2e-9050-49e2-9c3e-124ec80ffe07"/>
                <argumentType ref="type.a96df6a6-601c-40ac-a541-a53cd15e600e"/>
            </content>
        </type>
        <type id="type.4cafdc88-9678-42de-874e-07cfe9a15eca" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8824b1b2-54b5-4be3-9de5-889dcf9797da"/>
                <argumentType ref="type.f6bec379-7df5-4b46-9697-238035c34497"/>
            </content>
        </type>
        <type id="type.4006d7ea-e8c5-463d-ae59-8ab756d425a2" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5385220e-d3f7-4322-860f-391551dffcc8"/>
                <argumentType ref="type.c950a443-b650-4521-b92b-18740be8cc09"/>
            </content>
        </type>
        <type id="type.4500b4c9-ef3d-4cf6-aaa7-83e3cd99be4d" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.e16d8e8f-f20d-4426-93ce-632b3e425451"/>
                <argumentType ref="type.21fa00b5-bba3-4a8a-b11a-03a41c3d28ba"/>
            </content>
        </type>
        <type id="type.920f768c-985a-4533-97e4-5593d5e04b09" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.571c4144-4c3a-4cda-b62e-680fbf98cfb1"/>
                <argumentType ref="type.1220b8ee-d964-479f-b120-08f827761522"/>
            </content>
        </type>
        <type id="type.7da98461-7383-4e8c-98b5-da08501eef50" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.47e5cb95-1bf3-4577-a4c1-bafb94a129d8"/>
                <argumentType ref="type.c21c6b71-c368-47f0-a7f2-06e8a053f124"/>
            </content>
        </type>
        <type id="type.44eb20d9-df42-437d-b012-250653e4ae77" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.cb300d2e-9050-49e2-9c3e-124ec80ffe07"/>
                <argumentType ref="type.a96df6a6-601c-40ac-a541-a53cd15e600e"/>
            </content>
        </type>
        <type id="type.751d3cec-26db-4ef3-bc62-33162cb6507c" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.0f698987-b5c1-402e-9a09-c31f9dddb5c4"/>
                <argumentType ref="type.b99b68e7-fe4f-4799-adef-b52fe28bb7bc"/>
            </content>
        </type>
        <type derived="true" id="type.6c902d38-be04-4294-8d4a-255f0f4a42d3">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4006d7ea-e8c5-463d-ae59-8ab756d425a2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e65b88e8-f911-480e-b30f-2788a59fb14a">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.920f768c-985a-4533-97e4-5593d5e04b09"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0b19f42e-cea9-46e4-bdf1-2b788c554290">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.7da98461-7383-4e8c-98b5-da08501eef50"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3b11c540-70df-46b2-b0c8-391ce3a99c1b">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.44eb20d9-df42-437d-b012-250653e4ae77"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f9792ebe-036a-4e76-bdf2-c7dbf0f733b4">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4cafdc88-9678-42de-874e-07cfe9a15eca"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e2b066bf-e20a-4268-92bb-dc7c06115982">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.751d3cec-26db-4ef3-bc62-33162cb6507c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.909b5751-f3c4-4ec2-86a1-a61e6175a921">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4500b4c9-ef3d-4cf6-aaa7-83e3cd99be4d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8ac49d56-9202-4f8b-8c4f-e9663a7f95c7" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a08e7b96-65b1-4902-bc7e-40a22e01d134"/>
                <argumentType ref="type.33287d25-daea-44ab-bdbf-ade78d5ac4b0"/>
                <argumentType ref="type.4edca87b-1c8f-42b1-912d-c9a66d4a6182"/>
            </content>
        </type>
        <type derived="true" id="type.43635ddc-656d-4cbc-8c0e-528a11f1cada">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8ac49d56-9202-4f8b-8c4f-e9663a7f95c7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.b088b242-0c93-434b-8531-a74f49ecf8b4" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a08e7b96-65b1-4902-bc7e-40a22e01d134"/>
                <argumentType ref="type.1350ea25-f7ab-43d2-befd-275b8bf20009"/>
                <argumentType ref="type.a70a39d6-f5dc-4289-adf7-85a592691875"/>
            </content>
        </type>
        <type derived="true" id="type.859ae923-e99e-4f08-98cb-9aad74b048c5">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.b088b242-0c93-434b-8531-a74f49ecf8b4"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.30cf626f-4f92-4f6f-95a1-13dd99939dcb" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.83915a56-dc2f-4773-8a98-6f9537ba1712"/>
                <argumentType ref="type.828bdeb7-f02d-4b39-99e9-63cf85590097"/>
            </content>
        </type>
        <type derived="true" id="type.f8bc2a16-20d4-4ef9-92f1-5b089b0ff84e">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.30cf626f-4f92-4f6f-95a1-13dd99939dcb"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.f054ace4-b3bd-4d45-be28-f4b5f1406de6" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <argumentType ref="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d"/>
                <argumentType ref="type.0b4ccc59-a858-4693-80b5-d810cdd3010e"/>
            </content>
        </type>
        <type derived="true" id="type.f7b9251f-42e6-4dc5-981f-f53f4d4c7596">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.f054ace4-b3bd-4d45-be28-f4b5f1406de6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.336f8a84-e1b2-493e-a54e-72ec1b1211b1" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a72919e3-177c-45f9-a36d-5e06c976d24e"/>
                <argumentType ref="type.a1a006f6-15e1-486f-b3d5-2e5b4ad8f67e"/>
                <argumentType ref="type.71ffc5d7-f623-44eb-8b92-de1f6ae4cb35"/>
            </content>
        </type>
        <type derived="true" id="type.b4b70999-b63d-41ab-b235-655f1f9d272a">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.336f8a84-e1b2-493e-a54e-72ec1b1211b1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.58a8f2a8-eeb4-40da-a31a-c3e89bb8983d" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.a72919e3-177c-45f9-a36d-5e06c976d24e"/>
                <argumentType ref="type.936accba-5025-41ac-8a2c-9c0af569fe0d"/>
                <argumentType ref="type.53edebba-2f55-4e12-be16-95a896289b0f"/>
            </content>
        </type>
        <type derived="true" id="type.a5d09e76-010a-403a-9bf8-d8693a78acc1">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.58a8f2a8-eeb4-40da-a31a-c3e89bb8983d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.7d3a1a73-6edd-4adb-86bc-3bffaecc25a5" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.fb622aeb-20be-4cfe-80a1-29ae70b97c8d"/>
                <argumentType ref="type.3534e919-0493-428e-9b24-b246cca22ec4"/>
            </content>
        </type>
        <type derived="true" id="type.fd4aa89a-593d-4074-93f2-4daab2b8ba89">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.7d3a1a73-6edd-4adb-86bc-3bffaecc25a5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.b96f47e6-8b44-4055-bf74-cacae1f3a7b3" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.8669ba2e-0f80-4256-9c45-e6a4095a0935"/>
                <argumentType ref="type.8e69eed5-9d29-41f1-9808-ec84811da2a3"/>
            </content>
        </type>
        <type derived="true" id="type.79961a17-64ec-459b-add2-5cbba1e9e577">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.b96f47e6-8b44-4055-bf74-cacae1f3a7b3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="d51e82d1-de6f-4f3b-bb46-9fb4b4be3a7a"/>
                <argumentType ref="25c2c7a6-e29b-489e-a36d-f5d5f180d456"/>
                <argumentType ref="914dc927-7347-4eeb-b89b-91055e4e6d29"/>
            </content>
        </type>
        <type derived="true" id="type.db4b647f-3c6b-4934-838f-a997b6463ca3">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.09ea4d25-742e-4af2-90c3-3f6b635dae2f">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a2860792-f89d-437c-b9b2-688047492389">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6325ae46-bc0a-4c7e-866f-e916d2c985d7">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4c08531b-36f8-4d59-9290-ca8d26e7b158">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1279e6b8-3f3a-4adf-a36b-fcff34042dbe">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.59adf087-a526-4274-94d0-e3a502901ba3">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7" specialization="true">
            <name>RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="7146fe99-6b99-4c2c-b35d-5df901fb77d8"/>
                <argumentType ref="type.ee803f81-439e-40e4-a559-daa286384066"/>
                <argumentType ref="type.0b3da80b-d6a3-47af-a39d-4aaf4c672bac"/>
            </content>
        </type>
        <type derived="true" id="type.e51dd22d-62e8-41bb-bb33-e7759cb985be">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2549ec27-871b-45f5-825b-7d40f37cf259">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9556671a-67a5-475e-91c7-10523bd331d3">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1c867221-e0a4-4e1f-8f48-934412ff2b96">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.16c5886d-d9d5-4815-af19-a5774c700543">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892" specialization="true">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="2a8e7cbe-9052-461b-856f-2ba369484160"/>
                <argumentType ref="type.9657283f-516b-47aa-805b-1c7ad4595fbf"/>
                <argumentType ref="type.47310382-34d5-463a-a62b-88e486cbcf7e"/>
            </content>
        </type>
        <type derived="true" id="type.35dcc842-f2ee-452a-ae75-3595667e5acd">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fcc8a377-e317-4211-a813-db132c340ca4">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.519c409c-ee19-4005-b554-b45d7fab96df">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ea8abf69-f333-4de1-ab28-e329b99e5b74">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7eb7a4ae-21b1-4f0a-b211-5a76cd1a8863">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.34258267-d192-43cb-9cba-749dc9c332b7" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <argumentType ref="type.8a57ab1e-599f-4e8b-9ba5-c75d883952cf"/>
                <argumentType ref="type.24cd750d-8a04-4148-be1d-bfb7757579aa"/>
            </content>
        </type>
        <type derived="true" id="type.3b214c4c-4786-4f05-bc73-0b8372e5b038">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>&amp;</name>
            <content>
                <baseType ref="type.34258267-d192-43cb-9cba-749dc9c332b7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.86b150e6-9334-4028-b488-89043f213390">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.34258267-d192-43cb-9cba-749dc9c332b7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e71ce8cb-f299-4074-a652-f81910b9bbb9">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>*</name>
            <content>
                <baseType ref="type.34258267-d192-43cb-9cba-749dc9c332b7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.e1ccb1e1-d394-4de1-ba76-f3e1bf8e885d" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <argumentType ref="type.738e39ba-fdca-4bff-995f-3cb3911b97a5"/>
                <argumentType ref="type.7c892d00-ba9f-45b4-9455-e9ca6eee944b"/>
            </content>
        </type>
        <type derived="true" id="type.6ce28492-9d22-4ed4-980f-4d2b9297ad5e">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>&amp;</name>
            <content>
                <baseType ref="type.e1ccb1e1-d394-4de1-ba76-f3e1bf8e885d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.caa17d8f-4ebf-41f0-b874-0af2fadbb338">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.e1ccb1e1-d394-4de1-ba76-f3e1bf8e885d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.99e8d99b-5410-4b17-b30d-ee5191a4c2af">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>*</name>
            <content>
                <baseType ref="type.e1ccb1e1-d394-4de1-ba76-f3e1bf8e885d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.87ca4ec1-1ccb-49e2-86c3-3a3b8cbf7b14" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <argumentType ref="type.b5eeee2e-73d4-4fd9-bda5-5c7eec389e83"/>
                <argumentType ref="type.ce662c4e-bec7-4ab4-82dc-07bb6fef2da2"/>
            </content>
        </type>
        <type derived="true" id="type.297f8058-e74b-40f7-85a2-8cef9631dbeb">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>&amp;</name>
            <content>
                <baseType ref="type.87ca4ec1-1ccb-49e2-86c3-3a3b8cbf7b14"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e313485a-e0d1-4f74-b44d-15a2067de851">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.87ca4ec1-1ccb-49e2-86c3-3a3b8cbf7b14"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e8c1a32a-4ec2-4fcf-89d9-24db685736ae">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>*</name>
            <content>
                <baseType ref="type.87ca4ec1-1ccb-49e2-86c3-3a3b8cbf7b14"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.f9d2f949-60b5-4e12-b767-2d4a5d6dc7cc" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <argumentType ref="type.792aee5c-8b65-4a14-8342-9cd02c2abef6"/>
                <argumentType ref="type.c912a4cd-b984-4e91-889d-c913f1e2704d"/>
            </content>
        </type>
        <type derived="true" id="type.73d52a0a-7285-480b-9f7c-d60622cbba8b">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>&amp;</name>
            <content>
                <baseType ref="type.f9d2f949-60b5-4e12-b767-2d4a5d6dc7cc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.538432bc-966a-43c4-8c89-014795a5d663">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.f9d2f949-60b5-4e12-b767-2d4a5d6dc7cc"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.753be6ae-2ce3-4472-84e9-68722428f688">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>*</name>
            <content>
                <baseType ref="type.f9d2f949-60b5-4e12-b767-2d4a5d6dc7cc"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.aa6d8c1b-ce7f-4ada-9544-2c096181f760" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <argumentType ref="type.a50b9876-39da-4124-9210-da4be2593d87"/>
                <argumentType ref="type.fe7dcb69-f70e-47bb-a74f-6f3692472247"/>
            </content>
        </type>
        <type derived="true" id="type.3021dcda-c3e4-4b90-94d2-9b95a12f113a">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>&amp;</name>
            <content>
                <baseType ref="type.aa6d8c1b-ce7f-4ada-9544-2c096181f760"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.08815e9b-b8f6-4e6d-9e10-2eaad0e8aa6f">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.aa6d8c1b-ce7f-4ada-9544-2c096181f760"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ed9b3845-831c-419e-95d7-e51fe2de722a">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>*</name>
            <content>
                <baseType ref="type.aa6d8c1b-ce7f-4ada-9544-2c096181f760"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.c1de1d63-ead9-489c-9fd2-24b79cb0c4bb" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <argumentType ref="type.74cc03cc-0b68-4634-8c29-3b254383d975"/>
                <argumentType ref="type.e0180e27-c0ff-41b7-9bd9-ef492856f097"/>
            </content>
        </type>
        <type derived="true" id="type.5d546e55-ecfd-4f84-a176-35301d014735">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>&amp;</name>
            <content>
                <baseType ref="type.c1de1d63-ead9-489c-9fd2-24b79cb0c4bb"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5e2fa881-4112-4f06-9bec-53ce3bd33271">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c1de1d63-ead9-489c-9fd2-24b79cb0c4bb"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c87ba029-30a0-459e-bec1-8c52cdcc54be">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>*</name>
            <content>
                <baseType ref="type.c1de1d63-ead9-489c-9fd2-24b79cb0c4bb"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.853663ea-fa9f-4f0c-a83a-26e6c250660c" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <argumentType ref="type.df01ebcb-7b75-47ec-bdec-efdd546af955"/>
                <argumentType ref="type.945f99ac-2f74-4d01-bf1d-6d6510faf359"/>
            </content>
        </type>
        <type derived="true" id="type.ae74c66a-eb3d-4025-8e7a-72596e070a74">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>&amp;</name>
            <content>
                <baseType ref="type.853663ea-fa9f-4f0c-a83a-26e6c250660c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90d29bf0-1427-49a5-bf7c-f77c78f03bf4">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.853663ea-fa9f-4f0c-a83a-26e6c250660c"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7040f005-7035-430d-831d-dbd1ce36c7cb">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>*</name>
            <content>
                <baseType ref="type.853663ea-fa9f-4f0c-a83a-26e6c250660c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.6a435e11-26db-4587-991c-a0be5d85f564" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <argumentType ref="type.5381a953-dbf4-4fe3-90d6-8792d8961160"/>
                <argumentType ref="type.caf077ce-41b4-4b91-a8ea-28c96cf85f05"/>
            </content>
        </type>
        <type derived="true" id="type.5b8bf38e-1d63-4455-a7e7-3557cb3e017d">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>&amp;</name>
            <content>
                <baseType ref="type.6a435e11-26db-4587-991c-a0be5d85f564"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.94fe8fad-fd77-429b-9508-347249930393">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.6a435e11-26db-4587-991c-a0be5d85f564"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.31f026be-95e1-4566-8a31-9e3db673c007">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>*</name>
            <content>
                <baseType ref="type.6a435e11-26db-4587-991c-a0be5d85f564"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.07161293-3e49-44e1-ba2d-463823d4504e" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.82a7ce48-8c91-4fae-b926-ee8280c01d32"/>
                <argumentType ref="type.05f51ddf-5b76-49fe-ba52-6742707d4d64"/>
                <argumentType ref="type.7f91322e-ded3-4428-bce1-9bd5fe32aa5d"/>
            </content>
        </type>
        <type derived="true" id="type.32bcf123-fc17-4c47-be3b-3e4264f9dc90">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.07161293-3e49-44e1-ba2d-463823d4504e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.70586512-8ee5-41d8-b4dc-c69de18f6969" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.82a7ce48-8c91-4fae-b926-ee8280c01d32"/>
                <argumentType ref="type.f079b2be-daae-4b20-8886-441fead45e8f"/>
                <argumentType ref="type.129f82a3-1736-4739-a349-3d30e88222f4"/>
            </content>
        </type>
        <type derived="true" id="type.fe180509-4b6d-42c1-98b9-7db0750b6700">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.70586512-8ee5-41d8-b4dc-c69de18f6969"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.f94f208b-4764-41cc-bbdd-c2155fb4e158" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.c3c0ec33-14c8-4fb8-ae35-4010f6faa1ec"/>
                <argumentType ref="type.e92bc2ef-6c04-44c3-a1db-4d439b91ffa5"/>
                <argumentType ref="type.718ae592-8356-488a-805e-4719bf3ff989"/>
            </content>
        </type>
        <type derived="true" id="type.f38549a6-4733-4502-81c9-3e1b579866e8">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.f94f208b-4764-41cc-bbdd-c2155fb4e158"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a0a690fe-789d-4a89-82cc-92339b3bdf6e" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.c3c0ec33-14c8-4fb8-ae35-4010f6faa1ec"/>
                <argumentType ref="type.9cfcf592-b06f-489f-ac72-6050a5b6d704"/>
                <argumentType ref="type.ccf7e7b7-6368-454d-bcee-50ee273e8d8b"/>
            </content>
        </type>
        <type derived="true" id="type.1cd3dcf7-5dc5-4998-bf11-591b49b62695">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.a0a690fe-789d-4a89-82cc-92339b3bdf6e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.52cf85cc-e283-4837-9b47-1a50e51d2bf7" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.86c4fa33-2f07-4ccf-a453-8e9a4b208a20"/>
                <argumentType ref="type.422ac400-0a9c-4a25-bab6-4cf3cb5f0ea2"/>
                <argumentType ref="type.ceb4f4a4-4daf-42ae-991a-01463f40b664"/>
            </content>
        </type>
        <type derived="true" id="type.80c42e34-9a41-4c98-9901-141c32bb40e7">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.52cf85cc-e283-4837-9b47-1a50e51d2bf7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a2be5ab1-1e8c-4e4b-9563-0e542e765738" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.86c4fa33-2f07-4ccf-a453-8e9a4b208a20"/>
                <argumentType ref="type.78b96a0e-7ebf-4c74-9a3d-0f428e2dcf18"/>
                <argumentType ref="type.f3aecaa3-8575-4e92-8fb6-1075c5610d6f"/>
            </content>
        </type>
        <type derived="true" id="type.d50fb268-ce87-46b7-95bd-a034f818d114">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.a2be5ab1-1e8c-4e4b-9563-0e542e765738"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9d4f0944-665a-42c9-b9ef-d4fc74bfe356" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3c1d73bb-b21d-4a92-b26b-44b1b1638b07"/>
                <argumentType ref="type.74c374fb-6502-498a-b85d-32304be5b704"/>
                <argumentType ref="type.ea8823c2-cd78-4443-8975-a6a9e50e21b5"/>
            </content>
        </type>
        <type derived="true" id="type.66ff8bde-01a5-4a16-8ffc-18133bd0a71e">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9d4f0944-665a-42c9-b9ef-d4fc74bfe356"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.340d5a92-95dc-449f-9ec2-332fa1d7c368" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3c1d73bb-b21d-4a92-b26b-44b1b1638b07"/>
                <argumentType ref="type.a5a966f1-f389-4605-9317-35b656fa00bf"/>
                <argumentType ref="type.c2de911a-4d4e-4bfe-9b24-f4e00fb612b4"/>
            </content>
        </type>
        <type derived="true" id="type.2e3a4014-cb29-43d2-9c85-be0718dcc6b2">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.340d5a92-95dc-449f-9ec2-332fa1d7c368"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.571aa3fb-dfc5-4720-bcda-17b9315b1f38" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <argumentType ref="type.5803a2fa-6873-4257-a17d-cc6c1921ab21"/>
                <argumentType ref="type.c202b93d-64e7-4f08-bc70-18517cd6f28d"/>
            </content>
        </type>
        <type id="type.0b47a266-7bff-4a37-9687-70c882395cba" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <argumentType ref="type.5803a2fa-6873-4257-a17d-cc6c1921ab21"/>
                <argumentType ref="type.c202b93d-64e7-4f08-bc70-18517cd6f28d"/>
            </content>
        </type>
        <type id="type.fe4db733-2df9-417c-b0d9-6a4b8ec5c79a" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <argumentType ref="type.5803a2fa-6873-4257-a17d-cc6c1921ab21"/>
                <argumentType ref="type.c202b93d-64e7-4f08-bc70-18517cd6f28d"/>
            </content>
        </type>
        <type derived="true" id="type.7cf4d16d-8a9b-4d3c-8935-094697097666">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.fe4db733-2df9-417c-b0d9-6a4b8ec5c79a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4de33856-e6e2-4914-9625-5fb51b77210a">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.0b47a266-7bff-4a37-9687-70c882395cba"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6b240d3c-b1cc-4caf-a7cd-7e2b810c4e20">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.0b47a266-7bff-4a37-9687-70c882395cba"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5aff2f3f-a4c8-4c3f-8c03-981ea2c75ee6">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.fe4db733-2df9-417c-b0d9-6a4b8ec5c79a"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ea8d88db-e8f5-4444-b642-f70c36a6da35">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.571aa3fb-dfc5-4720-bcda-17b9315b1f38"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c9bb1771-b210-4c92-b2d7-f5ffb7e36c93">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.fe4db733-2df9-417c-b0d9-6a4b8ec5c79a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.246b30df-d03c-4247-8e17-bcf209788d71">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.0b47a266-7bff-4a37-9687-70c882395cba"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.064337eb-c8c5-4f01-bb46-2ca4577311b9" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
                <argumentType ref="type.a5f9b8d6-a29e-4664-a5b2-652899892b0e"/>
                <argumentType ref="type.b92d286c-8e44-4266-9c29-61e88a9c83fe"/>
            </content>
        </type>
        <type id="type.7ae555ef-6525-4b8f-937f-ecccfb7cd676" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
                <argumentType ref="type.a5f9b8d6-a29e-4664-a5b2-652899892b0e"/>
                <argumentType ref="type.b92d286c-8e44-4266-9c29-61e88a9c83fe"/>
            </content>
        </type>
        <type derived="true" id="type.1f5fc426-156f-4ae8-af10-ef4f728b87f1">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.064337eb-c8c5-4f01-bb46-2ca4577311b9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c31d7f32-ddf7-477b-9d63-ac3ac548347a">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.7ae555ef-6525-4b8f-937f-ecccfb7cd676"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.82971aaa-c670-4ecd-ba70-f4d06fa0efd2">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.7ae555ef-6525-4b8f-937f-ecccfb7cd676"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.615dde5c-1e22-4ab7-a3fe-062c00dcc69b">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.064337eb-c8c5-4f01-bb46-2ca4577311b9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e98d80ea-7aa5-4fe0-889f-afe7fbd69bc5">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.064337eb-c8c5-4f01-bb46-2ca4577311b9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.72f5d6b8-5cc6-43ed-ae9a-0a3246cba2bd">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.7ae555ef-6525-4b8f-937f-ecccfb7cd676"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <argumentType ref="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d"/>
                <argumentType ref="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db"/>
            </content>
        </type>
        <type id="type.41d63c95-3c52-4b62-a2fa-f1c4fc5dd480" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <argumentType ref="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d"/>
                <argumentType ref="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db"/>
            </content>
        </type>
        <type id="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <argumentType ref="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d"/>
                <argumentType ref="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db"/>
            </content>
        </type>
        <type id="type.c4cf4371-2180-4136-887c-9f0f7e162f18" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <argumentType ref="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d"/>
                <argumentType ref="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db"/>
            </content>
        </type>
        <type derived="true" id="type.6b579f62-2cef-4e9d-ae22-19b97236f869">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.71a5eabd-a87e-425d-bc7d-7c3f29691f0b">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.41d63c95-3c52-4b62-a2fa-f1c4fc5dd480"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6b579f62-2cef-4e9d-ae22-19b97236f869">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0e743da4-27ba-4cde-a2b6-9c90cadfa967">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.41d63c95-3c52-4b62-a2fa-f1c4fc5dd480"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5acdaa9e-1e74-468d-a66d-9997ffce8cae">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.c4cf4371-2180-4136-887c-9f0f7e162f18"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8c756955-19a1-4ab9-adbe-5f6b1641d506">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.012c992a-5d33-439e-b6fc-bc45834dfe29">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.41d63c95-3c52-4b62-a2fa-f1c4fc5dd480"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.112dfffc-2076-4104-a283-eb27475c2cf9">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.cf5f8fe3-b3c3-451f-924a-7cbf431842b7" specialization="true">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <argumentType ref="type.aae31367-b95c-41be-8133-9f94082d8533"/>
                <argumentType ref="type.4784dce6-44b5-4aa0-99c5-7073ea47897f"/>
            </content>
        </type>
        <type derived="true" id="type.1cc85fe9-aa4a-4e44-a41a-f667a394f633">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.cf5f8fe3-b3c3-451f-924a-7cbf431842b7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.6bb64b4d-e982-4e1a-8885-309a97c6bb8b" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <argumentType ref="type.c1524672-2d01-49f8-9d70-c1c1521aa6fb"/>
                <argumentType ref="type.ca60f6dd-9436-476f-af7a-f8f55989d9d9"/>
            </content>
        </type>
        <type id="type.8a2242c4-ca12-4adc-9404-96c5188d329f" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <argumentType ref="type.c1524672-2d01-49f8-9d70-c1c1521aa6fb"/>
                <argumentType ref="type.ca60f6dd-9436-476f-af7a-f8f55989d9d9"/>
            </content>
        </type>
        <type id="type.0e1da845-1804-4880-8fba-7ddcf07412d6" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <argumentType ref="type.c1524672-2d01-49f8-9d70-c1c1521aa6fb"/>
                <argumentType ref="type.ca60f6dd-9436-476f-af7a-f8f55989d9d9"/>
            </content>
        </type>
        <type derived="true" id="type.e1c9c654-8304-4016-bc00-22ac242db290">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.8a2242c4-ca12-4adc-9404-96c5188d329f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2a900180-42c9-4ee8-95c9-96a88ec16c3e">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.0e1da845-1804-4880-8fba-7ddcf07412d6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e1c9c654-8304-4016-bc00-22ac242db290">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.8a2242c4-ca12-4adc-9404-96c5188d329f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cef55aff-314e-4ef5-908a-ee63ecfbc5f9">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.0e1da845-1804-4880-8fba-7ddcf07412d6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7324f7d9-58d1-4089-87f9-65f123b2b774">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.6bb64b4d-e982-4e1a-8885-309a97c6bb8b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a84774f3-4ffd-41ad-a63b-46d4cf38cc9e">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8a2242c4-ca12-4adc-9404-96c5188d329f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.68f1d8b6-0a03-4540-a878-a76cb498a116">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.8a2242c4-ca12-4adc-9404-96c5188d329f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0a0fa066-5e2d-4b8c-8ec5-6e4b91e4887a">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.0e1da845-1804-4880-8fba-7ddcf07412d6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.de6ba713-dfca-4f35-8dfa-dd04f6439d91" specialization="true">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.99fdb6cf-9f3e-4ff5-8dd9-c1e7c090ddcf"/>
                <argumentType ref="type.8ee426e5-a7e6-45a9-82cc-c652499f5f7b"/>
            </content>
        </type>
        <type derived="true" id="type.d634395e-ee23-4751-857b-cf05d64f2916">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.de6ba713-dfca-4f35-8dfa-dd04f6439d91"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.81659c12-47b4-48f5-b41e-861765cae548" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.b810c316-c824-48cc-861f-c2150ba51f2c"/>
                <argumentType ref="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b"/>
            </content>
        </type>
        <type id="type.7dd27802-63ef-4ab9-80ad-163cfa48ae74" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.b810c316-c824-48cc-861f-c2150ba51f2c"/>
                <argumentType ref="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b"/>
            </content>
        </type>
        <type id="type.3a3d1545-3ddb-45fd-9808-6fb42a35aed6" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.b810c316-c824-48cc-861f-c2150ba51f2c"/>
                <argumentType ref="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b"/>
            </content>
        </type>
        <type id="type.81659c12-47b4-48f5-b41e-861765cae548" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <argumentType ref="type.b810c316-c824-48cc-861f-c2150ba51f2c"/>
                <argumentType ref="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b"/>
            </content>
        </type>
        <type derived="true" id="type.fb1ef7b0-1157-4494-90b0-ac171236fbda">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.81659c12-47b4-48f5-b41e-861765cae548"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee0e65ce-a14b-499f-a0e7-346f97ebfe92">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.3a3d1545-3ddb-45fd-9808-6fb42a35aed6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d6d5a9bc-4d29-4bcb-a85b-08c47789266e">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.81659c12-47b4-48f5-b41e-861765cae548"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1eb255d7-d206-4ddd-af29-21030fcd6a60">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3a3d1545-3ddb-45fd-9808-6fb42a35aed6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b22df53b-9310-4f84-a76c-48c0b17c20a8">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.7dd27802-63ef-4ab9-80ad-163cfa48ae74"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eca4eb7e-fa38-4dee-8259-45ea6f597ced">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.81659c12-47b4-48f5-b41e-861765cae548"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.000616d5-6ca7-4650-b36d-6dc477f83b27">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.3a3d1545-3ddb-45fd-9808-6fb42a35aed6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.eca4eb7e-fa38-4dee-8259-45ea6f597ced">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.81659c12-47b4-48f5-b41e-861765cae548"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.5bd621fc-de5a-43ad-8372-953e4c5066f5" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <argumentType ref="type.a0763378-c245-47b1-a07e-877c5a2d11c4"/>
                <argumentType ref="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d"/>
            </content>
        </type>
        <type id="type.3c92441b-b2ba-49ba-9adf-897e62e10dcd" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <argumentType ref="type.a0763378-c245-47b1-a07e-877c5a2d11c4"/>
                <argumentType ref="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d"/>
            </content>
        </type>
        <type id="type.5bd621fc-de5a-43ad-8372-953e4c5066f5" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <argumentType ref="type.a0763378-c245-47b1-a07e-877c5a2d11c4"/>
                <argumentType ref="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d"/>
            </content>
        </type>
        <type id="type.02047d61-9ac1-43c1-b285-cc672573161d" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <argumentType ref="type.a0763378-c245-47b1-a07e-877c5a2d11c4"/>
                <argumentType ref="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d"/>
            </content>
        </type>
        <type derived="true" id="type.1b517cfc-e3fa-4145-a6e2-06ee0dbbdb33">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.02047d61-9ac1-43c1-b285-cc672573161d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fa0c94cc-cebb-4372-8e02-d3fe692d4cd5">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.3c92441b-b2ba-49ba-9adf-897e62e10dcd"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1b517cfc-e3fa-4145-a6e2-06ee0dbbdb33">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.02047d61-9ac1-43c1-b285-cc672573161d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.67d85751-d6ef-41be-930a-c308ace0d7f5">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.02047d61-9ac1-43c1-b285-cc672573161d"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e55722c6-c991-49c6-91b6-97e14804be37">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3c92441b-b2ba-49ba-9adf-897e62e10dcd"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8c971cbd-97d9-489a-bc08-a502cf3f7d56">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5bd621fc-de5a-43ad-8372-953e4c5066f5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9c4010d3-f94e-4546-b760-0569207dae60">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.02047d61-9ac1-43c1-b285-cc672573161d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.16d74eaf-3f5c-4238-b39d-c5e6c9b9a328">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.3c92441b-b2ba-49ba-9adf-897e62e10dcd"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_RangeForStatement_785371970BF070388FB222CA14A1494243EB9D3E">
            <name>RangeForStatement</name>
        </type>
        <type derived="true" id="type.427ccbda-7fa7-4a7b-90ab-2ad02224f2d1">
            <name>RangeForStatement&amp;</name>
            <content>
                <baseType ref="class_RangeForStatement_785371970BF070388FB222CA14A1494243EB9D3E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d749c1d7-4e37-4b18-8672-98ef0d43e247">
            <name>RangeForStatement*</name>
            <content>
                <baseType ref="class_RangeForStatement_785371970BF070388FB222CA14A1494243EB9D3E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047" specialization="true">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="c356b906-935c-4db5-ad50-df08eac7fe9b"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <argumentType ref="30eb3124-dd17-48e4-9517-20afa3b5a096"/>
            </content>
        </type>
        <type derived="true" id="type.a8b8b6a4-f7a2-412d-9aae-07341d0e8378">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2" specialization="true">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="1daf5449-c489-4187-a295-de5653bae066"/>
                <argumentType ref="ca547d64-9ba8-498d-a818-12ae5b051551"/>
                <argumentType ref="1f3ea6aa-e182-46d3-9c07-478a92ddadd8"/>
                <argumentType ref="b616248a-0278-49aa-a70b-b812b6341ebc"/>
            </content>
        </type>
        <type derived="true" id="type.fd498d70-e62d-42bb-b659-75d49923deb1">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3" specialization="true">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="d42bcce5-0f47-4bdd-89d3-3d2fb005e781"/>
                <argumentType ref="d42bcce5-0f47-4bdd-89d3-3d2fb005e781"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="32f2f27a-dbdc-4c0f-9987-3412ac5edac3"/>
            </content>
        </type>
        <type derived="true" id="type.3fa9fc00-fc66-4fe4-80ee-4da86463c39d">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8ea6a16c-2c7b-4f2a-acb4-45e337b15b53">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4cccc5c9-e43e-40fd-998e-454adbca0489">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8608f10d-b0c1-4dbf-8fd6-e8f8cf33e6e1">
            <name>RedBlackTreeNodeBase&amp;&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d8a2d083-dcf4-4f8d-86ec-69ae7a613611">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d6ac3136-ee25-4efa-ad37-f0e08efd5074">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d8a2d083-dcf4-4f8d-86ec-69ae7a613611">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.ec0e2697-650d-43e0-85a8-b6bb943ac580" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.c156caa4-cb0e-4cff-8d1d-93061a4f8deb"/>
                <argumentType ref="type.44774a06-cf9c-48ba-a6b3-67d510e66de7"/>
            </content>
        </type>
        <type id="type.62748167-e889-40e9-92dd-fa4d145a8fb8" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.dc0c4d3a-00f7-450d-a1ef-fc862259eae2"/>
                <argumentType ref="type.a96d3e92-bbf0-4302-86d7-a2365bd30f51"/>
            </content>
        </type>
        <type id="type.48598452-33b7-4de8-b4d3-e010c4793e69" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9faf9ed2-54fe-4c94-92ea-210e387f3857"/>
                <argumentType ref="type.f288d6f7-973b-4be5-8637-db4387198ba7"/>
            </content>
        </type>
        <type derived="true" id="type.df737a46-b45c-44ad-b9f6-73d83a2d3377">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.48598452-33b7-4de8-b4d3-e010c4793e69"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9bf56e98-85df-41f5-8978-26a9643bd31d">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.62748167-e889-40e9-92dd-fa4d145a8fb8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.772b65fa-d177-49b8-889a-6017322ce659">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.ec0e2697-650d-43e0-85a8-b6bb943ac580"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.12a83642-6f92-4f5b-84f0-5e5a477cbd76" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.3dd629ab-4dfe-4540-8c26-a14f395fff20"/>
                <argumentType ref="type.a6230600-b8ed-4dbd-b8c5-077c9422e9d6"/>
            </content>
        </type>
        <type id="type.0705c860-550d-4f1f-91cf-f64da856493f" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9f2f6add-9510-4f6b-a828-946842f6d181"/>
                <argumentType ref="type.9fe211fe-ce33-41bb-9954-ce5cf1a59b0a"/>
            </content>
        </type>
        <type id="type.8a04089a-6d0c-4c93-bd2f-ae489887ce7b" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.4443f853-1a47-44cc-aa75-23d663fb36a6"/>
                <argumentType ref="type.d3dc10d7-75d1-42c8-b220-6c995ad39258"/>
            </content>
        </type>
        <type derived="true" id="type.1a5e3d43-900d-4ba6-8ca6-1e11d78fb44a">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.12a83642-6f92-4f5b-84f0-5e5a477cbd76"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.08080a69-e926-446d-a19a-1dcf0d93070a">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8a04089a-6d0c-4c93-bd2f-ae489887ce7b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5ea73ca2-ee66-44d2-9f34-17eba1ca0906">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.0705c860-550d-4f1f-91cf-f64da856493f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="3d0324c0-0971-486b-ab38-0dea89a557f4"/>
                <argumentType ref="41d0b14a-2c38-4ee1-a870-485651b3ba80"/>
                <argumentType ref="bc6bd757-3614-4511-bf94-33974a7f790c"/>
            </content>
        </type>
        <type derived="true" id="type.0170abcd-606e-4ce3-bebc-dbf3b3a26f15">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6971dffe-c239-4dbc-9e98-7b48d35790ca">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="190b6d95-4d69-4c74-89c7-e88f06befa80"/>
                <argumentType ref="type.76c606a5-918c-495e-bf41-538a79907771"/>
                <argumentType ref="type.b48dd5fb-ef81-4040-ae96-10431da96c22"/>
            </content>
        </type>
        <type derived="true" id="type.b9083287-db02-4fda-bcda-874e8279c940">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.718728c9-3df5-4f77-b6d5-e4a76f664c9b">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.830667bc-a64a-4564-a9b9-4f18ac7e8a2f">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="190b6d95-4d69-4c74-89c7-e88f06befa80"/>
                <argumentType ref="type.ee5b3a54-8755-4518-80a1-4bba2bd3cb09"/>
                <argumentType ref="type.7a16a0ca-e87f-4663-ae32-05198c7e8c72"/>
            </content>
        </type>
        <type derived="true" id="type.42c900b2-d95b-4558-9ad6-48f1df0d15ce">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.225aa040-a611-4f33-8f30-174ccec7326d">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0b84f660-be33-417b-b218-0fc13eab2be3">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="ca547d64-9ba8-498d-a818-12ae5b051551"/>
                <argumentType ref="type.c119eb20-864a-4fc6-b67d-f96c28603767"/>
                <argumentType ref="type.77ffa32f-8751-4c86-bb70-2d496f6e3600"/>
            </content>
        </type>
        <type derived="true" id="type.41987145-75e6-4ca7-9634-ebd7f0d89559">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="ca547d64-9ba8-498d-a818-12ae5b051551"/>
                <argumentType ref="type.8714f1f6-e115-40a9-a98e-5ff45b6a6a2c"/>
                <argumentType ref="type.bd646006-2414-41b6-94f0-2f198b6b4893"/>
            </content>
        </type>
        <type derived="true" id="type.f76b8c46-4556-44e2-aa67-51fbbdb6d45a">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_Rem_B6CCE54FD2D032B79B8776E88368A5362BF0845F">
            <name>Rem</name>
        </type>
        <type derived="true" id="type.21003dcc-8d33-45c2-90b3-0074b2ea7cdc">
            <name>Rem&amp;</name>
            <content>
                <baseType ref="class_Rem_B6CCE54FD2D032B79B8776E88368A5362BF0845F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.79cf1e21-6743-41a6-93d9-bd96409423d3">
            <name>Rem*</name>
            <content>
                <baseType ref="class_Rem_B6CCE54FD2D032B79B8776E88368A5362BF0845F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750">
            <name>ReturnStatement</name>
        </type>
        <type derived="true" id="type.7a10c956-573e-4aac-8037-27416048fbf9">
            <name>ReturnStatement&amp;</name>
            <content>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.58e3f5c6-5c0e-4b62-87ae-fe85040d2c45">
            <name>ReturnStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.58178a17-9aa2-42e7-8e56-38a51db694d4">
            <name>ReturnStatement*</name>
            <content>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229">
            <name>RvalueRef</name>
        </type>
        <type derived="true" id="type.90634c62-8a88-4d57-80b3-96c95b412895">
            <name>RvalueRef&amp;</name>
            <content>
                <baseType ref="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.839012d2-3c55-4848-bb92-4ce03316f36d">
            <name>RvalueRef&amp;&amp;</name>
            <content>
                <baseType ref="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b7fa487a-8a76-4166-a5e2-a0fe9c5f3834">
            <name>RvalueRef*</name>
            <content>
                <baseType ref="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SByteType_D39AD49CAA300FB82912697D32C1F0DA20E1CDE8">
            <name>SByteType</name>
        </type>
        <type derived="true" id="type.9ce24d4d-d68b-4c98-ad20-ba1cbf7c9db8">
            <name>SByteType&amp;</name>
            <content>
                <baseType ref="class_SByteType_D39AD49CAA300FB82912697D32C1F0DA20E1CDE8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.891a04da-2df8-4d8d-8f5c-3e738996b850">
            <name>SByteType*</name>
            <content>
                <baseType ref="class_SByteType_D39AD49CAA300FB82912697D32C1F0DA20E1CDE8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076" specialization="true">
            <name>SharedCount&lt;T></name>
            <content>
                <primaryType ref="class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <argumentType ref="2087b318-fde1-45b2-b538-e5b2ed34b7ce"/>
            </content>
        </type>
        <type derived="true" id="type.0d468eca-f7b5-4ded-8823-b32811eccf09">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.441fb44c-0a65-49b0-9dbc-027f5f676054">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3e826149-1f8e-4df8-9f9b-8798562524b5">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.16401052-07c4-42ce-a186-cbe4f7c0362a">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.64d027dd-3e4d-4f6f-ad56-d31fd2afe736">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F" specialization="true">
            <name>SharedPtr&lt;T></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="aab8b166-6791-47ff-8961-cc4fc41834b0"/>
            </content>
        </type>
        <type derived="true" id="type.74d0e12c-760b-4822-bdf6-af1f02ec6661">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6f80876f-75cf-44e4-96b4-44c4812f4917">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4acce523-5056-4907-a7ad-703474709212">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_ShiftLeft_0C58636617E67D99E2D4B947D93C487C9EC0EEAE">
            <name>ShiftLeft</name>
        </type>
        <type derived="true" id="type.b7743d8b-25f8-4aec-8538-afc56e58de12">
            <name>ShiftLeft&amp;</name>
            <content>
                <baseType ref="class_ShiftLeft_0C58636617E67D99E2D4B947D93C487C9EC0EEAE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8212a1a4-6cb5-4ac7-be5a-cde451c25307">
            <name>ShiftLeft*</name>
            <content>
                <baseType ref="class_ShiftLeft_0C58636617E67D99E2D4B947D93C487C9EC0EEAE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ShiftRight_27E7AC65159A3C02A710CE1FA049B105D3C389B9">
            <name>ShiftRight</name>
        </type>
        <type derived="true" id="type.0e3775ce-8e49-4358-afaf-318a12dd4255">
            <name>ShiftRight&amp;</name>
            <content>
                <baseType ref="class_ShiftRight_27E7AC65159A3C02A710CE1FA049B105D3C389B9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ea3f8c2e-71db-48b6-8cfb-44d9ebcda518">
            <name>ShiftRight*</name>
            <content>
                <baseType ref="class_ShiftRight_27E7AC65159A3C02A710CE1FA049B105D3C389B9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ShortType_F0B48C067139B7007831773D521E957F39E48196">
            <name>ShortType</name>
        </type>
        <type derived="true" id="type.940adc27-e705-4705-b101-294039db0f5c">
            <name>ShortType&amp;</name>
            <content>
                <baseType ref="class_ShortType_F0B48C067139B7007831773D521E957F39E48196"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ce898b88-e765-45bf-a332-0502dc9b899a">
            <name>ShortType*</name>
            <content>
                <baseType ref="class_ShortType_F0B48C067139B7007831773D521E957F39E48196"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B">
            <name>SizeOf</name>
        </type>
        <type derived="true" id="type.0dcd468a-f940-4cbb-941a-4c4819ab50fc">
            <name>SizeOf&amp;</name>
            <content>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3bc8183f-9bbd-4907-8ae4-8ff8c0a20d40">
            <name>SizeOf&amp;&amp;</name>
            <content>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a33881c5-66e3-4af2-a8ed-756a0812c693">
            <name>SizeOf*</name>
            <content>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0">
            <name>Statement</name>
        </type>
        <type derived="true" id="type.dcf1c1a4-0134-4b2f-b1f4-f157704995cf">
            <name>Statement&amp;</name>
            <content>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.96451f1b-0cad-467b-a283-20b45a0d0450">
            <name>Statement&amp;&amp;</name>
            <content>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.38b4ced8-7cad-44a9-a4b2-fcb94edbb636">
            <name>Statement*</name>
            <content>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.46748175-164c-4da8-a001-3c5b20cd990e">
            <name>Statement*&amp;</name>
            <content>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5842e970-15bb-4a87-a960-1d296a106879">
            <name>Statement**</name>
            <content>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.aca7a9a9-37bc-40f4-a84f-b50dfedbdf7d">
            <name>StaticInitCriticalSection&amp;&amp;</name>
            <content>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC" specialization="true">
            <name>String&lt;CharT></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="419405e7-9331-4574-971a-7ba37ca8bfcf"/>
            </content>
        </type>
        <type derived="true" id="type.11b96f05-2101-4142-b3de-3588570efb79">
            <name>String&lt;CharT>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.a08e7b96-65b1-4902-bc7e-40a22e01d134" specialization="true">
            <name>String&lt;char></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
            </content>
        </type>
        <type id="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc" specialization="true">
            <name>String&lt;uchar></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
            </content>
        </type>
        <type id="class_Sub_66511E41AA55D3A9AFDEFA0F4167C1D40E23242C">
            <name>Sub</name>
        </type>
        <type derived="true" id="type.1c0c963d-3b4f-4390-b408-4b7b1a5a399e">
            <name>Sub&amp;</name>
            <content>
                <baseType ref="class_Sub_66511E41AA55D3A9AFDEFA0F4167C1D40E23242C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a044ac2f-8b53-423e-9d68-c9135fdaec9e">
            <name>Sub*</name>
            <content>
                <baseType ref="class_Sub_66511E41AA55D3A9AFDEFA0F4167C1D40E23242C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E">
            <name>SwitchStatement</name>
        </type>
        <type derived="true" id="type.1c676ea9-2961-41b6-a33e-6221bbbab4db">
            <name>SwitchStatement&amp;</name>
            <content>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.15910fa5-24fe-469c-92f4-2909a536c316">
            <name>SwitchStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bfa0dfc4-05b3-49ff-bdf8-1a2a029d5cef">
            <name>SwitchStatement*</name>
            <content>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.698492ef-5bd9-429c-b1e2-972fe5b2f6b2">
            <name>T&amp;</name>
            <content>
                <baseType ref="3d0b5491-afcc-48ba-8dfb-77332056c1b4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9fe0700b-2a11-401a-877b-06caadee5b29">
            <name>T&amp;</name>
            <content>
                <baseType ref="14936fad-cf2b-477c-aa67-34fc3a7882a9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5f6e2c6a-f1ba-4d2d-96bc-cc8ed44d5ac4">
            <name>T&amp;</name>
            <content>
                <baseType ref="33a91f8e-263f-49e1-bc10-3c2a8a5e5399"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ad1f4757-61bf-41df-878f-255b27d557c1">
            <name>T&amp;</name>
            <content>
                <baseType ref="85bf9672-2627-413a-bf4e-bddb675ec273"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.68b6b492-0691-423b-ac90-7abcc17f8724">
            <name>T&amp;</name>
            <content>
                <baseType ref="219bd7eb-9c4b-4a97-828c-efb15376e977"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e2db12f7-26b8-44af-b03d-95755bc91954">
            <name>T&amp;</name>
            <content>
                <baseType ref="3ac734e9-a10d-496b-bd23-4853e956769f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.50d4a665-1d1f-4d79-9437-5bea8cff9b2a">
            <name>T&amp;</name>
            <content>
                <baseType ref="f846f81e-739b-49fb-9adb-24545c766872"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.873efa75-bf77-411d-b799-d0aaf4b7cb1d">
            <name>T&amp;</name>
            <content>
                <baseType ref="f5df275e-3607-4d99-9cb3-b5290804a9e0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e7eedded-04e3-45fc-8b1a-f2572236db18">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="998b6c44-792d-4efd-ac23-12cdabf7a36f"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.51e8cccf-58ee-45b8-ab9c-e9b1b40207d1">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="7146fe99-6b99-4c2c-b35d-5df901fb77d8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8c62773f-1408-4fb2-b7d1-ce8353daa463">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="2a8e7cbe-9052-461b-856f-2ba369484160"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5">
            <name>TemplateId</name>
        </type>
        <type derived="true" id="type.a1cf6a55-7548-470c-8e46-33aabb0bf7fa">
            <name>TemplateId&amp;</name>
            <content>
                <baseType ref="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b4dd92c8-0fe9-4c8f-957e-71723f8ebb7a">
            <name>TemplateId&amp;&amp;</name>
            <content>
                <baseType ref="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d71413a4-560d-4cad-9568-8a9308540a67">
            <name>TemplateId*</name>
            <content>
                <baseType ref="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_This_BF8A82301679DE71FF71944DBBFC35FC189B2A08">
            <name>This</name>
        </type>
        <type derived="true" id="type.6dfb88a2-6c5a-4719-9707-3d6e0cef7ddf">
            <name>This&amp;</name>
            <content>
                <baseType ref="class_This_BF8A82301679DE71FF71944DBBFC35FC189B2A08"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.05716483-4861-4a93-8aaf-3a5285ab28eb">
            <name>This*</name>
            <content>
                <baseType ref="class_This_BF8A82301679DE71FF71944DBBFC35FC189B2A08"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7">
            <name>ThrowStatement</name>
        </type>
        <type derived="true" id="type.9c425e27-f85d-4c4d-91f2-d10a926e7871">
            <name>ThrowStatement&amp;</name>
            <content>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f1fc5802-125d-4ac6-b830-57d73fee36d1">
            <name>ThrowStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2f17bb98-4a55-4787-b7b4-f89aba0bbff1">
            <name>ThrowStatement*</name>
            <content>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96">
            <name>TryStatement</name>
        </type>
        <type derived="true" id="type.dfef0a94-95e8-49e8-a1c8-6345bc441fc9">
            <name>TryStatement&amp;</name>
            <content>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.82c50860-fdeb-4f55-81c9-e9802e89d2ea">
            <name>TryStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.83e680a5-8039-4e2f-b8fe-cb810a584260">
            <name>TryStatement*</name>
            <content>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3">
            <name>Type</name>
        </type>
        <type derived="true" id="type.af7ac967-e96a-42b8-998e-e7af50dd9e29">
            <name>Type&amp;</name>
            <content>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.72e3bd09-2367-4b43-a154-167d12008c93">
            <name>Type&amp;&amp;</name>
            <content>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e617328b-0b52-439b-9160-f325e42e4af2">
            <name>Type*</name>
            <content>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB">
            <name>TypeName</name>
        </type>
        <type derived="true" id="type.42ccbd65-b9a6-46aa-b5b9-0781dc3a0c2f">
            <name>TypeName&amp;</name>
            <content>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8b232049-4dd2-4f4d-8694-f0eb7925848e">
            <name>TypeName&amp;&amp;</name>
            <content>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.03e26a5d-2bdb-421c-bd44-b091b00307a2">
            <name>TypeName*</name>
            <content>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_UCharType_74BA7B3E41E59E7C17C07A7B6CD92191F1E76A13">
            <name>UCharType</name>
        </type>
        <type derived="true" id="type.c4f6331a-7d1a-4e1a-bf47-55e7983a2b09">
            <name>UCharType&amp;</name>
            <content>
                <baseType ref="class_UCharType_74BA7B3E41E59E7C17C07A7B6CD92191F1E76A13"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e61fc1a6-d18a-4ba3-9a2f-f6c6eefde6a3">
            <name>UCharType*</name>
            <content>
                <baseType ref="class_UCharType_74BA7B3E41E59E7C17C07A7B6CD92191F1E76A13"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_UIntType_DB3E1F90B7FE1BC815B68BB1953CE0A8495E3D24">
            <name>UIntType</name>
        </type>
        <type derived="true" id="type.c0be19a7-aeed-4103-b4c5-8c745312bd81">
            <name>UIntType&amp;</name>
            <content>
                <baseType ref="class_UIntType_DB3E1F90B7FE1BC815B68BB1953CE0A8495E3D24"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c70ce089-c8f1-4e72-83c1-037359e99dce">
            <name>UIntType*</name>
            <content>
                <baseType ref="class_UIntType_DB3E1F90B7FE1BC815B68BB1953CE0A8495E3D24"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ULongType_5010BECDDEC8CE9D9573F3789BC52249D9F2FA7C">
            <name>ULongType</name>
        </type>
        <type derived="true" id="type.42e68d87-aa1d-4b51-9170-64a384bda3b3">
            <name>ULongType&amp;</name>
            <content>
                <baseType ref="class_ULongType_5010BECDDEC8CE9D9573F3789BC52249D9F2FA7C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.52be3691-a980-4185-8410-c722cfdc7adc">
            <name>ULongType*</name>
            <content>
                <baseType ref="class_ULongType_5010BECDDEC8CE9D9573F3789BC52249D9F2FA7C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_UShortType_CD493F6AAE316F9E9C75A94CD714D34E9C1CD54F">
            <name>UShortType</name>
        </type>
        <type derived="true" id="type.61ea2253-202b-4865-902b-7a95faa9c48a">
            <name>UShortType&amp;</name>
            <content>
                <baseType ref="class_UShortType_CD493F6AAE316F9E9C75A94CD714D34E9C1CD54F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4e1582a8-9cc4-4d33-a664-bafc92582ab9">
            <name>UShortType*</name>
            <content>
                <baseType ref="class_UShortType_CD493F6AAE316F9E9C75A94CD714D34E9C1CD54F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F">
            <name>UnaryMinus</name>
        </type>
        <type derived="true" id="type.6032e387-d446-43fa-8807-8e59c9b8ad80">
            <name>UnaryMinus&amp;</name>
            <content>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3048a616-18ff-4d3f-891b-658bddff171c">
            <name>UnaryMinus&amp;&amp;</name>
            <content>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.189da0b0-d14a-451d-a8a2-f777a6638651">
            <name>UnaryMinus*</name>
            <content>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2">
            <name>UnaryPlus</name>
        </type>
        <type derived="true" id="type.66ec8924-58a0-4a4d-af52-e321b3358b3e">
            <name>UnaryPlus&amp;</name>
            <content>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b89b548a-58e2-48b1-946d-da454965e6d7">
            <name>UnaryPlus&amp;&amp;</name>
            <content>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.998f14cb-3f20-4e34-b39f-96541aa924b7">
            <name>UnaryPlus*</name>
            <content>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.52838d60-3622-4492-af3b-6d4f66388877" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.56598ce8-a75d-43c7-9ce9-b564faceeb85"/>
            </content>
        </type>
        <type derived="true" id="type.31f925a9-cc24-44e7-ba0b-02212dd19d0d">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.52838d60-3622-4492-af3b-6d4f66388877"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.2aa57d36-d197-444c-98f5-005104e5c982" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
            </content>
        </type>
        <type derived="true" id="type.eea4539f-bf03-40c2-86f7-3079c8408931">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>>&amp;&amp;</name>
            <content>
                <baseType ref="type.2aa57d36-d197-444c-98f5-005104e5c982"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.37061d6a-0154-48fa-b507-c4255a79edc6" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_ValueType_38B50DA62919A6E728F70DA36817024C5A9A8855"/>
            </content>
        </type>
        <type derived="true" id="type.6c8bc246-5997-4552-a2f2-7efa9747119c">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>>&amp;&amp;</name>
            <content>
                <baseType ref="type.37061d6a-0154-48fa-b507-c4255a79edc6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.3c3b64a3-3992-4871-a936-3851277c16c7" specialization="true">
            <name>UniquePtr&lt;System.Exception></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
            </content>
        </type>
        <type derived="true" id="type.c0b122ef-49cf-4e83-99c0-4824e3f2fa48">
            <name>UniquePtr&lt;System.Exception>&amp;&amp;</name>
            <content>
                <baseType ref="type.3c3b64a3-3992-4871-a936-3851277c16c7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_CaseStatement_C59D9EE2EB215BB01443FA26C029108CF42800A1"/>
            </content>
        </type>
        <type derived="true" id="type.8a57ab1e-599f-4e8b-9ba5-c75d883952cf">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;</name>
            <content>
                <baseType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f04b3a82-e5f9-4165-8bd0-e069441b1b69">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;&amp;</name>
            <content>
                <baseType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.24cd750d-8a04-4148-be1d-bfb7757579aa">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*</name>
            <content>
                <baseType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.27cd71e7-80b1-4634-b985-5e42b9f0ca3e">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*&amp;</name>
            <content>
                <baseType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7d1c2cc3-99ae-4caa-8304-407511f54478">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*&amp;&amp;</name>
            <content>
                <baseType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.46967324-2bab-4a4e-91b7-fd122e4f6a5f">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>**</name>
            <content>
                <baseType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.08330684-471b-4f59-8bb5-277643cccdeb" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Catch></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Catch_0582D6C1CDCCCB626ECB14F1DA1432D9E2111A37"/>
            </content>
        </type>
        <type derived="true" id="type.b5eeee2e-73d4-4fd9-bda5-5c7eec389e83">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;</name>
            <content>
                <baseType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.65e2363d-fe3d-4964-a59e-fee31099b5f7">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;&amp;</name>
            <content>
                <baseType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ce662c4e-bec7-4ab4-82dc-07bb6fef2da2">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*</name>
            <content>
                <baseType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.51bf75a8-855e-4306-8fc8-7db2c45fee85">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*&amp;</name>
            <content>
                <baseType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4051c72c-9fe7-4dc9-8acd-6f1d6574f912">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*&amp;&amp;</name>
            <content>
                <baseType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4813a25d-50f3-48e7-b785-ea162ee15553">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>**</name>
            <content>
                <baseType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.a81c0ce8-58ea-4d31-9588-dc5993026e3e" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CompoundStatement></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
            </content>
        </type>
        <type derived="true" id="type.e76259aa-568c-4023-812b-6d0b8fe86774">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CompoundStatement>&amp;</name>
            <content>
                <baseType ref="type.a81c0ce8-58ea-4d31-9588-dc5993026e3e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.87b66647-109b-4ab1-8142-7fd56a6fa92f">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CompoundStatement>&amp;&amp;</name>
            <content>
                <baseType ref="type.a81c0ce8-58ea-4d31-9588-dc5993026e3e"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cb7cf033-c66d-4d4b-a71c-741136960e6c">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.CompoundStatement>*</name>
            <content>
                <baseType ref="type.a81c0ce8-58ea-4d31-9588-dc5993026e3e"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.a0fa9402-4c5d-46b8-9cd1-7b02fe894d9b" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DefaultStatement></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_DefaultStatement_431BBB02B62D93DF15B8BA112275D930065BD749"/>
            </content>
        </type>
        <type derived="true" id="type.96ba7d52-bc74-463d-98bd-e667fa272eb4">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DefaultStatement>&amp;</name>
            <content>
                <baseType ref="type.a0fa9402-4c5d-46b8-9cd1-7b02fe894d9b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cadfb2d7-9dfa-439e-b66a-2985dc73f77a">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DefaultStatement>&amp;&amp;</name>
            <content>
                <baseType ref="type.a0fa9402-4c5d-46b8-9cd1-7b02fe894d9b"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bf91632c-45be-41f4-b0fc-d1591fa36310">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DefaultStatement>*</name>
            <content>
                <baseType ref="type.a0fa9402-4c5d-46b8-9cd1-7b02fe894d9b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
            </content>
        </type>
        <type derived="true" id="type.a50b9876-39da-4124-9210-da4be2593d87">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;</name>
            <content>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.06af1ea1-c88a-4887-819e-a1b43c8a23a3">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;&amp;</name>
            <content>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fe7dcb69-f70e-47bb-a74f-6f3692472247">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*</name>
            <content>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.199c1b0c-0645-431f-9493-3a72da81fdb6">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*&amp;</name>
            <content>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f7e6bd48-74cd-4bdd-8b64-7b12a6826639">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*&amp;&amp;</name>
            <content>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0452d18d-9fb8-4ae3-93fb-bec9a709c29b">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>**</name>
            <content>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8d47e32e-a35f-4ba8-9424-5b006949e675" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Statement></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
            </content>
        </type>
        <type derived="true" id="type.df01ebcb-7b75-47ec-bdec-efdd546af955">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;</name>
            <content>
                <baseType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fdd85b58-d6f2-45c2-b86f-a400c0e5cca7">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;&amp;</name>
            <content>
                <baseType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.945f99ac-2f74-4d01-bf1d-6d6510faf359">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*</name>
            <content>
                <baseType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.683b12ab-8a20-4942-880b-9c11a5c3f911">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*&amp;</name>
            <content>
                <baseType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dcd85d3f-3edc-40ed-b960-9df6c4ca5171">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*&amp;&amp;</name>
            <content>
                <baseType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e8a4a873-c226-448a-8321-a1d7d8448a87">
            <name>UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>**</name>
            <content>
                <baseType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009" specialization="true">
            <name>UniquePtr&lt;T></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="a0bd4920-fe93-44aa-b77e-5f02c8b16396"/>
            </content>
        </type>
        <type id="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009" specialization="true">
            <name>UniquePtr&lt;T></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="a0bd4920-fe93-44aa-b77e-5f02c8b16396"/>
            </content>
        </type>
        <type derived="true" id="type.6be5def2-7c1b-4aea-888d-04c3d0324d1b">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e03a9dee-5afc-48ce-a226-b1b4777a70da">
            <name>Value&amp;</name>
            <content>
                <baseType ref="27218102-4ab7-4928-9de3-3ac0d65373fa"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="class_Visitor_20FFECD046DAE045FE9E47404AA9013F309AFDED">
            <name>Visitor</name>
        </type>
        <type derived="true" id="type.6252381c-d678-460c-98f8-98f77275190d">
            <name>Visitor&amp;</name>
            <content>
                <baseType ref="class_Visitor_20FFECD046DAE045FE9E47404AA9013F309AFDED"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.471c21a6-11c9-472b-9cad-3843ebbe9767">
            <name>Visitor*</name>
            <content>
                <baseType ref="class_Visitor_20FFECD046DAE045FE9E47404AA9013F309AFDED"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_VoidType_F2D7E59A076EE94BAEF44C2456DB40E6BFD77B0F">
            <name>VoidType</name>
        </type>
        <type derived="true" id="type.ff0862dc-aae4-4788-9a5a-9a0649a5ea4c">
            <name>VoidType&amp;</name>
            <content>
                <baseType ref="class_VoidType_F2D7E59A076EE94BAEF44C2456DB40E6BFD77B0F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f70ff284-b28f-4cda-a77d-05ed8ed8bcce">
            <name>VoidType*</name>
            <content>
                <baseType ref="class_VoidType_F2D7E59A076EE94BAEF44C2456DB40E6BFD77B0F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_WCharType_37CA4173121AAEC55D38A900C4F4DD90FFB9655E">
            <name>WCharType</name>
        </type>
        <type derived="true" id="type.ce59dbc4-9365-4a2a-b8bd-f2f3ac1d744a">
            <name>WCharType&amp;</name>
            <content>
                <baseType ref="class_WCharType_37CA4173121AAEC55D38A900C4F4DD90FFB9655E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b296165b-28a2-4fb1-b658-10330975315d">
            <name>WCharType*</name>
            <content>
                <baseType ref="class_WCharType_37CA4173121AAEC55D38A900C4F4DD90FFB9655E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F" specialization="true">
            <name>WeakCount&lt;T></name>
            <content>
                <primaryType ref="class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <argumentType ref="2087b318-fde1-45b2-b538-e5b2ed34b7ce"/>
            </content>
        </type>
        <type derived="true" id="type.3f0ad769-a8b9-4550-ad85-d58ffcfc8a67">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.609f1d94-787d-4d86-ae02-a051328920df">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cbed9855-823e-4b7d-aac9-7a76142007f8">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9cc4024c-1aa5-462a-8026-79fd40e65bea">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5e773969-39bb-44f6-87b8-b426c06e3e23">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.83d9403c-d96a-4bcb-98ac-d6eb1d3fa170" specialization="true">
            <name>WeakPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.b6fe808e-ae25-4485-bcc1-d03a29a59ad7">
            <name>WeakPtr&lt;System.IO.ByteStream>&amp;&amp;</name>
            <content>
                <baseType ref="type.83d9403c-d96a-4bcb-98ac-d6eb1d3fa170"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC" specialization="true">
            <name>WeakPtr&lt;T></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="aab8b166-6791-47ff-8961-cc4fc41834b0"/>
            </content>
        </type>
        <type derived="true" id="type.496a6c07-1459-4435-9ec5-bc679a029e84">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d6dab91e-765c-4dab-b08f-691f931f11c3">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.851b1737-0a09-48c4-8974-5185005021a1">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f90d2e07-e1aa-4da4-aa33-b171884040b7">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b0d31e11-5eea-4861-8d90-74bb79b99133">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7d250654-5886-4950-a40c-0affce0d01b2">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5cddb18d-b91e-4e4c-a303-2d6d7a7ed9f3">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021" specialization="true">
            <name>WeakPtr&lt;U></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="3eadf9e6-31eb-461e-8ce4-27f717a4a51c"/>
            </content>
        </type>
        <type derived="true" id="type.b18a7bf7-57e0-48e3-b4e9-5f00c8795aee">
            <name>WeakPtr&lt;U>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_WhileStatement_73BA811E542035F6EB0CDBB6874FA3BEF573C0F3">
            <name>WhileStatement</name>
        </type>
        <type derived="true" id="type.d027be90-0b45-498f-923e-dc3b0377f495">
            <name>WhileStatement&amp;</name>
            <content>
                <baseType ref="class_WhileStatement_73BA811E542035F6EB0CDBB6874FA3BEF573C0F3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3bbee620-898d-4c53-aecd-34797177ffd9">
            <name>WhileStatement*</name>
            <content>
                <baseType ref="class_WhileStatement_73BA811E542035F6EB0CDBB6874FA3BEF573C0F3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.ae1b2da6-78d6-4792-bc0f-242912b31062">
            <name>bool</name>
        </type>
        <type basic="true" id="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2">
            <name>byte</name>
        </type>
        <type derived="true" id="type.5803a2fa-6873-4257-a17d-cc6c1921ab21">
            <name>byte&amp;</name>
            <content>
                <baseType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c202b93d-64e7-4f08-bc70-18517cd6f28d">
            <name>byte*</name>
            <content>
                <baseType ref="type.2691ae4c-6d61-4fd7-952f-eeb6739762b2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9acef40e-6998-4365-a472-c8627ac58dfc">
            <name>char</name>
        </type>
        <type derived="true" id="type.a5f9b8d6-a29e-4664-a5b2-652899892b0e">
            <name>char&amp;</name>
            <content>
                <baseType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b92d286c-8e44-4266-9c29-61e88a9c83fe">
            <name>char*</name>
            <content>
                <baseType ref="type.9acef40e-6998-4365-a472-c8627ac58dfc"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.43e7f2ba-5308-4346-bc28-d9ae6149c37f">
            <name>const AddressOf</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
            </content>
        </type>
        <type derived="true" id="type.55f256a8-0153-4add-8645-ae682e4ce4a4">
            <name>const AddressOf&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.af0cc088-44fc-4ff2-ae31-9bec70e1da99">
            <name>const Array</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Array_01D2071770F4541CF86429091B229EF2950656B0"/>
            </content>
        </type>
        <type derived="true" id="type.1cbeb3e7-d4c9-4af1-92c8-4d945ab4e505">
            <name>const Array&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Array_01D2071770F4541CF86429091B229EF2950656B0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a8d65600-b46b-4afa-b69c-65d97c6eebb6">
            <name>const Array*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Array_01D2071770F4541CF86429091B229EF2950656B0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6902d7ad-d94c-4500-90b4-eaba0aa642ea">
            <name>const Arrow</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Arrow_1A144572826274559F7125C012EDEF88A9F72FDB"/>
            </content>
        </type>
        <type derived="true" id="type.8b391bbe-6187-4b2a-a126-146e2970409f">
            <name>const Arrow&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Arrow_1A144572826274559F7125C012EDEF88A9F72FDB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dbd129b5-c8fb-413e-b22b-a4207685f796">
            <name>const Arrow*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Arrow_1A144572826274559F7125C012EDEF88A9F72FDB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4de26ef1-baf3-421b-9689-c8577e383168">
            <name>const AssertStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
            </content>
        </type>
        <type derived="true" id="type.5691397e-34d7-4713-a9f1-59a3fb99c890">
            <name>const AssertStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8c7fa171-8cbc-47a3-8981-6e1dcd5a2c74">
            <name>const BackInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
            </content>
        </type>
        <type derived="true" id="type.f2e5af2f-6dab-4daa-bf96-355d8c48fbdf">
            <name>const BackInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
            </content>
        </type>
        <type derived="true" id="type.39c26849-fba9-4a2e-88d7-1e33c7f6f8a5">
            <name>const BackInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b7ff69ff-3318-4be4-ad1b-c01938b4fdd2">
            <name>const BackInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertIterator_C_32FDC69B4E447639FA50AF73E473F91CFA48F52A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fda37ba9-56e6-40d8-b742-1248382ca2b1">
            <name>const BackInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
            </content>
        </type>
        <type derived="true" id="type.76b50b24-afb0-4467-90dd-998756337257">
            <name>const BackInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
            </content>
        </type>
        <type derived="true" id="type.a8dbf926-bf01-481d-abc8-5262b8e6cff7">
            <name>const BackInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
            </content>
        </type>
        <type derived="true" id="type.26e93b30-051e-47d6-974c-795832fecd77">
            <name>const BackInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d0d19cac-9afc-487f-9aa9-34b35e3ea6dd">
            <name>const BackInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.33788ec6-fbe0-45a4-b1a4-0ad66d94edf2">
            <name>const BackInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_BackInsertProxy_C_0A915D77FDC3655A035DBFC5EEC23FB1CC1DA7DD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8e7d77d2-74b1-4737-9f7b-09d08c43e817">
            <name>const BinaryReader</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
            </content>
        </type>
        <type derived="true" id="type.f1c057d6-df69-4d04-b404-ab65dbd0f19e">
            <name>const BinaryReader&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6c47e692-732b-4847-bdd0-5e4c4bf8816b">
            <name>const BinaryWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
            </content>
        </type>
        <type derived="true" id="type.63bc5d4f-2b92-4ca7-b32b-14e5c2b8e81a">
            <name>const BinaryWriter&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.05b2fb9f-6162-4ba3-8c08-4b681c8bd575">
            <name>const BufferedByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BufferedByteStream_E74639F265FCFA3F7A3E61DE9D92C703A46FD573"/>
            </content>
        </type>
        <type derived="true" id="type.c3bffb18-5f48-41f4-aa7d-c8f77634603b">
            <name>const ByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.353e5910-8b89-43e5-b4bd-d4b822a7445a">
            <name>const CaseStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CaseStatement_C59D9EE2EB215BB01443FA26C029108CF42800A1"/>
            </content>
        </type>
        <type derived="true" id="type.2d536dd0-2417-4d55-934a-e046c0246928">
            <name>const CaseStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CaseStatement_C59D9EE2EB215BB01443FA26C029108CF42800A1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b99d9d80-24f0-4a24-a307-723637f5d1b9">
            <name>const CaseStatement*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CaseStatement_C59D9EE2EB215BB01443FA26C029108CF42800A1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c632fd5f-58c4-4139-99fd-d92df593363a">
            <name>const Catch</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Catch_0582D6C1CDCCCB626ECB14F1DA1432D9E2111A37"/>
            </content>
        </type>
        <type derived="true" id="type.70e4a8d1-18ad-4aeb-be54-790a55a316a5">
            <name>const Catch&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Catch_0582D6C1CDCCCB626ECB14F1DA1432D9E2111A37"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1e4943c0-a8f7-4bc9-9c24-1c3d55f1f4bb">
            <name>const Catch*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Catch_0582D6C1CDCCCB626ECB14F1DA1432D9E2111A37"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bfe34a68-677d-43ac-b017-4532c9524389">
            <name>const Complement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
            </content>
        </type>
        <type derived="true" id="type.927f0942-d566-4596-af35-3547432682b7">
            <name>const Complement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.04e70360-1ccc-49ec-84e9-7b52eceecaec">
            <name>const CompoundStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
            </content>
        </type>
        <type derived="true" id="type.1da54a59-f2d5-4c5d-b684-0c8b1182338c">
            <name>const CompoundStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3904a20f-48cc-479b-b51d-76db7f1c5992">
            <name>const CompoundStatement*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dd004be2-150a-4df3-986e-0c12bb214910">
            <name>const ConditionVariable</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConditionVariable_019A80625043CF98EC88D8F55238C84CFD4A9C26"/>
            </content>
        </type>
        <type derived="true" id="type.a8509301-bbbb-4de9-aa73-aa81a75e78ed">
            <name>const Const</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A"/>
            </content>
        </type>
        <type derived="true" id="type.d9bbc0ab-868f-4cc0-b587-338cb49e5015">
            <name>const Const&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6fa51b73-9fd5-4939-9713-fe21c75263ec">
            <name>const Const*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.af7c7d47-0dfa-474e-98e8-0f1f4de59d28">
            <name>const Construct</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
            </content>
        </type>
        <type derived="true" id="type.cdbdac31-6283-4934-8fa8-3057867044e6">
            <name>const Construct&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.023d1969-f81e-485c-aefe-f0034af19a96">
            <name>const ConversionException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
            </content>
        </type>
        <type derived="true" id="type.2c7f2fde-0641-40cf-95bd-4c0604e178e4">
            <name>const ConversionException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.32f0415b-3744-4526-ab85-eaf94da48663">
            <name>const Counter&lt;System.IO.ByteStream></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.42b7f893-26a8-437d-bf79-8d4e6336479c"/>
            </content>
        </type>
        <type derived="true" id="type.8ef4895f-97a1-4039-a6b1-9d59a0ffc5fc">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.edb60adb-acf7-4864-9493-f4aef7c91dbd">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.efc6e877-bdbc-486b-87a8-58bb8a065173">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.5e59cb1c-3ee0-4f21-b84b-e5d31f31b44a">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.dd365ca6-1e6f-4ffb-9e51-7e9a85f36e74">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.c43ab72d-8b6c-4e03-a2e8-388d3ded279b">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.8a63421b-b5ca-4e69-843c-f6c638e1faac">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3f2bd946-1402-47a2-8f44-3d20557a12cb">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.0e56e677-94b9-4d2e-8db0-331413322d84">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3c407e22-e82e-4649-8ba0-324715296f9c">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.c0b204bd-881d-457d-ab95-dfe332ada66b">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.98444f7e-3940-473c-9875-7d184cc1fac9">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.f5ceb879-12e2-47fe-bbae-e6cb2ae5a922">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.6f31eaf4-c107-485d-881f-564b90a5e7ff">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.80cf7f76-43bf-48f5-9e07-062913d1f6e7">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.0cb744d4-99de-4bb8-9055-6aa036bdba4e">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.366ea43b-d68e-4390-8b3e-1108ceb60ead">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0c91e102-f182-4b3a-9bea-2cf5efe576f1">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.25da4f49-0ba6-4bc6-8f46-0fadc61c0e12">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7c81f12b-2be1-44a9-8315-cef8ec214043">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1b369282-83b2-421f-9d0d-2d5e561be1b3">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7bf87acb-8e4f-46f9-8edb-06fe221e5252">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b3cf2027-a34c-4b15-8b4e-ec91994d64b6">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.afb23278-412d-4918-8830-51fce869a0cb">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.65ba4dc3-c126-4dbd-a646-2d7b7116be2d">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.edd64d56-c970-4779-a4dd-ea403157835f">
            <name>const DefaultStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DefaultStatement_431BBB02B62D93DF15B8BA112275D930065BD749"/>
            </content>
        </type>
        <type derived="true" id="type.2d04bcf0-b4ab-4f3d-aa3a-35b0f4e386b1">
            <name>const DefaultStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DefaultStatement_431BBB02B62D93DF15B8BA112275D930065BD749"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.98e7442e-797b-4940-8b77-9b7d63e084c6">
            <name>const DefaultStatement*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DefaultStatement_431BBB02B62D93DF15B8BA112275D930065BD749"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ac75b73f-77b6-47d9-bd2c-070f365a96ff">
            <name>const DeleteStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
            </content>
        </type>
        <type derived="true" id="type.3db46905-4a17-479d-8756-29556b964edc">
            <name>const DeleteStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e5e2c0a8-3860-4c59-a386-6515f31230f5">
            <name>const Deref</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
            </content>
        </type>
        <type derived="true" id="type.f3f3f465-6f51-4105-95c3-4fe6ace08374">
            <name>const Deref&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cd6f34cb-4df9-465c-929c-7f0ca5f28840">
            <name>const DestroyStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
            </content>
        </type>
        <type derived="true" id="type.01813f2a-7062-4bbb-bf5a-461e9a9b0be7">
            <name>const DestroyStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c5aea061-6754-437c-acbc-093cf931b018">
            <name>const DomObject</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
            </content>
        </type>
        <type derived="true" id="type.81ea0942-75e8-46f6-beb8-56a8ee8cfaa7">
            <name>const DomObject&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b6508b36-758b-4f15-aa52-4e51088de0ff">
            <name>const DomObject*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.91833e21-45d5-4d5d-9ade-6304bcac3743">
            <name>const DomObject*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.86821cfe-e27c-4bd1-adc2-825f3afa7974">
            <name>const DomObject**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b413dddc-d576-4fbe-a597-2206411d5aa6">
            <name>const Dot</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Dot_3DBFB45CB93A3D81709E97835834A09CB64DBFD8"/>
            </content>
        </type>
        <type derived="true" id="type.8eeafab2-185b-451e-bffd-3d332857c545">
            <name>const Dot&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Dot_3DBFB45CB93A3D81709E97835834A09CB64DBFD8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.69adf64e-5583-4b35-a915-6304d11a06d9">
            <name>const Dot*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Dot_3DBFB45CB93A3D81709E97835834A09CB64DBFD8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0818b78f-ecf8-4974-a648-74275b08e036">
            <name>const Expression</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
            </content>
        </type>
        <type derived="true" id="type.dce37ed9-9a31-4033-9515-1628f18d6978">
            <name>const Expression&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e5ef88de-8e02-42d4-8c50-31cf0a01b963">
            <name>const Expression*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Expression_63F45770E98CB553F848612A60783A045B1137F7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.92892c5a-90f8-4865-b93d-8906079fb9b7">
            <name>const ExpressionStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
            </content>
        </type>
        <type derived="true" id="type.479cfdce-0b56-450d-8d41-b73013135dc5">
            <name>const ExpressionStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.436f57a5-c1cc-418a-b850-e1cf15e7460d">
            <name>const FileSystemException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
            </content>
        </type>
        <type derived="true" id="type.95263d59-e9b3-4f6e-bcb9-7461aa383aa3">
            <name>const FileSystemException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.017d44f1-0382-47d7-8231-5622f295f95f">
            <name>const FrontInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
            </content>
        </type>
        <type derived="true" id="type.0cf19772-d0f9-4b3e-a27c-98eca955aa78">
            <name>const FrontInsertIterator&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
            </content>
        </type>
        <type derived="true" id="type.65f5e3a9-fa9c-4803-bb2b-182084052ad8">
            <name>const FrontInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7dd9aac3-7735-4bb8-b9ca-3c40d8374c4b">
            <name>const FrontInsertIterator&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertIterator_C_D80A05FF34EEB87493396DB90644DA0FDBE71FB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.65c28e06-7679-4632-9277-08d94378fbe8">
            <name>const FrontInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
            </content>
        </type>
        <type derived="true" id="type.00a062a7-0920-4758-aa0e-39dd4e522532">
            <name>const FrontInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
            </content>
        </type>
        <type derived="true" id="type.b95bd212-c61f-4ccb-b645-badb2ad60ccb">
            <name>const FrontInsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
            </content>
        </type>
        <type derived="true" id="type.ec3abaef-b682-4f78-b86f-05b9945e84a3">
            <name>const FrontInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9f11d2d1-3c6f-4d93-a423-c45d315d7845">
            <name>const FrontInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.abc05228-e472-489e-bd6c-7f60a54fed7f">
            <name>const FrontInsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_FrontInsertProxy_C_1406F688C6DEF21E4D2B7A33E82CAF1FBB721467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5ed7fb5a-b787-4362-acea-2addca730b3c">
            <name>const FunctionProfiler</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FunctionProfiler_809E118D4757DEA417E0CB7F4E658DF7C4B79B00"/>
            </content>
        </type>
        <type derived="true" id="type.f8e4ef06-878c-460f-ab26-875f7ddbcf6e">
            <name>const FunctionProfiler&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FunctionProfiler_809E118D4757DEA417E0CB7F4E658DF7C4B79B00"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1377269c-a737-4b01-a7fe-0dbc002a0f79">
            <name>const GotoCaseStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
            </content>
        </type>
        <type derived="true" id="type.66bf4f5b-82b7-4889-a924-97d70327bd10">
            <name>const GotoCaseStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.55728749-dced-4bd2-9d94-2561755bf45d">
            <name>const GotoStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
            </content>
        </type>
        <type derived="true" id="type.c0bed43c-9037-4855-ad9b-e057f7f97a28">
            <name>const GotoStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.de621f0c-a149-4ebd-9846-462d56913de0">
            <name>const Identifier</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
            </content>
        </type>
        <type derived="true" id="type.4744c6d0-7990-4a07-91ac-c1b8f36d05e3">
            <name>const Identifier&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ddf6294c-6902-4e0d-8ed9-09ebdbc57717">
            <name>const Identifier*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b34fae46-6bca-442d-a37e-49c04eca6fa9">
            <name>const Indexing</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Indexing_F06FD2A01CA08D73D3B848268E78E8185020CBA4"/>
            </content>
        </type>
        <type derived="true" id="type.d36c374f-1d33-4ad8-8bfc-1d62bfc04013">
            <name>const Indexing&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Indexing_F06FD2A01CA08D73D3B848268E78E8185020CBA4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.09de3ee2-4928-49f7-bf0c-aaf6c6f78a7c">
            <name>const Indexing*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Indexing_F06FD2A01CA08D73D3B848268E78E8185020CBA4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c6c17133-d7ae-4598-a5da-4704701ef03b">
            <name>const InsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
            </content>
        </type>
        <type derived="true" id="type.d7e351bb-4e1a-46a3-8187-27e103eda393">
            <name>const InsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
            </content>
        </type>
        <type derived="true" id="type.d6638d17-1445-496e-82cd-c3ff8dd2cf82">
            <name>const InsertProxy&lt;C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
            </content>
        </type>
        <type derived="true" id="type.4c2abec7-fdc1-4860-b893-eb77fbf255e9">
            <name>const InsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5687f95f-d1ce-4584-8cbc-8dcaa95cfb92">
            <name>const InsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ac0ff2fc-89b2-4393-bab8-d5d3e375317f">
            <name>const InsertProxy&lt;C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_InsertProxy_C_CF849D7EBB4D0DDC638CF02E7360671994EC7F3A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.72130e87-c1b3-4f3a-81af-6145e3b65fb3">
            <name>const InvalidPathException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
            </content>
        </type>
        <type derived="true" id="type.c0a334af-a605-449f-9852-ac11ee447ad3">
            <name>const InvalidPathException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6c2a2585-893b-45ed-b19c-a7c812ac593b">
            <name>const Invoke</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
            </content>
        </type>
        <type derived="true" id="type.674c7360-c3a3-4787-a324-7a82fe870f95">
            <name>const Invoke&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6eaabc40-b213-4ae1-a0f3-0998e53c7eec">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4da7762f-8c5e-4d4e-a185-605883df46f1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fad630ba-2682-49d8-ba9b-044c41deaa11">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="c356b906-935c-4db5-ad50-df08eac7fe9b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8aa0114e-6606-4d01-a1c1-3b1d570a5918">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6731076c-f39f-4b1a-901e-acda07d86381"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fab281d5-25e8-4211-8b4a-d5af6f515705">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="1daf5449-c489-4187-a295-de5653bae066"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5b223b6b-0fb1-410d-b430-60749c62f4e6">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2a329468-2409-463c-820f-9b19b6d2fa90"/>
            </content>
        </type>
        <type derived="true" id="type.355ad13b-24dd-4dbc-8e83-556dd135e488">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2a329468-2409-463c-820f-9b19b6d2fa90"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.622c6d62-da3f-4d50-bc02-c3398bf04422">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2a329468-2409-463c-820f-9b19b6d2fa90"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.98c56081-7848-43e8-a57d-a63ee67aba19">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8d59325f-2936-4d0b-9200-39ffb2fd9484"/>
            </content>
        </type>
        <type derived="true" id="type.9abf9fef-ba6c-4f4a-bcc8-bffec98c0b39">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8d59325f-2936-4d0b-9200-39ffb2fd9484"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2eb4ccb8-0c8b-43b9-9d8b-ef600c9022de">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8d59325f-2936-4d0b-9200-39ffb2fd9484"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.02d39460-1b10-459c-b807-ffb8146b8d08">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7424ce3b-e581-429a-93ed-24be04c68e1a"/>
            </content>
        </type>
        <type derived="true" id="type.c6a86e55-af2e-4bb5-8b4b-aca3fd3c9b87">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7424ce3b-e581-429a-93ed-24be04c68e1a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.81a01b70-eab7-4b4c-ba8d-d0d8752a4e1e">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7424ce3b-e581-429a-93ed-24be04c68e1a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.67b30a6f-16d7-499f-834a-dcedea71ed22">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.bccf26ee-054b-49eb-923a-574eb42d4c6a"/>
            </content>
        </type>
        <type derived="true" id="type.8e441a22-04ce-478a-ba27-76562e517ba7">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.bccf26ee-054b-49eb-923a-574eb42d4c6a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bce85ebd-faa4-45d4-bd5f-8df26cf700d7">
            <name>const List&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.bccf26ee-054b-49eb-923a-574eb42d4c6a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.31a21229-6bb6-4ff4-9d4e-6165d96943da">
            <name>const Literal</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
            </content>
        </type>
        <type derived="true" id="type.47b7e58e-30bb-4ca1-8395-d4731068d256">
            <name>const Literal&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2a2655b9-b31d-48f6-91a2-ab4318a33894">
            <name>const LockGuard&lt;Mtx></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
            </content>
        </type>
        <type derived="true" id="type.ad9b25fa-194a-41d9-8a7d-6602a0b04a5f">
            <name>const LockGuard&lt;Mtx>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a2fe2d0b-bb77-45f3-a307-a75a4bf45a3f">
            <name>const LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.fa4abbcc-d5c3-4d23-a6d1-a05311f67255"/>
            </content>
        </type>
        <type derived="true" id="type.77ac91e7-3281-4e17-a9e9-5bb4bda642bb">
            <name>const LockGuard&lt;System.Threading.Mutex>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.fa4abbcc-d5c3-4d23-a6d1-a05311f67255"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2cea880c-8da0-46f4-bc46-4229151da4b9">
            <name>const LvalueRef</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05"/>
            </content>
        </type>
        <type derived="true" id="type.3b053105-c2be-4c87-bf30-1515cd458270">
            <name>const LvalueRef&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2425d1c5-a62e-4cb7-a51e-3ded734a4de7">
            <name>const LvalueRef*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.39219735-a9fb-418e-99ca-ecbba34a7dca">
            <name>const Mutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.7dc7d25b-34d6-4e04-be47-44f6e93aafbf">
            <name>const New</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
            </content>
        </type>
        <type derived="true" id="type.2000a44d-bf26-4c52-9c20-7c8714fe1d88">
            <name>const New&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.63b90db2-f82d-4c09-9e9c-f1638091484b">
            <name>const Not</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
            </content>
        </type>
        <type derived="true" id="type.d16c4220-8ca1-42f6-a32d-56e38c7e9d20">
            <name>const Not&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.342bc0c6-24cc-463e-99e5-9e5ae58f568c">
            <name>const OutputStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OutputStream_D306768ED83C9FB00EA54CD61D604CE2BF727452"/>
            </content>
        </type>
        <type derived="true" id="type.e76d345f-bc42-490e-a469-2ba611bd6ef8">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1169b6c8-76a1-4347-9910-74c51cc263cb">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3a6dc62d-2b77-4396-8607-85fae23ee1ba">
            <name>const Pointer</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6"/>
            </content>
        </type>
        <type derived="true" id="type.5a29f537-e69b-4194-8450-ba8baac30e03">
            <name>const Pointer&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2ec6ffc0-13fd-4e82-bbd6-067f65045dd9">
            <name>const Pointer*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c2a885e7-4d67-436b-a215-15c92e368e25">
            <name>const PostfixDecrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
            </content>
        </type>
        <type derived="true" id="type.2dd6f854-6a25-4f09-b210-e66d528b8b50">
            <name>const PostfixDecrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5d5cc301-4250-4a03-bc91-6f9f8b7ac2ba">
            <name>const PostfixIncrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
            </content>
        </type>
        <type derived="true" id="type.e1a414f3-f951-46fe-a706-0881eb81fc4b">
            <name>const PostfixIncrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5da26c25-021c-4300-9b86-8709c4a50e30">
            <name>const PrefixDecrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
            </content>
        </type>
        <type derived="true" id="type.3153be4f-f674-478a-8853-ba12410b52e7">
            <name>const PrefixDecrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.98abf451-0f29-4eba-b32f-808d4156ae00">
            <name>const PrefixIncrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
            </content>
        </type>
        <type derived="true" id="type.194c1524-af41-43d1-9c36-7128a171737a">
            <name>const PrefixIncrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c10f4206-c2f6-4d19-97da-0506f6625552">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.34258267-d192-43cb-9cba-749dc9c332b7"/>
            </content>
        </type>
        <type derived="true" id="type.e881549c-0fae-4f13-9361-31c060c33370">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.34258267-d192-43cb-9cba-749dc9c332b7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e8d346ce-6f6c-43e4-9546-ef49b6c1d83c">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.34258267-d192-43cb-9cba-749dc9c332b7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.13359b19-92d3-4793-812b-65cea5a400eb">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e1ccb1e1-d394-4de1-ba76-f3e1bf8e885d"/>
            </content>
        </type>
        <type derived="true" id="type.aabada9f-148f-40d3-b202-04ae6b589050">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e1ccb1e1-d394-4de1-ba76-f3e1bf8e885d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bda86380-2f3f-41a1-a335-4b936d211ec9">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.e1ccb1e1-d394-4de1-ba76-f3e1bf8e885d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.794d3c97-ff5f-4bbf-abb8-861a82da8a06">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.87ca4ec1-1ccb-49e2-86c3-3a3b8cbf7b14"/>
            </content>
        </type>
        <type derived="true" id="type.b07edebb-7e19-4399-93c6-fef88d5a6a20">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.87ca4ec1-1ccb-49e2-86c3-3a3b8cbf7b14"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3958641a-cf75-42b0-8e5e-efe328bbfcff">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.87ca4ec1-1ccb-49e2-86c3-3a3b8cbf7b14"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ba8e6af3-082e-45fa-a4ac-767014228b15">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f9d2f949-60b5-4e12-b767-2d4a5d6dc7cc"/>
            </content>
        </type>
        <type derived="true" id="type.a4fb3363-1699-44bf-b17a-2437e8df0a2c">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f9d2f949-60b5-4e12-b767-2d4a5d6dc7cc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f79f6f33-c2d3-4d60-9f36-f855bfbc108b">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f9d2f949-60b5-4e12-b767-2d4a5d6dc7cc"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.329a522a-37ca-45a6-bcc3-a95558075dbc">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.aa6d8c1b-ce7f-4ada-9544-2c096181f760"/>
            </content>
        </type>
        <type derived="true" id="type.15625c69-2bcb-4d5e-9ae6-ec5cbc65ff27">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.aa6d8c1b-ce7f-4ada-9544-2c096181f760"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3482fc26-cbf2-4655-9947-abf18551f5f2">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.aa6d8c1b-ce7f-4ada-9544-2c096181f760"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ad32ab1f-f26e-433c-9d89-2f66471c8074">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c1de1d63-ead9-489c-9fd2-24b79cb0c4bb"/>
            </content>
        </type>
        <type derived="true" id="type.96fcdd2f-16f0-4a4c-b1d4-e4f83a376e86">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c1de1d63-ead9-489c-9fd2-24b79cb0c4bb"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.70e6f76c-a598-4a7d-afd4-a2c9ef4c26a9">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.c1de1d63-ead9-489c-9fd2-24b79cb0c4bb"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8e8aac79-94f3-4d85-8619-37372c9925df">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.853663ea-fa9f-4f0c-a83a-26e6c250660c"/>
            </content>
        </type>
        <type derived="true" id="type.e8dadbcd-dcbe-45b3-800c-f990bffa0ad6">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.853663ea-fa9f-4f0c-a83a-26e6c250660c"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.87c0ccec-8f76-421b-856a-6d05a7d40663">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.853663ea-fa9f-4f0c-a83a-26e6c250660c"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9afb9e8f-264a-48ea-a350-b67c43dd9f8e">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6a435e11-26db-4587-991c-a0be5d85f564"/>
            </content>
        </type>
        <type derived="true" id="type.2b2378af-e4bf-4d28-bb14-79df8fb131f3">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6a435e11-26db-4587-991c-a0be5d85f564"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2966ab65-1dc6-4f05-881f-b7be87bf6b1e">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.6a435e11-26db-4587-991c-a0be5d85f564"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0ad10dc7-3a52-4b82-9a7a-6d04db69021b">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0b47a266-7bff-4a37-9687-70c882395cba"/>
            </content>
        </type>
        <type derived="true" id="type.f2530956-f7ed-4f4a-8f3c-2e1bd26f9ce0">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.fe4db733-2df9-417c-b0d9-6a4b8ec5c79a"/>
            </content>
        </type>
        <type derived="true" id="type.0ad10dc7-3a52-4b82-9a7a-6d04db69021b">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0b47a266-7bff-4a37-9687-70c882395cba"/>
            </content>
        </type>
        <type derived="true" id="type.95eda298-f749-4602-9441-9ef8ee520930">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.fe4db733-2df9-417c-b0d9-6a4b8ec5c79a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b1776f96-4950-455e-bf3d-f998be2b1a0b">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0b47a266-7bff-4a37-9687-70c882395cba"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3c6ae06b-0200-415a-a870-6d3d5f079317">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0b47a266-7bff-4a37-9687-70c882395cba"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.97567bce-69d9-48ce-89be-2f363464253a">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.fe4db733-2df9-417c-b0d9-6a4b8ec5c79a"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3c6ae06b-0200-415a-a870-6d3d5f079317">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0b47a266-7bff-4a37-9687-70c882395cba"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c8a4af90-f3c9-4d33-9112-fbe6ffaccad5">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.064337eb-c8c5-4f01-bb46-2ca4577311b9"/>
            </content>
        </type>
        <type derived="true" id="type.8e01facc-2c88-4103-bf09-781893edea43">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7ae555ef-6525-4b8f-937f-ecccfb7cd676"/>
            </content>
        </type>
        <type derived="true" id="type.4a407790-8668-498a-9657-253c33f0d5ce">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.064337eb-c8c5-4f01-bb46-2ca4577311b9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8dbeebd7-da99-4d57-a739-a6e0421e6e12">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7ae555ef-6525-4b8f-937f-ecccfb7cd676"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f73f4899-f334-4533-91c9-15c7e5e4842f">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.064337eb-c8c5-4f01-bb46-2ca4577311b9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.738a9a17-e720-4755-8650-1f6ab5a91c3c">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.7ae555ef-6525-4b8f-937f-ecccfb7cd676"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6bb00bc2-f4e8-43af-8914-d823c84926c1">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f"/>
            </content>
        </type>
        <type derived="true" id="type.644114ac-201d-4191-b8b8-b2eb7036f9d3">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.41d63c95-3c52-4b62-a2fa-f1c4fc5dd480"/>
            </content>
        </type>
        <type derived="true" id="type.1e09f45b-ef88-4075-a457-11dff757d5ef">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.72f8d581-9efa-47cf-9522-ffd0ae3df388">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.41d63c95-3c52-4b62-a2fa-f1c4fc5dd480"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1e09f45b-ef88-4075-a457-11dff757d5ef">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a2896da7-b54e-49f9-9bd7-f608b379ac5f">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.41d63c95-3c52-4b62-a2fa-f1c4fc5dd480"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8a5601be-1074-47c6-acc4-d1ab003970ce">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3ff7b0e2-4cf2-4227-90fd-0e5f632ca74f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ed1c20b7-20ff-4c6d-86a3-2cf49fa693ea">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8a2242c4-ca12-4adc-9404-96c5188d329f"/>
            </content>
        </type>
        <type derived="true" id="type.7e72d6c2-41b0-4898-89ba-b6d70c7607cc">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0e1da845-1804-4880-8fba-7ddcf07412d6"/>
            </content>
        </type>
        <type derived="true" id="type.ed1c20b7-20ff-4c6d-86a3-2cf49fa693ea">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8a2242c4-ca12-4adc-9404-96c5188d329f"/>
            </content>
        </type>
        <type derived="true" id="type.dbc24a0f-61cb-41e4-a62c-26f9be78d724">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0e1da845-1804-4880-8fba-7ddcf07412d6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dd1b06a3-50e5-43cb-820a-e084de8f045b">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8a2242c4-ca12-4adc-9404-96c5188d329f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.71cdd84c-71a8-46fc-ae18-9711812a7cf4">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8a2242c4-ca12-4adc-9404-96c5188d329f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.52a78893-fea7-48b8-a0d0-2a0c7c30e07d">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.0e1da845-1804-4880-8fba-7ddcf07412d6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.71cdd84c-71a8-46fc-ae18-9711812a7cf4">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8a2242c4-ca12-4adc-9404-96c5188d329f"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d3bf2d97-7e89-47d2-a423-5d66e06eaa94">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.81659c12-47b4-48f5-b41e-861765cae548"/>
            </content>
        </type>
        <type derived="true" id="type.44129e5a-de8d-4db1-8def-608792c89c39">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3a3d1545-3ddb-45fd-9808-6fb42a35aed6"/>
            </content>
        </type>
        <type derived="true" id="type.b0288c08-a545-429b-95f0-11ec348fe1ae">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.81659c12-47b4-48f5-b41e-861765cae548"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee3c0827-6f48-40e1-a82e-08a6c250191d">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3a3d1545-3ddb-45fd-9808-6fb42a35aed6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ddba4b6d-7136-4a29-8a0a-c8f4c543377a">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.81659c12-47b4-48f5-b41e-861765cae548"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6b601051-ef30-458c-8ba7-96152e919dbb">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3a3d1545-3ddb-45fd-9808-6fb42a35aed6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d07a35ef-50aa-49ad-940f-697c5495bd61">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3c92441b-b2ba-49ba-9adf-897e62e10dcd"/>
            </content>
        </type>
        <type derived="true" id="type.5668c812-8e8a-429b-a228-8a8ef367b1cf">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.02047d61-9ac1-43c1-b285-cc672573161d"/>
            </content>
        </type>
        <type derived="true" id="type.09592d6e-453c-496c-9a36-e0c0c256c92d">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3c92441b-b2ba-49ba-9adf-897e62e10dcd"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f14da226-3139-4e4b-a85b-f2b9c5373e9e">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.02047d61-9ac1-43c1-b285-cc672573161d"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b88bc901-e14e-4e7d-9453-b6deb0411627">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3c92441b-b2ba-49ba-9adf-897e62e10dcd"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bc7dcc90-7642-41a3-80aa-ab42880d74f6">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.02047d61-9ac1-43c1-b285-cc672573161d"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.495a7ea3-9c52-4a9f-ad87-b3c5e197512c">
            <name>const RecursiveMutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RecursiveMutex_B9ED5479754BBDDED6A4491348BBD2F20F701D82"/>
            </content>
        </type>
        <type derived="true" id="type.0e09cf5c-6d9d-4383-8414-a472c5857171">
            <name>const ReturnStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
            </content>
        </type>
        <type derived="true" id="type.6b046f8d-dce1-40b1-af74-586500aa348f">
            <name>const ReturnStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1852d93c-fd0d-4f27-959c-d74c6f0fdbb1">
            <name>const RvalueRef</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229"/>
            </content>
        </type>
        <type derived="true" id="type.8e377cb7-931f-41bb-a364-0e7e0e57e704">
            <name>const RvalueRef&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.999c7d0c-d245-4b2e-9ee5-62abe89a9df5">
            <name>const RvalueRef*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.35bcc69e-464d-44ca-a279-b0bec217ece6">
            <name>const SizeOf</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
            </content>
        </type>
        <type derived="true" id="type.ffa4d248-290c-4116-b494-57f1f3029139">
            <name>const SizeOf&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d4c6b863-cfd9-4b7e-8a7e-89ac404757e7">
            <name>const Statement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
            </content>
        </type>
        <type derived="true" id="type.a41c1139-5838-4a78-b492-9b56b26415c9">
            <name>const Statement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cddbe4b1-6f39-4d7c-a3e9-a1d6d5c04522">
            <name>const Statement*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.79f375fe-afab-42a4-97a7-67310ada82b7">
            <name>const StaticInitCriticalSection</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
            </content>
        </type>
        <type derived="true" id="type.851bd0a6-8c05-4fa0-a727-a4d58f46467e">
            <name>const StaticInitCriticalSection&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.cbe7cc9d-c102-425f-a289-25832eb65f28">
            <name>const StreamWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
            </content>
        </type>
        <type derived="true" id="type.1a3626f4-a272-43c2-979e-8c8ac7662a0d">
            <name>const String&lt;uchar>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.f35e0f2b-83af-4357-a3e3-ef83631dc1bc"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3d9e21ea-1d46-4648-8c61-8d7a5030c540">
            <name>const SwitchStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
            </content>
        </type>
        <type derived="true" id="type.61d663d5-9b71-49f5-b443-d2254fed6cbe">
            <name>const SwitchStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.139f1a73-d21d-4833-a311-88c6f1e244b2">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="0754a3bf-a476-45db-b4da-8fb6ee84cc84"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ee67dab3-4480-47d9-b09c-b17b49297669">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="aac984e1-75be-479a-94e0-f8d1ffd56bdd"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.83c9d795-59c7-4398-8916-dd1ae1993747">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="489e6bbb-e7c6-4a83-8cad-0c591523ab3f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.df1859b8-a4f4-4eed-99aa-5ab4ed5ccfd1">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="3ac734e9-a10d-496b-bd23-4853e956769f"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.458388dc-7cea-4d6a-b6ee-b6f8378d6e4e">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="2ab78ede-e9b6-4c42-9582-4c5a6d468beb"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b435a5c6-e830-4d8a-99a7-c106fade692b">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5967e25e-79d2-439b-a3a0-9930652e215a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.56bc51bc-b8fc-4345-bb06-a0744b934220">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6d887db8-b14e-4678-b516-00dd68e3bb9b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3c2017b8-fd72-4156-92ab-832e801228f1">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6ba050cf-eeab-4616-9121-9bb0820f2379"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.78276272-f36c-4cfe-b4b8-877227c98ba4">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="a65c6b3d-ee9a-4446-95d4-758d9d8f02c2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1f2da45b-98aa-4b35-9d9a-1277a600a87c">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="20633026-c0a8-4b24-9dc6-d486d2e2256e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.423553e7-1827-4f00-9cee-3fab32e90123">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="f8df4bb1-cb52-493c-a10c-9400e586bf24"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fe40c5f8-337b-4a87-9fa2-2b3e15dfea6a">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="ac193b61-68b8-4d49-abe7-6ca527549cb3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.efbb1b5d-8081-41ae-a696-281f0274318d">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="833b2f36-2e58-4fa6-8c92-f19ab25a653a"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d944c973-4628-4ac6-96fd-dae2580b2f81">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6055854f-16ac-458b-b4dc-30b2df5a8e60"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9e49630a-3f7e-472b-b9ef-1df40d499ad7">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="98b663c5-1acb-4d86-96ae-1bf01de0239e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b49b7b5d-8d4f-4b07-be89-f2e64b08c504">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="219bd7eb-9c4b-4a97-828c-efb15376e977"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7321de95-feba-4f9e-bc4f-4a41f46cdc45">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="74710b2b-66cb-4f20-bf52-0ea6947d4262"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0f1fe76e-19d8-4b60-a803-cc6e9825f434">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4919c330-2bbb-43cd-9536-655e3c0e8fa4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6f4aa0a7-1ea2-45c1-a14d-c452921cd6b5">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="75ba4e61-3ce3-4247-bf0c-37e5522b89a8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.41850477-0086-42a8-b523-4eab5c581c29">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="09d38e2d-e22e-4712-ae83-a56ac69a3ce6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.531e9e9c-4270-4a24-abcd-b2f901cf301e">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9898e993-28d3-4752-bc1f-38f6e07f4453"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5a920523-ef3a-4739-8578-fb43140a1d73">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="50f64cf5-ba7a-4d34-9921-f2917f225ed7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a2730504-3246-48ab-aa4d-06c5de3d8613">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="2f31c27f-d4ce-45bb-91f9-d668a550cbb8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.163286e2-d8be-437f-8ede-6e8bbeb4c9ef">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9a77ada7-c248-4150-9bcd-e5810412f40b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d0da9f96-709c-4737-b9cb-edc79b044825">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5b18b5f1-f8c5-46de-b64d-556ef0159d32"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.241bc2b1-5870-415e-b9d1-3928efa4c8c7">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="f5df275e-3607-4d99-9cb3-b5290804a9e0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.6664ba7f-aa95-4402-9101-69b2bc7762ba">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="f846f81e-739b-49fb-9adb-24545c766872"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3f703e07-2367-4f90-ac93-684bfb526088">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8ec1da02-cc99-4716-96f3-a26861c18cd9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c93557a7-c868-48c9-b86e-b2bd07f0db7c">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6b6a5a2b-bdb6-4613-9b9b-78e345d5e357"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.45c571eb-260d-4424-b814-ae9de2bac54f">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="6882e0a4-757d-420a-b465-d5ec018d0fe3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4aa05305-a271-424e-9398-8b43b2a6b91a">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="14936fad-cf2b-477c-aa67-34fc3a7882a9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.12bc748f-2d2d-46a0-87c1-bb1417602cb1">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="33a91f8e-263f-49e1-bc10-3c2a8a5e5399"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c069bf0a-d078-4b74-83b8-4af67882e16d">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="3d0b5491-afcc-48ba-8dfb-77332056c1b4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.049cc9c4-747b-4a52-892e-adbf2b2633bc">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="170940f2-876b-462a-af93-f8878fb19cf2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.50cce21d-5c2a-430f-8555-7e80e51fb083">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="85bf9672-2627-413a-bf4e-bddb675ec273"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bbc75c26-f552-4efb-a833-3cb534a1a70b">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="44d71f6d-e4f6-475c-b58f-d89b068d5bf3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.180a6469-5d69-41b5-9e7b-4a61acab90f9">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="f0765ab0-8d89-4584-8907-36fd630c3367"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e166c514-be06-4889-b2e6-cae67b8b7fc3">
            <name>const TemplateId</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5"/>
            </content>
        </type>
        <type derived="true" id="type.67115c6d-d7e0-47cf-b667-579c3c60bb87">
            <name>const TemplateId&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4842520c-8efd-4a14-a62b-1b91a7bb86cc">
            <name>const TemplateId*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9785782d-1ac8-4060-88bd-b5cffc7d7f74">
            <name>const ThreadingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
            </content>
        </type>
        <type derived="true" id="type.6dbfeab5-0133-4f18-b4dd-f324326a9139">
            <name>const ThreadingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7cb4e8c6-7c59-4996-a611-81e13c6db37c">
            <name>const ThrowStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
            </content>
        </type>
        <type derived="true" id="type.7600312f-b81d-45ef-a531-2b4d24aea96f">
            <name>const ThrowStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.f459e0b4-1d0e-4163-89d8-c84bf6c0acce">
            <name>const TryStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
            </content>
        </type>
        <type derived="true" id="type.00651af9-6a40-4166-b7eb-31dbebb48d1f">
            <name>const TryStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.711eb1a7-0973-43a5-a78a-c8e5333f62bc">
            <name>const Type</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
            </content>
        </type>
        <type derived="true" id="type.95df29a6-aed6-4a50-89c0-72257a0d9fd5">
            <name>const Type&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8d41e358-b321-4ff0-a067-80f270b946d4">
            <name>const TypeName</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
            </content>
        </type>
        <type derived="true" id="type.b9107b6e-21c9-4bc5-b492-f9088d9a5b51">
            <name>const TypeName&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d1ff2551-ed0e-4159-b2e7-17870ecfb593">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="66423f94-660f-4809-b094-b147ea89f16b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.71773a68-fd93-4ebf-81ea-0e0868513f1e">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="86b0f57d-fd8c-4d94-b1fe-b49d09fb0aa7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.17ba5505-0fad-42bd-8ba0-f66f507ad53a">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="de9a98a1-e2ac-4f15-b777-187e22096ebd"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d5051813-8935-4e75-8480-c9a9686c0a0e">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="0a93011d-78f1-4c36-952a-d805e820c153"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.dd480f19-8ed8-483b-9d35-b626306b7642">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="a426212f-0da4-4220-a0d8-db91869c7109"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8989ac10-b344-431b-8c25-07f7f97e3bd6">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="d36a4c9b-9a8f-4363-b043-ac22b7e839be"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.a99aa27a-0bd7-420f-8885-8ebcf7c94f71">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="1b0960f2-7b84-4bea-be09-85101ecca3ce"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c80d8c90-eba8-4f5c-8676-b814431eb529">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5b598b4e-706a-400b-ac2f-6299b3dcb323"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b14a2e2a-944d-4907-949a-6853dd71e9f4">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="2df605e5-b653-4b8e-ae34-764906a561f9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ff9e13ee-fa73-42eb-baf1-a886f27cd32f">
            <name>const UnaryMinus</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
            </content>
        </type>
        <type derived="true" id="type.ab1d6d86-5907-4b1d-9d12-e784ce6022e0">
            <name>const UnaryMinus&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.90823b47-0efa-4e2e-aa82-154dec0aacb0">
            <name>const UnaryPlus</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
            </content>
        </type>
        <type derived="true" id="type.95dc60c6-b4a9-4c7c-89bc-a01e8c835f6c">
            <name>const UnaryPlus&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0b1b5c80-7c72-43d7-9e14-9245dd9b9aba">
            <name>const UnicodeException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
            </content>
        </type>
        <type derived="true" id="type.c44058f3-e874-431c-a59c-d6e53efd362e">
            <name>const UnicodeException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.0cb6bec2-d7fb-4012-b69a-daf5830b2fdb">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
            </content>
        </type>
        <type derived="true" id="type.738e39ba-fdca-4bff-995f-3cb3911b97a5">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.7c892d00-ba9f-45b4-9455-e9ca6eee944b">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.659b2f4b-a1f3-4e5b-90da-770c1d65ce89"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.40dd1e0c-75a8-4bfe-b348-073f1b1edcc3">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
            </content>
        </type>
        <type derived="true" id="type.792aee5c-8b65-4a14-8342-9cd02c2abef6">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.c912a4cd-b984-4e91-889d-c913f1e2704d">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.08330684-471b-4f59-8bb5-277643cccdeb"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.de1061bd-72a8-405e-b921-eb82d5ac98dc">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.CompoundStatement></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a81c0ce8-58ea-4d31-9588-dc5993026e3e"/>
            </content>
        </type>
        <type derived="true" id="type.df41db2d-3e73-42c0-b225-458abce9ee38">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.CompoundStatement>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a81c0ce8-58ea-4d31-9588-dc5993026e3e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.75400b18-1ab7-418d-a7e4-975e0a146f98">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.CompoundStatement>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a81c0ce8-58ea-4d31-9588-dc5993026e3e"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2bde6903-13f8-476f-8699-42aa26fa22e2">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.DefaultStatement></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a0fa9402-4c5d-46b8-9cd1-7b02fe894d9b"/>
            </content>
        </type>
        <type derived="true" id="type.8c37aaed-0c79-483d-9028-a6dce95a0134">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.DefaultStatement>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a0fa9402-4c5d-46b8-9cd1-7b02fe894d9b"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.976ba129-aaa3-46f0-bfa0-42bca4b29995">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.DefaultStatement>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.a0fa9402-4c5d-46b8-9cd1-7b02fe894d9b"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.d93d2edb-1010-42c4-87f3-c2d10ce7cbe2">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
            </content>
        </type>
        <type derived="true" id="type.74cc03cc-0b68-4634-8c29-3b254383d975">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e0180e27-c0ff-41b7-9bd9-ef492856f097">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3f60bd8e-87bb-44ed-98f4-ce2d9dc978f9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5c6426ee-5039-4937-aab0-b67954ddf58b">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
            </content>
        </type>
        <type derived="true" id="type.5381a953-dbf4-4fe3-90d6-8792d8961160">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.caf077ce-41b4-4b91-a8ea-28c96cf85f05">
            <name>const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8d47e32e-a35f-4ba8-9424-5b006949e675"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.bc6cef97-ac11-49e7-b2cb-93080932663c">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="27218102-4ab7-4928-9de3-3ac0d65373fa"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8fb76833-3fef-4d62-8d97-8c6fb43f5829">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="77ac2c99-6115-4d02-80e7-ef2d3c48f711"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.638d708a-6832-4174-b018-cb288f15ad29">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="f5dc8c53-e221-4dd5-ba46-775f1f0097ae"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3ad4ba83-6d32-4594-92ba-bf2f1ec56d7c">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4f3dabf9-5f8d-4063-8265-9fb707da384e"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ddc5f8cd-d796-431b-bc21-b2161a484c26">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="7bf13ced-92b3-4f1a-be72-8f124ab84fa4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.719f3f45-0702-443e-b7cb-a304726b5040">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="7a0b1fb7-cac1-468b-a564-e20bc47c1824"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.097e4e4f-2e59-4ad8-83d4-c0dc922ba420">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="cd6ffd60-461b-484f-9449-18f88522c3b3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.2b5de95c-1598-4b9b-ad39-b6887cf384b8">
            <name>int</name>
        </type>
        <type basic="true" id="type.3e479da5-83fc-4378-8722-983fc2faf328">
            <name>uchar</name>
        </type>
        <type derived="true" id="type.0da5627c-4e18-4cdc-bd16-219868c2bc2d">
            <name>uchar&amp;</name>
            <content>
                <baseType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.e61141f7-d7da-4aca-9ca2-da73f8b8f7db">
            <name>uchar*</name>
            <content>
                <baseType ref="type.3e479da5-83fc-4378-8722-983fc2faf328"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9">
            <name>uint</name>
        </type>
        <type derived="true" id="type.c1524672-2d01-49f8-9d70-c1c1521aa6fb">
            <name>uint&amp;</name>
            <content>
                <baseType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.ca60f6dd-9436-476f-af7a-f8f55989d9d9">
            <name>uint*</name>
            <content>
                <baseType ref="type.1e3021f7-b668-422c-be1d-dba5fbae6aa9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.787a58ea-5a99-499f-8f8e-6a0690601022">
            <name>ulong</name>
        </type>
        <type derived="true" id="type.b810c316-c824-48cc-861f-c2150ba51f2c">
            <name>ulong&amp;</name>
            <content>
                <baseType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.fd017f1e-3276-41f8-b8f1-03c64b027b4b">
            <name>ulong*</name>
            <content>
                <baseType ref="type.787a58ea-5a99-499f-8f8e-6a0690601022"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.b4ae1e1f-5afd-45aa-945a-26060adbacea">
            <name>wchar</name>
        </type>
        <type derived="true" id="type.a0763378-c245-47b1-a07e-877c5a2d11c4">
            <name>wchar&amp;</name>
            <content>
                <baseType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.b0fc596d-ec47-4b0f-bb70-2d92e3900d9d">
            <name>wchar*</name>
            <content>
                <baseType ref="type.b4ae1e1f-5afd-45aa-945a-26060adbacea"/>
                <qualifier>*</qualifier>
            </content>
        </type>
    </types>
</library>
